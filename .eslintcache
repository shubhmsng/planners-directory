[{"D:\\website\\planners-directory\\src\\index.js":"1","D:\\website\\planners-directory\\src\\configureStore.js":"2","D:\\website\\planners-directory\\src\\App.js":"3","D:\\website\\planners-directory\\src\\actions\\authActions.js":"4","D:\\website\\planners-directory\\src\\utils\\setAuthToken.js":"5","D:\\website\\planners-directory\\src\\actions\\common.js":"6","D:\\website\\planners-directory\\src\\actions\\adminActions.js":"7","D:\\website\\planners-directory\\src\\reducers\\index.js":"8","D:\\website\\planners-directory\\src\\middleware\\monitorReducerEnhancer.js":"9","D:\\website\\planners-directory\\src\\middleware\\logger.js":"10","D:\\website\\planners-directory\\src\\types\\types.js":"11","D:\\website\\planners-directory\\src\\components\\testing\\imageGallery.js":"12","D:\\website\\planners-directory\\src\\reducers\\adminReducer.js":"13","D:\\website\\planners-directory\\src\\reducers\\authReducer.js":"14","D:\\website\\planners-directory\\src\\reducers\\errorReducer.js":"15","D:\\website\\planners-directory\\src\\actions\\optionActions.js":"16","D:\\website\\planners-directory\\src\\reducers\\userReducer.js":"17","D:\\website\\planners-directory\\src\\utils\\getLabels.js":"18","D:\\website\\planners-directory\\src\\reducers\\profileReducer.js":"19","D:\\website\\planners-directory\\src\\reducers\\vendorReducer.js":"20","D:\\website\\planners-directory\\src\\reducers\\plannerReducer.js":"21","D:\\website\\planners-directory\\src\\reducers\\commonReducer.js":"22","D:\\website\\planners-directory\\src\\reducers\\buttonReducer.js":"23","D:\\website\\planners-directory\\src\\reducers\\optionReducer.js":"24","D:\\website\\planners-directory\\src\\utils\\is-empty.js":"25","D:\\website\\planners-directory\\src\\utils\\labelsData.js":"26","D:\\website\\planners-directory\\src\\components\\admin\\index.js":"27","D:\\website\\planners-directory\\src\\components\\admin\\Search\\Search.js":"28","D:\\website\\planners-directory\\src\\components\\admin\\Category\\Category.js":"29","D:\\website\\planners-directory\\src\\components\\admin\\Noticeboard\\Noticeboard.js":"30","D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUs.js":"31","D:\\website\\planners-directory\\src\\components\\admin\\Images\\Images.js":"32","D:\\website\\planners-directory\\src\\components\\admin\\EventType\\EventType.js":"33","D:\\website\\planners-directory\\src\\components\\admin\\UniquePackages\\UniquePackages.js":"34","D:\\website\\planners-directory\\src\\components\\admin\\Catering\\Catering.js":"35","D:\\website\\planners-directory\\src\\components\\admin\\UserStats\\UserStats.js":"36","D:\\website\\planners-directory\\src\\components\\admin\\Terms\\Terms.js":"37","D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicy.js":"38","D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockCountries\\BlockCountries.js":"39","D:\\website\\planners-directory\\src\\components\\admin\\ChangeTargetMarket\\ChangeTargetMarket.js":"40","D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockContinents\\BlockContinent.js":"41","D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUs-View.js":"42","D:\\website\\planners-directory\\src\\components\\admin\\Category\\Category-View.js":"43","D:\\website\\planners-directory\\src\\components\\admin\\Images\\Images-View.js":"44","D:\\website\\planners-directory\\src\\components\\admin\\EventType\\EventType-View.js":"45","D:\\website\\planners-directory\\src\\components\\admin\\UniquePackages\\UniquePackages-View.js":"46","D:\\website\\planners-directory\\src\\components\\admin\\Catering\\Catering-View.js":"47","D:\\website\\planners-directory\\src\\utils\\getCountryName.js":"48","D:\\website\\planners-directory\\src\\actions\\buttonActions.js":"49","D:\\website\\planners-directory\\src\\components\\common\\Spinner\\Spinner.js":"50","D:\\website\\planners-directory\\src\\components\\common\\imageForm.js":"51","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\GreenButton.js":"52","D:\\website\\planners-directory\\src\\components\\admin\\Noticeboard\\NoticeboardView.js":"53","D:\\website\\planners-directory\\src\\components\\common\\SelectListGroup.js":"54","D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockContinents\\BlockContinent-View.js":"55","D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockCountries\\BlockCountries-View.js":"56","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\SaveButton.js":"57","D:\\website\\planners-directory\\src\\components\\admin\\Terms\\TermsView.js":"58","D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicyView.js":"59","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\EditButton.js":"60","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\SmallDeleteBtn.js":"61","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\AddButton.js":"62","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\CancelButton.js":"63","D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUsForm.js":"64","D:\\website\\planners-directory\\src\\components\\common\\InputGroup.js":"65","D:\\website\\planners-directory\\src\\components\\common\\ButtonGroup\\ButtonGroup.js":"66","D:\\website\\planners-directory\\src\\utils\\countryData.js":"67","D:\\website\\planners-directory\\src\\components\\common\\Image_Upload\\ImageUpload.js":"68","D:\\website\\planners-directory\\src\\components\\admin\\Terms\\TermsForm.js":"69","D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicyForm.js":"70","D:\\website\\planners-directory\\src\\components\\website\\index.js":"71","D:\\website\\planners-directory\\src\\components\\website\\home\\Home.js":"72","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PlannerItem.js":"73","D:\\website\\planners-directory\\src\\components\\website\\aboutUs\\AboutUs.js":"74","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Planners.js":"75","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Vendors.js":"76","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Users.js":"77","D:\\website\\planners-directory\\src\\components\\website\\NoResults.js":"78","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\HeadersArea2.js":"79","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\SingleItem.js":"80","D:\\website\\planners-directory\\src\\utils\\Pagination.js":"81","D:\\website\\planners-directory\\src\\actions\\plannerActions.js":"82","D:\\website\\planners-directory\\src\\actions\\vendorActions.js":"83","D:\\website\\planners-directory\\src\\components\\website\\home\\search\\Search.js":"84","D:\\website\\planners-directory\\src\\components\\website\\planners\\PlannerItem\\PlannerItem.js":"85","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Reviews.js":"86","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Packages.js":"87","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Office.js":"88","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Services.js":"89","D:\\website\\planners-directory\\src\\actions\\profileActions.js":"90","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\ServiceItem.js":"91","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PackageItem.js":"92","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\BranchOffice.js":"93","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PackageListItem.js":"94","D:\\website\\planners-directory\\src\\components\\auth\\index.js":"95","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlanner2.js":"96","D:\\website\\planners-directory\\src\\components\\auth\\about-vendor\\AboutVendor.js":"97","D:\\website\\planners-directory\\src\\components\\auth\\login\\Login.js":"98","D:\\website\\planners-directory\\src\\components\\auth\\register\\Register.js":"99","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerView.js":"100","D:\\website\\planners-directory\\src\\components\\auth\\about-vendor\\AboutVendorView.js":"101","D:\\website\\planners-directory\\src\\components\\common\\form.js":"102","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerPopUp.js":"103","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerForm.js":"104","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\index.js":"105","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\AdminDashboard.js":"106","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\DashboardToggler.js":"107","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\Dashboard.js":"108","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\topbar\\AdminTopBar.js":"109","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\topbar\\TopBar.js":"110","D:\\website\\planners-directory\\src\\components\\dashboard\\index.js":"111","D:\\website\\planners-directory\\src\\components\\dashboard\\Noticeboard\\DashBoardNoticeboard.js":"112","D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\Services.js":"113","D:\\website\\planners-directory\\src\\components\\dashboard\\Packages\\Packages.js":"114","D:\\website\\planners-directory\\src\\components\\dashboard\\Profile\\Profile.js":"115","D:\\website\\planners-directory\\src\\components\\dashboard\\Setting\\Setting.js":"116","D:\\website\\planners-directory\\src\\components\\dashboard\\Keywords\\Keywords.js":"117","D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\Office.js":"118","D:\\website\\planners-directory\\src\\components\\dashboard\\UploadImages\\UploadImages.js":"119","D:\\website\\planners-directory\\src\\components\\dashboard\\Keywords\\KeywordsForm.js":"120","D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\ServicesView.js":"121","D:\\website\\planners-directory\\src\\components\\dashboard\\Profile\\ProfileView.js":"122","D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\OfficeView.js":"123","D:\\website\\planners-directory\\src\\components\\dashboard\\Packages\\Packages-View.js":"124","D:\\website\\planners-directory\\src\\components\\dashboard\\UploadImages\\UploadImagesView.js":"125","D:\\website\\planners-directory\\src\\components\\dashboard\\confirmPopupModel\\index.js":"126","D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\ServiceItem.js":"127","D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView2.js":"128","D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView1.js":"129","D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView3.js":"130","D:\\website\\planners-directory\\src\\components\\layout\\website\\Website.js":"131","D:\\website\\planners-directory\\src\\components\\layout\\website\\header\\Header.js":"132","D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\Footer.js":"133","D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\PrivacyPolicy.js":"134","D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\TermsModal.js":"135","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\index.js":"136","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\AdminSidebar.js":"137","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\VendorSidebar.js":"138","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\PlannerSidebar.js":"139","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\Reusable\\SidebarLink.js":"140","D:\\website\\planners-directory\\src\\components\\website\\planners\\Filters\\Filters.js":"141"},{"size":1716,"mtime":1618052770810,"results":"142","hashOfConfig":"143"},{"size":884,"mtime":1618120900589,"results":"144","hashOfConfig":"143"},{"size":13702,"mtime":1618053318858,"results":"145","hashOfConfig":"143"},{"size":2463,"mtime":1609346223711,"results":"146","hashOfConfig":"143"},{"size":271,"mtime":1609346574800,"results":"147","hashOfConfig":"143"},{"size":1125,"mtime":1609346262447,"results":"148","hashOfConfig":"143"},{"size":11878,"mtime":1618170825109,"results":"149","hashOfConfig":"143"},{"size":764,"mtime":1609346495716,"results":"150","hashOfConfig":"143"},{"size":539,"mtime":1609346458288,"results":"151","hashOfConfig":"143"},{"size":267,"mtime":1609346452061,"results":"152","hashOfConfig":"143"},{"size":6750,"mtime":1609346533164,"results":"153","hashOfConfig":"143"},{"size":1870,"mtime":1618048346192,"results":"154","hashOfConfig":"143"},{"size":5576,"mtime":1609346469580,"results":"155","hashOfConfig":"143"},{"size":427,"mtime":1609346474721,"results":"156","hashOfConfig":"143"},{"size":711,"mtime":1609346490757,"results":"157","hashOfConfig":"143"},{"size":14639,"mtime":1609346271103,"results":"158","hashOfConfig":"143"},{"size":313,"mtime":1609346516243,"results":"159","hashOfConfig":"143"},{"size":262,"mtime":1609346559058,"results":"160","hashOfConfig":"143"},{"size":1530,"mtime":1609346511741,"results":"161","hashOfConfig":"143"},{"size":1807,"mtime":1609346521134,"results":"162","hashOfConfig":"143"},{"size":1555,"mtime":1609346507510,"results":"163","hashOfConfig":"143"},{"size":5459,"mtime":1618046236811,"results":"164","hashOfConfig":"143"},{"size":593,"mtime":1609346479164,"results":"165","hashOfConfig":"143"},{"size":5456,"mtime":1609346501677,"results":"166","hashOfConfig":"143"},{"size":223,"mtime":1609346565493,"results":"167","hashOfConfig":"143"},{"size":19292,"mtime":1609346569779,"results":"168","hashOfConfig":"143"},{"size":987,"mtime":1618026652985,"results":"169","hashOfConfig":"143"},{"size":7456,"mtime":1609347890874,"results":"170","hashOfConfig":"143"},{"size":2541,"mtime":1609347325167,"results":"171","hashOfConfig":"143"},{"size":1926,"mtime":1609347614092,"results":"172","hashOfConfig":"143"},{"size":1995,"mtime":1609347061049,"results":"173","hashOfConfig":"143"},{"size":1982,"mtime":1609347557422,"results":"174","hashOfConfig":"143"},{"size":2592,"mtime":1609347515296,"results":"175","hashOfConfig":"143"},{"size":2182,"mtime":1609348054715,"results":"176","hashOfConfig":"143"},{"size":3637,"mtime":1609347380954,"results":"177","hashOfConfig":"143"},{"size":3444,"mtime":1609348088090,"results":"178","hashOfConfig":"143"},{"size":1947,"mtime":1609348000602,"results":"179","hashOfConfig":"143"},{"size":1956,"mtime":1609347675736,"results":"180","hashOfConfig":"143"},{"size":2546,"mtime":1609347235521,"results":"181","hashOfConfig":"143"},{"size":5409,"mtime":1609347482450,"results":"182","hashOfConfig":"143"},{"size":1594,"mtime":1609347167126,"results":"183","hashOfConfig":"143"},{"size":1201,"mtime":1609347054855,"results":"184","hashOfConfig":"143"},{"size":3600,"mtime":1609347318906,"results":"185","hashOfConfig":"143"},{"size":2463,"mtime":1609347552351,"results":"186","hashOfConfig":"143"},{"size":3616,"mtime":1609347508703,"results":"187","hashOfConfig":"143"},{"size":3412,"mtime":1609348049608,"results":"188","hashOfConfig":"143"},{"size":3819,"mtime":1609347376525,"results":"189","hashOfConfig":"143"},{"size":247,"mtime":1609346554430,"results":"190","hashOfConfig":"143"},{"size":366,"mtime":1609346229896,"results":"191","hashOfConfig":"143"},{"size":537,"mtime":1609418004225,"results":"192","hashOfConfig":"143"},{"size":2113,"mtime":1609417936657,"results":"193","hashOfConfig":"143"},{"size":319,"mtime":1618045502805,"results":"194","hashOfConfig":"143"},{"size":2677,"mtime":1609347620251,"results":"195","hashOfConfig":"143"},{"size":982,"mtime":1609417927171,"results":"196","hashOfConfig":"143"},{"size":2445,"mtime":1609347161207,"results":"197","hashOfConfig":"143"},{"size":4365,"mtime":1609347230596,"results":"198","hashOfConfig":"143"},{"size":336,"mtime":1609418526090,"results":"199","hashOfConfig":"143"},{"size":1207,"mtime":1609348010314,"results":"200","hashOfConfig":"143"},{"size":1241,"mtime":1609347686086,"results":"201","hashOfConfig":"143"},{"size":284,"mtime":1609418518782,"results":"202","hashOfConfig":"143"},{"size":322,"mtime":1618045574494,"results":"203","hashOfConfig":"143"},{"size":282,"mtime":1618045591327,"results":"204","hashOfConfig":"143"},{"size":304,"mtime":1609418515279,"results":"205","hashOfConfig":"143"},{"size":759,"mtime":1609347072558,"results":"206","hashOfConfig":"143"},{"size":1032,"mtime":1609417921502,"results":"207","hashOfConfig":"143"},{"size":573,"mtime":1609417988867,"results":"208","hashOfConfig":"143"},{"size":9855,"mtime":1609346550148,"results":"209","hashOfConfig":"143"},{"size":1984,"mtime":1618045658616,"results":"210","hashOfConfig":"143"},{"size":756,"mtime":1609348006179,"results":"211","hashOfConfig":"143"},{"size":765,"mtime":1609347680999,"results":"212","hashOfConfig":"143"},{"size":382,"mtime":1618027873235,"results":"213","hashOfConfig":"143"},{"size":2093,"mtime":1618050213546,"results":"214","hashOfConfig":"143"},{"size":4035,"mtime":1609418646442,"results":"215","hashOfConfig":"143"},{"size":2296,"mtime":1609418710925,"results":"216","hashOfConfig":"143"},{"size":47011,"mtime":1618048104870,"results":"217","hashOfConfig":"143"},{"size":47223,"mtime":1618048122872,"results":"218","hashOfConfig":"143"},{"size":11493,"mtime":1618048132022,"results":"219","hashOfConfig":"143"},{"size":920,"mtime":1609418584731,"results":"220","hashOfConfig":"143"},{"size":2436,"mtime":1609418625582,"results":"221","hashOfConfig":"143"},{"size":9139,"mtime":1609418665571,"results":"222","hashOfConfig":"143"},{"size":3408,"mtime":1609346545383,"results":"223","hashOfConfig":"143"},{"size":5771,"mtime":1609346275958,"results":"224","hashOfConfig":"143"},{"size":5826,"mtime":1609346286133,"results":"225","hashOfConfig":"143"},{"size":1832,"mtime":1618052283825,"results":"226","hashOfConfig":"143"},{"size":9655,"mtime":1618029829353,"results":"227","hashOfConfig":"143"},{"size":1355,"mtime":1609418650512,"results":"228","hashOfConfig":"143"},{"size":3589,"mtime":1609418642544,"results":"229","hashOfConfig":"143"},{"size":3983,"mtime":1609418629746,"results":"230","hashOfConfig":"143"},{"size":1775,"mtime":1609418661538,"results":"231","hashOfConfig":"143"},{"size":4648,"mtime":1609346280822,"results":"232","hashOfConfig":"143"},{"size":1319,"mtime":1609418656844,"results":"233","hashOfConfig":"143"},{"size":3071,"mtime":1609418635083,"results":"234","hashOfConfig":"143"},{"size":2404,"mtime":1609418606777,"results":"235","hashOfConfig":"143"},{"size":1130,"mtime":1609418639016,"results":"236","hashOfConfig":"143"},{"size":279,"mtime":1618028435988,"results":"237","hashOfConfig":"143"},{"size":4560,"mtime":1609348145203,"results":"238","hashOfConfig":"143"},{"size":4808,"mtime":1618028270121,"results":"239","hashOfConfig":"143"},{"size":4671,"mtime":1618028334592,"results":"240","hashOfConfig":"143"},{"size":7277,"mtime":1618028343762,"results":"241","hashOfConfig":"143"},{"size":3099,"mtime":1609348160581,"results":"242","hashOfConfig":"143"},{"size":10932,"mtime":1618028281534,"results":"243","hashOfConfig":"143"},{"size":2558,"mtime":1609417931594,"results":"244","hashOfConfig":"143"},{"size":1083,"mtime":1609348156075,"results":"245","hashOfConfig":"143"},{"size":4942,"mtime":1619035309470,"results":"246","hashOfConfig":"143"},{"size":212,"mtime":1618028635820,"results":"247","hashOfConfig":"143"},{"size":1863,"mtime":1609418318503,"results":"248","hashOfConfig":"143"},{"size":782,"mtime":1609418327046,"results":"249","hashOfConfig":"143"},{"size":3705,"mtime":1609418323242,"results":"250","hashOfConfig":"143"},{"size":1720,"mtime":1609418385960,"results":"251","hashOfConfig":"143"},{"size":4070,"mtime":1619027955616,"results":"252","hashOfConfig":"143"},{"size":533,"mtime":1618028940029,"results":"253","hashOfConfig":"143"},{"size":2051,"mtime":1609418132325,"results":"254","hashOfConfig":"143"},{"size":5901,"mtime":1609418205242,"results":"255","hashOfConfig":"143"},{"size":13694,"mtime":1609418170802,"results":"256","hashOfConfig":"143"},{"size":9346,"mtime":1609418189023,"results":"257","hashOfConfig":"143"},{"size":6135,"mtime":1609418218772,"results":"258","hashOfConfig":"143"},{"size":3791,"mtime":1609418119569,"results":"259","hashOfConfig":"143"},{"size":19647,"mtime":1609418150880,"results":"260","hashOfConfig":"143"},{"size":3689,"mtime":1609418226094,"results":"261","hashOfConfig":"143"},{"size":1186,"mtime":1609418124533,"results":"262","hashOfConfig":"143"},{"size":4611,"mtime":1609418209636,"results":"263","hashOfConfig":"143"},{"size":17405,"mtime":1618046208299,"results":"264","hashOfConfig":"143"},{"size":14271,"mtime":1619035353815,"results":"265","hashOfConfig":"143"},{"size":24495,"mtime":1609418166534,"results":"266","hashOfConfig":"143"},{"size":3025,"mtime":1609418230145,"results":"267","hashOfConfig":"143"},{"size":1642,"mtime":1609418239052,"results":"268","hashOfConfig":"143"},{"size":1170,"mtime":1618905588749,"results":"269","hashOfConfig":"143"},{"size":5419,"mtime":1609418143128,"results":"270","hashOfConfig":"143"},{"size":5420,"mtime":1609418139438,"results":"271","hashOfConfig":"143"},{"size":5420,"mtime":1609418147221,"results":"272","hashOfConfig":"143"},{"size":386,"mtime":1609418477102,"results":"273","hashOfConfig":"143"},{"size":8253,"mtime":1618051076108,"results":"274","hashOfConfig":"143"},{"size":3078,"mtime":1618751891400,"results":"275","hashOfConfig":"143"},{"size":1731,"mtime":1609418460722,"results":"276","hashOfConfig":"143"},{"size":1738,"mtime":1609418464450,"results":"277","hashOfConfig":"143"},{"size":195,"mtime":1618046032096,"results":"278","hashOfConfig":"143"},{"size":2833,"mtime":1618046111363,"results":"279","hashOfConfig":"143"},{"size":4602,"mtime":1618046138974,"results":"280","hashOfConfig":"143"},{"size":4978,"mtime":1618046152375,"results":"281","hashOfConfig":"143"},{"size":759,"mtime":1619027324445,"results":"282","hashOfConfig":"143"},{"size":3726,"mtime":1618027952776,"results":"283","hashOfConfig":"143"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bkfmnq",{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":68,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618"},"D:\\website\\planners-directory\\src\\index.js",[],"D:\\website\\planners-directory\\src\\configureStore.js",[],"D:\\website\\planners-directory\\src\\App.js",["619","620"],"import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport { getTranslatedLabels } from \"./actions/common\";\n// import setAuthToken from \"./utils/setAuthToken\";\n// import jwt_decode from \"jwt-decode\";\n\nimport \"./styles/dashboard.css\";\nimport \"./App.css\";\nimport \"./styles/old.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport Website from \"./components/layout/website/Website\";\nimport {\n  Home,\n  Planners,\n  Vendors,\n  PlannerItem,\n  AboutUsW,\n  Users,\n} from \"./components/website/index\";\nimport {\n  Login,\n  Register,\n  AboutPlanner2,\n  AboutVendor,\n} from \"./components/auth/index\";\n\n//Dashboard Imports\nimport {\n  Dashboard,\n  DashboardToggler,\n  AdminDashboard,\n} from \"./components/layout/dashboard/index\";\nimport { getAdminData } from \"./actions/adminActions\";\n\n//Admin Imports\nimport {\n  Search,\n  Noticeboard,\n  UniquePackages,\n  Category,\n  AboutUs,\n  Terms,\n  PrivacyPolicy,\n  Images,\n  EventType,\n  Catering,\n  BlockContinent,\n  BlockCountries,\n  UserStats,\n  ChangeTargetMarket,\n} from \"./components/admin/index\";\n\n//Dashboard Imports\nimport {\n  DashBoardNoticeboard,\n  Profile,\n  Packages,\n  Office,\n  UploadImages,\n  Keywords,\n  Services,\n  Setting,\n} from \"./components/dashboard/index\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//MiddleWare Code\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ImageGaller from \"./components/testing/imageGallery\";\nimport \"./styles/image-gallery.css\";\nclass App extends Component {\n  componentDidMount() {\n    console.log(\"CDM CALLED\");\n    if (!this.props.translatedLabels) {\n      this.props.getTranslatedLabels(\"eng\");\n    }\n    if (!this.props.loadingfromAdmin) {\n      this.props.getAdminData();\n    }\n  }\n\n  render() {\n    console.log(this.props.lang);\n    return (\n      <Router>\n        <React.Fragment>\n          <ToastContainer />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Website>\n                  <Home t={this.props.t} />\n                </Website>\n              )}\n            />\n            {/* <Route\n              path=\"/planers/search\"\n              render={({ location }) => (\n                <Website>\n                  <Planners location={location} />\n                </Website>\n              )}\n            /> */}\n            {/* <Route\n              exact\n              path=\"/planners\"\n              render={({ location }) => (\n                <Website>\n                  <Planners location={location} />\n                </Website>\n              )}\n            /> */}\n            {/* <Route\n              exact\n              path=\"/planners\"\n              render={({ location, history }) => (\n                <Website>\n                  <Users location={location} history={history} />\n                </Website>\n              )}\n            /> */}\n            <Route\n              exact\n              path=\"/planners\"\n              render={() => (\n                <Website>\n                  <Planners />\n                </Website>\n              )}\n            />\n            {/* <Route\n              exact\n              path=\"/vendors\"\n              render={({ location, history }) => (\n                <Website>\n                  <Users location={location} history={history} />\n                </Website>\n              )}\n            /> */}\n            <Route\n              exact\n              path=\"/vendors\"\n              render={() => (\n                <Website>\n                  <Vendors />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/planners/:id\"\n              render={({ match, location }) => (\n                <Website>\n                  <PlannerItem match={match} location={location} />\n                </Website>\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/vendors/:id\"\n              render={({ match, location, history }) => (\n                <Website>\n                  <PlannerItem\n                    match={match}\n                    location={location}\n                    history={history}\n                  />\n                </Website>\n              )}\n            />\n            {/* <Route\n              exact\n              path=\"/planner/search\"\n              render={location => (\n                <Website>\n                  <Register location={location} />\n                </Website>\n              )}\n            /> */}\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Website>\n                  <Login t={this.props.t} />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={() => (\n                <Website>\n                  <Register t={this.props.t} />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/about-us\"\n              render={() => (\n                <Website>\n                  <AboutUsW t={this.props.t} />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/about-planner\"\n              render={() => (\n                <Website>\n                  <AboutPlanner2 t={this.props.t} />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/about-vendor\"\n              render={() => (\n                <Website>\n                  <AboutVendor\n                    websiteBg={this.props.websiteBg}\n                    t={this.props.t}\n                  />\n                </Website>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Search />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/user\"\n              render={({ location }) => (\n                <AdminDashboard>\n                  <div>\n                    <ChangeTargetMarket location={location} />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/noticeboard\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Noticeboard />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/packages\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <UniquePackages />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/categories\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Category />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/about-us\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <AboutUs />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/terms\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Terms />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/privacy-policy\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <PrivacyPolicy />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/upload-bg\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Images />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/event-types\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <EventType />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/caterings\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Catering />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/continents\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <BlockContinent />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/countries\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <BlockCountries />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/user-stats\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <UserStats />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/admin/setting\"\n              render={() => (\n                <AdminDashboard>\n                  <div>\n                    <Setting />\n                  </div>\n                </AdminDashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard-toggler\"\n              render={() => <DashboardToggler />}\n            />\n            <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n            <Route\n              exact\n              path=\"/dashboard/noticeboard\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <DashBoardNoticeboard />\n                  </div>{\" \"}\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/vendor/noticeboard\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <DashBoardNoticeboard />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/profile\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Profile />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/packages\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Packages />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/office\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Office />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/images\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <UploadImages />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/keywords\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Keywords />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/services\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Services />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route\n              exact\n              path=\"/dashboard/settings\"\n              render={() => (\n                <Dashboard>\n                  <div>\n                    <Setting />\n                  </div>\n                </Dashboard>\n              )}\n            />\n            <Route exact path=\"/testing\" render={() => <ImageGaller />} />\n          </Switch>\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loadingfromAdmin: state.common.loadingfromAdmin,\n  websiteBg: state.admin.admin.websiteBg,\n  t: state.common.translatedLabels,\n  lang: state.common.language,\n});\n\nexport default connect(mapStateToProps, { getAdminData, getTranslatedLabels })(\n  App\n);\n","D:\\website\\planners-directory\\src\\actions\\authActions.js",[],"D:\\website\\planners-directory\\src\\utils\\setAuthToken.js",[],"D:\\website\\planners-directory\\src\\actions\\common.js",["621"],"import {\n  LOADING,\n  SET_LOADING_FALSE,\n  ADMIN_DATA_LOADED,\n  CLEAR_NO_RESULTS,\n  CLEAR_ERRORS,\n  GET_TRANSLATED_LABELS,\n  DUMMY_ACTION,\n  GET_LANGUAGE,\n  RESET_RESULTS,\n  RESET_PACK_AND_SERV\n} from \"../types/types\";\nimport getLabels from \"../utils/getLabels\";\n\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};\n\n//Loading False\nexport const setLoadingFalse = () => {\n  return {\n    type: SET_LOADING_FALSE\n  };\n};\n\nexport const adminDataLoaded = () => {\n  return {\n    type: ADMIN_DATA_LOADED\n  };\n};\n\nexport const clearNoResults = () => {\n  return {\n    type: CLEAR_NO_RESULTS\n  };\n};\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n\nexport const getTranslatedLabels = lang => dispatch => {\n  const findLabels = getLabels(lang);\n  dispatch({\n    type: GET_TRANSLATED_LABELS,\n    payload: findLabels\n  });\n\n  dispatch({\n    type: GET_LANGUAGE,\n    payload: lang\n  });\n};\n\nexport const resetResults = () => dispatch => {\n  dispatch({\n    type: RESET_RESULTS\n  });\n};\n\nexport const resetPackAndServ = () => dispatch => {\n  dispatch({\n    type: RESET_PACK_AND_SERV\n  });\n};\n","D:\\website\\planners-directory\\src\\actions\\adminActions.js",["622","623","624","625","626","627","628","629","630","631"],"import axios from \"axios\";\nimport { adminDataLoaded } from \"./common\";\n\nimport {\n  GET_CATERING_OPTIONS,\n  GET_ABOUT_US,\n  GET_TERMS,\n  GET_CATERING,\n  GET_ERRORS,\n  GET_NOTICEBOARD,\n  GET_CATEGORY,\n  GET_USERS,\n  GET_EVENT_TYPES,\n  GET_USER_STATS,\n  GET_ALL_COUNTRIES,\n  GET_ADMIN_DATA,\n  PROFILES_LOADING,\n  GET_ADMIN_PACKAGES,\n  GET_CONTINENTS,\n  SEARCH_BY_ADMIN,\n  GET_BLOCK_PLANNER_COUNT,\n  GET_BLOCK_VENDOR_COUNT,\n  GET_PLANNER_COUNT,\n  GET_VENDOR_COUNT,\n  GET_AFRICAN_COUNTRIES,\n  GET_UNBLOCK_COUNTRIES,\n  GET_UNBLOCKED_CONTINENTS,\n  GET_COUNTRIES_BY_CONTINENT,\n  GET_BLOCKED_COUNTRIES,\n  GET_IMAGES_FROM_ADMIN,\n  GET_STATES,\n  GET_CITIES_BY_STATE,\n  CLEAR_LOCATION_OPTIONS,\n  NOTICEBOARD_LOADED,\n  BLOCK_UNBLOCK_USER,\n  DELETE_USER,\n  UNBLOCK_COUNTRY,\n  BLOCK_CONTINENT,\n  UNBLOCK_CONTINENT,\n  BLOCK_UNBLOCK_CONTINENT\n} from \"../types/types\";\n\nimport {\n  getCateringOptions,\n  getCategoriesOptions,\n  getEventTypeOptions\n} from \"./optionActions\";\nimport { setLoading, setLoadingFalse } from \"./common\";\n\nexport const getAdminData = () => dispatch => {\n  axios\n    .get(\"/api/admin\")\n    .then(res => {\n      let data = {...res.data};\n      data.aboutUs = Object.keys(res.data).length > 0 ? res.data.aboutUs.replace(/\\\\\"/g, '\"') : \"\";\n      data.terms = Object.keys(res.data).length > 0 ? res.data.terms.replace(/\\\\\"/g, '\"') : \"\";\n      data.pp = Object.keys(res.data).length > 0 ? res.data.pp.replace(/\\\\\"/g, '\"') : \"\";\n      data.pp = Object.keys(res.data).length > 0 ? data.pp.replace(/\\\\n/g, \"\"): \"\";\n      data.pp = Object.keys(res.data).length > 0 ? data.pp.replace(/\\\\/g, \"\"): \"\";\n      data.pp = Object.keys(res.data).length > 0 ? data.pp.replace(/p/g, \"\"): \"\";\n      console.log(data);\n      dispatch({ type: GET_ADMIN_DATA, payload: data });\n      dispatch(getCateringOptions(res.data.catering));\n      dispatch(getCategoriesOptions(res.data.categories));\n      dispatch(getEventTypeOptions(res.data.eventTypes));\n    })\n    .then(() => dispatch(adminDataLoaded()))\n    .catch(err => console.log(err));\n};\n\nexport const getAdminDataOnSuccess = data => dispatch => {\n  dispatch(getCateringOptions(data.catering));\n  dispatch(getCategoriesOptions(data.categories));\n  // dispatch(getEventTypeOptions(data.eventTypes));\n};\n\nexport const addNoticeboard = (newNotice, history) => dispatch => {\n  axios\n    .post(\"/api/admin/noticeboard\", newNotice)\n    .then(window.location.reload())\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\nexport const getNoticeboard = () => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get(\"/api/admin/noticeboard\")\n    .then(res => dispatch({ type: GET_NOTICEBOARD, payload: res.data }))\n    .then(() => dispatch({ type: NOTICEBOARD_LOADED }))\n    .then(() => dispatch(setLoadingFalse()))\n    .catch(err => dispatch({ type: GET_NOTICEBOARD, payload: {} }));\n};\n\nexport const getAdminPackages = () => dispatch => {\n  axios\n    .get(\"/api/admin/packages\")\n    .then(res =>\n      dispatch({ type: GET_ADMIN_PACKAGES, payload: res.data.packages })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const addCategory = newCategory => dispatch => {\n  axios\n    .post(\"/api/admin/category\", newCategory)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err));\n};\n\nexport const addBgImages = uploaded => dispatch => {\n  console.log(uploaded);\n  axios\n    .post(\"/api/admin/bg-images\", uploaded)\n    .then(res => console.log(res.status))\n    .catch(err => console.log(err));\n};\n\nexport const getUsers = () => dispatch => {\n  axios\n    .get(\"/api/users\")\n    .then(res => dispatch({ type: GET_USERS, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\nexport const addEventTypes = eventType => dispatch => {\n  axios\n    .post(\"/api/admin/event-types\", eventType)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err));\n};\n\nexport const getAllCountries = () => dispatch => {\n  axios\n    .get(\"/api/location/countries/all\")\n    .then(res => dispatch({ type: GET_ALL_COUNTRIES, payload: res.data }))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\nexport const addAdminPackages = updatedPackages => dispatch => {\n  axios\n    .post(\"/api/admin/packages\", updatedPackages)\n    .then()\n    .catch(err => console.log(err));\n};\n\nexport const setProfilesLoading = () => {\n  return {\n    type: PROFILES_LOADING\n  };\n};\n\n//Getting All Continents\nexport const getContinents = () => dispatch => {\n  axios\n    .get(\"/api/location/continents\")\n    .then(res => dispatch({ type: GET_CONTINENTS, payload: res.data }))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err }));\n};\n\n// Make a post request to block a specific continent\nexport const blockContinent = continent => dispatch => {\n  dispatch({ type: BLOCK_UNBLOCK_CONTINENT, payload: continent.continent });\n  axios\n    .post(\"/api/location/continents/block\", continent)\n    .catch(err => console.log(err));\n};\n\n// Make a post request to unblock a specific continent\nexport const unBlockContinent = continent => dispatch => {\n  dispatch({ type: BLOCK_UNBLOCK_CONTINENT, payload: continent.continent });\n  axios\n    .post(\"/api/location/continents/unblock\", continent)\n    .catch(err => console.log(err));\n};\n\n// Making a post request to search planners and vendors by Admin\nexport const searchByAdmin = searchCriteria => dispatch => {\n  axios\n    .post(\"/api/admin/search\", searchCriteria)\n    .then(res => dispatch({ type: SEARCH_BY_ADMIN, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n// Deleting a User (Planner or Vendor) by Admin\nexport const deleteUser = user => dispatch => {\n  dispatch({ type: DELETE_USER, payload: user.id });\n  axios\n    .post(\"/api/admin/users/delete\", user)\n    .then(console.log(\"Deleted\"))\n    .catch(err => console.log(err));\n};\n\n//Block a specific User by Admin\nexport const blockUser = user => dispatch => {\n  dispatch({ type: BLOCK_UNBLOCK_USER, payload: user.id });\n  axios\n    .post(\"/api/admin/users/block\", user)\n    .then()\n    .catch(err => console.log(err));\n};\n\n//Block a specific User by Admin\nexport const unBlockUser = user => dispatch => {\n  dispatch({ type: BLOCK_UNBLOCK_USER, payload: user.id });\n  axios\n    .post(\"/api/admin/users/unblock\", user)\n    .then()\n    .catch(err => console.log(err));\n};\n\nexport const addCatering = catering => dispatch => {\n  console.log(\"I am hit\");\n  axios\n    .post(\"/api/admin/catering\", catering)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err));\n};\n\n// Deleting a Specific Catering Capacity\nexport const deleteCatering = catering => dispatch => {\n  axios\n    .post(\"/api/admin/catering/delete\", catering)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err));\n};\n\n//Deleting a Specific Category\nexport const deleteCategory = category => dispatch => {\n  axios\n    .post(\"/api/admin/category/delete\", category)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err.message));\n};\n\n//Deleting a Specific Event Type\nexport const deleteEventTypes = eventType => dispatch => {\n  axios\n    .post(\"/api/admin/event-types/delete\", eventType)\n    .then(admin => dispatch({ type: GET_ADMIN_DATA, payload: admin.data }))\n    .catch(err => console.log(err.message));\n};\n\n//Getting Count of users\nexport const getUserCount = () => dispatch => {\n  axios\n    .get(\"/api/admin/stats/total\")\n    .then(res => dispatch({ type: GET_USER_STATS, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Getting Planner's Count\nexport const getPlannerCount = () => dispatch => {\n  axios\n    .get(\"/api/admin/stats/planners\")\n    .then(res => dispatch({ type: GET_PLANNER_COUNT, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Getting Vendor's Count\nexport const getVendorCount = () => dispatch => {\n  axios\n    .get(\"/api/admin/stats/vendors\")\n    .then(res => dispatch({ type: GET_VENDOR_COUNT, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Getting Block Planner's Count\nexport const getBlockPlannerCount = () => dispatch => {\n  axios\n    .get(\"/api/admin/stats/block-planners\")\n    .then(res => dispatch({ type: GET_BLOCK_PLANNER_COUNT, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Getting Block Vendor's Count\nexport const getBlockVendorCount = () => dispatch => {\n  axios\n    .get(\"/api/admin/stats/block-vendors\")\n    .then(res => dispatch({ type: GET_BLOCK_VENDOR_COUNT, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Getting List of African Countries\n\n//Getting List of All Countries Which are UnBlocked\nexport const getUnBlockCountries = () => dispatch => {\n  axios\n    .get(\"/api/admin/countries\")\n    .then(res => dispatch({ type: GET_UNBLOCK_COUNTRIES, payload: res.data }))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err }));\n};\n\n// Adding About Us by Admin\nexport const addAboutUs = aboutUs => dispatch => {\n  axios\n    .post(\"/api/admin/about-us\", aboutUs)\n    .then(admin =>\n      dispatch({\n        type: GET_ADMIN_DATA,\n        payload: admin.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\n// Adding T&C by Admin\nexport const addTerms = terms => dispatch => {\n  axios\n    .post(\"/api/admin/terms\", terms)\n    .then(admin =>\n      dispatch({\n        type: GET_ADMIN_DATA,\n        payload: admin.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\n// Adding Privacy Policy by Admin\nexport const addPP = pp => dispatch => {\n  axios\n    .post(\"/api/admin/privacy-policy\", pp)\n    .then(admin =>\n      dispatch({\n        type: GET_ADMIN_DATA,\n        payload: admin.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\n//Getting Terms and Condition of Website\nexport const getTerms = () => dispatch => {\n  axios\n    .get(\"/api/admin/terms\")\n    .then(res => dispatch({ type: GET_TERMS, payload: res.data.terms }));\n};\n\n//Getting List of Blocked Countries\nexport const getBlockedCountries = () => dispatch => {\n  axios\n    .get(\"/api/location/countries/cblocked\")\n    .then(res => dispatch({ type: GET_BLOCKED_COUNTRIES, payload: res.data }))\n    .catch(err => console.log(err));\n};\n\n//Blocking a Specific Country\nexport const blockCountry = country => dispatch => {\n  axios\n    .post(\"/api/location/countries/block\", country)\n    .then(dispatch(getBlockedCountries()))\n    .catch(err => console.log(err));\n};\n\n//UnBlocking a Specific Country\nexport const unBlockCountry = country => dispatch => {\n  dispatch({ type: UNBLOCK_COUNTRY, payload: country.country });\n  axios\n    .post(\"/api/location/countries/unblock\", country)\n    .then()\n    .catch(err => console.log(err));\n};\n\n//Getting Admin Images\nexport const getAdminImages = () => dispatch => {\n  axios\n    .get(\"/api/admin/bg-images\")\n    .then(images =>\n      dispatch({ type: GET_IMAGES_FROM_ADMIN, payload: images.data })\n    )\n    .catch(err => console.log(err));\n};\n\n// Changing Target Market\nexport const changeTargetMarketByAdmin = data => dispatch => {\n  axios\n    .post(\"/api/admin/target-market\", data)\n    .then(() => console.log(\"Success\"))\n    .catch(err => console.log(err));\n};\n\n//Getting States of a Particular Country\nexport const getStates = label => dispatch => {\n  axios\n    .post(\"/api/location/countries/states\", label)\n    .then(states => dispatch({ type: GET_STATES, payload: states.data }))\n    .catch(err => console.log(err));\n};\n\n//Gettin Cities of a Particular State\nexport const getCitiesByState = label => dispatch => {\n  axios\n    .post(\"/api/location/states/countries\", label)\n    .then(cities =>\n      dispatch({ type: GET_CITIES_BY_STATE, payload: cities.data })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const clearLocationOptions = () => {\n  return {\n    type: CLEAR_LOCATION_OPTIONS\n  };\n};\n","D:\\website\\planners-directory\\src\\reducers\\index.js",[],"D:\\website\\planners-directory\\src\\middleware\\monitorReducerEnhancer.js",["632"],"const round = number => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    // console.log(\"reducer process time:\", diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","D:\\website\\planners-directory\\src\\middleware\\logger.js",[],"D:\\website\\planners-directory\\src\\types\\types.js",[],"D:\\website\\planners-directory\\src\\components\\testing\\imageGallery.js",[],"D:\\website\\planners-directory\\src\\reducers\\adminReducer.js",["633"],"import {\n  GET_ABOUT_US,\n  GET_CATERING,\n  GET_NOTICEBOARD,\n  GET_CATEGORY,\n  GET_USERS,\n  GET_EVENT_TYPES,\n  GET_USER_STATS,\n  GET_ALL_COUNTRIES,\n  GET_ADMIN_DATA,\n  PROFILES_LOADING,\n  GET_ADMIN_PACKAGES,\n  GET_CONTINENTS,\n  SEARCH_BY_ADMIN,\n  GET_BLOCK_PLANNER_COUNT,\n  GET_BLOCK_VENDOR_COUNT,\n  GET_PLANNER_COUNT,\n  GET_VENDOR_COUNT,\n  GET_AFRICAN_COUNTRIES,\n  GET_UNBLOCK_COUNTRIES,\n  GET_UNBLOCKED_CONTINENTS,\n  GET_COUNTRIES_BY_CONTINENT,\n  GET_TERMS,\n  GET_BLOCKED_COUNTRIES,\n  GET_IMAGES_FROM_ADMIN,\n  GET_STATES,\n  GET_CITIES_BY_STATE,\n  CLEAR_LOCATION_OPTIONS,\n  BLOCK_UNBLOCK_USER,\n  DELETE_USER,\n  UNBLOCK_COUNTRY,\n  BLOCK_UNBLOCK_CONTINENT\n} from \"../types/types\";\n\nconst initialState = {\n  about_us: null,\n  admin: {},\n  terms: null,\n  cateringDisplay: [],\n  cateringAdmin: [],\n  notices: [],\n  categories: [],\n  eventTypes: [],\n  countries: [],\n  packages: null,\n  loading: false,\n  continents: [],\n  searchResults: [],\n  caterings: [],\n  usersCount: \"\",\n  plannerCount: \"\",\n  vendorCount: \"\",\n  blockPlannerCount: \"\",\n  blockVendorCount: \"\",\n  africanCountries: [],\n  unBlockCountries: [],\n  unBlockContinents: [],\n  countriesByContinent: [],\n  blockedCountries: [],\n  images: {},\n  states: [],\n  cities: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ADMIN_DATA:\n      return {\n        ...state,\n        admin: action.payload\n      };\n\n    case PROFILES_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_ABOUT_US:\n      return {\n        ...state,\n        about_us: action.payload\n      };\n    case GET_TERMS:\n      return {\n        ...state,\n        terms: action.payload\n      };\n\n    case GET_CATERING:\n      return {\n        ...state,\n        caterings: action.payload\n      };\n\n    case GET_NOTICEBOARD:\n      return {\n        ...state,\n        notices: action.payload\n      };\n\n    case GET_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload\n      };\n\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n\n    case GET_EVENT_TYPES:\n      return {\n        ...state,\n        eventTypes: action.payload\n      };\n\n    case GET_ALL_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload\n      };\n\n    case GET_ADMIN_PACKAGES:\n      return {\n        ...state,\n        packages: action.payload\n      };\n\n    case GET_CONTINENTS:\n      return {\n        ...state,\n        continents: action.payload\n      };\n\n    case SEARCH_BY_ADMIN:\n      return {\n        ...state,\n        searchResults: action.payload\n      };\n\n    case BLOCK_UNBLOCK_USER:\n      var searchResults = [...state.searchResults];\n      let id = action.payload;\n      for (var i in searchResults) {\n        if (searchResults[i]._id === id) {\n          searchResults[i].liveProfile = !searchResults[i].liveProfile;\n        }\n      }\n      return {\n        ...state,\n        searchResults: searchResults\n      };\n\n    case BLOCK_UNBLOCK_CONTINENT:\n      var continents = [...state.continents];\n      let cont = action.payload;\n      for (var a in continents) {\n        if (continents[a].continent === cont) {\n          continents[a].isBlocked = !continents[a].isBlocked;\n        }\n      }\n      return {\n        ...state,\n        continents: continents\n      };\n\n    case DELETE_USER:\n      let userId = action.payload;\n      var oldResults = [...state.searchResults];\n      const updatedResults = oldResults.filter(\n        user => user.user._id !== userId\n      );\n\n      return {\n        ...state,\n        searchResults: updatedResults\n      };\n\n    case GET_USER_STATS:\n      return {\n        ...state,\n        usersCount: action.payload\n      };\n\n    case GET_PLANNER_COUNT:\n      return {\n        ...state,\n        plannerCount: action.payload\n      };\n\n    case GET_VENDOR_COUNT:\n      return {\n        ...state,\n        vendorCount: action.payload\n      };\n\n    case GET_BLOCK_PLANNER_COUNT:\n      return {\n        ...state,\n        blockPlannerCount: action.payload\n      };\n\n    case GET_BLOCK_VENDOR_COUNT:\n      return {\n        ...state,\n        blockVendorCount: action.payload\n      };\n    case GET_AFRICAN_COUNTRIES:\n      return {\n        ...state,\n        africanCountries: action.payload\n      };\n    case GET_UNBLOCK_COUNTRIES:\n      return {\n        ...state,\n        unBlockCountries: action.payload\n      };\n    case GET_UNBLOCKED_CONTINENTS:\n      return {\n        ...state,\n        unBlockContinents: action.payload\n      };\n    case GET_COUNTRIES_BY_CONTINENT:\n      return {\n        ...state,\n        countriesByContinent: action.payload\n      };\n\n    case GET_BLOCKED_COUNTRIES:\n      return {\n        ...state,\n        blockedCountries: action.payload\n      };\n\n    case UNBLOCK_COUNTRY:\n      let countr = action.payload;\n      console.log(countr);\n      var oldCountries = [...state.blockedCountries];\n      const updatedCountries = oldCountries.filter(\n        country => country.sortname !== countr\n      );\n      return {\n        ...state,\n        blockedCountries: updatedCountries\n      };\n\n    case GET_IMAGES_FROM_ADMIN:\n      return {\n        ...state,\n        images: action.payload\n      };\n\n    case GET_STATES:\n      return {\n        ...state,\n        states: action.payload\n      };\n\n    case GET_CITIES_BY_STATE:\n      return {\n        ...state,\n        cities: action.payload\n      };\n\n    case CLEAR_LOCATION_OPTIONS:\n      return {\n        ...state,\n        countriesByContinent: [],\n        states: [],\n        cities: []\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\authReducer.js",["634"],"import isEmpty from \"../utils/is-empty\";\n\nimport { SET_CURRENT_USER } from \"../types/types\";\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\errorReducer.js",["635"],"import {\n  GET_LOGIN_ERRORS,\n  GET_REGISTER_ERRORS,\n  GET_ERRORS,\n  CLEAR_ERRORS\n} from \"../types/types\";\n\nconst initialState = {\n  errors: null,\n  loginErrors: null,\n  registerErrors: null\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_LOGIN_ERRORS:\n      return {\n        ...state,\n        loginErrors: action.payload\n      };\n    case GET_REGISTER_ERRORS:\n      return {\n        ...state,\n        registerErrors: action.payload\n      };\n\n    case GET_ERRORS:\n      return {\n        ...state,\n        errors: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        errors: null\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\actions\\optionActions.js",["636","637","638","639","640"],"import axios from \"axios\";\nimport {\n  GET_UNBLOCKED_CONTINENT_OPTIONS,\n  GET_ALL_AFRICAN_COUNTRIES_OPTIONS,\n  GET_UNBLOCKED_AFRICAN_COUNTRIES_OPTIONS,\n  GET_COUNTRIES_BY_CONTINENT_OPTIONS,\n  GET_ALL_COUNTRIES_OPTIONS,\n  GET_STATES_OPTIONS,\n  GET_CITY_OPTIONS,\n  GET_CATEGORIES_OPTIONS,\n  GET_EVENT_TYPE_OPTIONS,\n  GET_TARGET_MARKET_OPTIONS,\n  GET_CATERING_OPTIONS,\n  GET_REVENUE_OPTIONS,\n  SET_OPTIONS_LOADING,\n  CLEAR_OPTIONS_LOADING,\n  SET_PLANNER_OPTIONS_LOADED,\n  SET_VENDOR_OPTIONS_LOADED,\n  GET_UNBLOCKED_CONTINENTS,\n  GET_BUSINESS_TITLE_OPTIONS,\n  GET_GENDER_OPTIONS,\n  GET_BRANCH1_COUNTRIES,\n  GET_BRANCH1_STATE,\n  GET_BRANCH2_STATE,\n  GET_BRANCH3_STATE,\n  GET_BRANCH1_CITY,\n  GET_BRANCH2_CITY,\n  GET_BRANCH3_CITY,\n  GET_BRANCH3_COUNTRIES,\n  GET_BRANCH2_COUNTRIES,\n  GET_CATEGORIES_OPTIONS_FOR_FILTERS,\n  GET_EVENT_TYPE_OPTIONS_FOR_FILTERS,\n  SET_FILTER_OPTIONS,\n  GET_ALL_CONTINENTS,\n} from \"../types/types\";\n\n//Getting All Continents\nexport const getAllContinents = () => (dispatch) => {\n  const allContinents = [\n    { label: \"Select Continent\", value: \"\" },\n    { label: \"Asia\", value: \"Asia\" },\n    { label: \"Africa\", value: \"Africa\" },\n    { label: \"Antarctica\", value: \"Antarctica\" },\n    { label: \"Europe\", value: \"Europe\" },\n    { label: \"Oceania\", value: \"Oceania\" },\n    { label: \"North America\", value: \"North America\" },\n    { label: \"South America\", value: \"South America\" },\n  ];\n  dispatch({\n    type: GET_ALL_CONTINENTS,\n    payload: allContinents,\n  });\n};\n\n//Getting UnBlocked Continents\nexport const getUnBlockedContinentsOptions = () => (dispatch) => {\n  axios\n    .get(\"/api/location/continents/unblocked\")\n    .then((ubc) => {\n      const unBlockedContinentOptions = ubc.data.map((continent, key) => ({\n        label: continent.continent,\n        value: continent.continent,\n      }));\n      unBlockedContinentOptions.unshift({\n        label: \"Select Continent..\",\n        value: \"\",\n      });\n      dispatch({\n        type: GET_UNBLOCKED_CONTINENT_OPTIONS,\n        payload: unBlockedContinentOptions,\n      });\n    })\n    .catch((err) =>\n      dispatch({ type: GET_UNBLOCKED_CONTINENT_OPTIONS, payload: [] })\n    );\n};\n\n//Getting Countries by Continent\nexport const getCountriesByContinentOptions = (continent) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/continent\", continent)\n    .then((cbc) => {\n      const countriesByContinentOptions = cbc.data.map((country, key) => ({\n        label: country.name,\n        value: country.sortname,\n      }));\n      countriesByContinentOptions.unshift({\n        label: \"Select Country..\",\n        value: \"\",\n      });\n      dispatch({\n        type: GET_COUNTRIES_BY_CONTINENT_OPTIONS,\n        payload: countriesByContinentOptions,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getBranch1Countries = (continent) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/continent\", continent)\n    .then((cbc) => {\n      const countriesByContinentOptions = cbc.data.map((country, key) => ({\n        label: country.name,\n        value: country.sortname,\n      }));\n      countriesByContinentOptions.unshift({\n        label: \"Select Country..\",\n        value: \"\",\n      });\n      dispatch({\n        type: GET_BRANCH1_COUNTRIES,\n        payload: countriesByContinentOptions,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getBranch2Countries = (continent) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/continent\", continent)\n    .then((cbc) => {\n      const countriesByContinentOptions = cbc.data.map((country, key) => ({\n        label: country.name,\n        value: country.sortname,\n      }));\n      countriesByContinentOptions.unshift({\n        label: \"Select Country..\",\n        value: \"\",\n      });\n      dispatch({\n        type: GET_BRANCH2_COUNTRIES,\n        payload: countriesByContinentOptions,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getBranch3Countries = (continent) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/continent\", continent)\n    .then((cbc) => {\n      const countriesByContinentOptions = cbc.data.map((country, key) => ({\n        label: country.name,\n        value: country.sortname,\n      }));\n      countriesByContinentOptions.unshift({\n        label: \"Select Country..\",\n        value: \"\",\n      });\n      dispatch({\n        type: GET_BRANCH3_COUNTRIES,\n        payload: countriesByContinentOptions,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\n//Getting All Countries Options of the World\nexport const getAllCountriesOptions = () => (dispatch) => {\n  axios\n    .get(\"/api/location/countries/all\")\n    .then((allCountries) => {\n      const allCountriesOptions = allCountries.data.map((country) => ({\n        label: country.name,\n        value: country.sortname,\n      }));\n      allCountriesOptions.unshift({ label: \"Select Country...\", value: \"\" });\n      dispatch({\n        type: GET_ALL_COUNTRIES_OPTIONS,\n        payload: allCountriesOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_ALL_COUNTRIES_OPTIONS, payload: [] }));\n};\n\n//Getting List of All Countries of Africa\nexport const getAllAfricanCountries = () => (dispatch) => {\n  console.log(\"African Countries HIT\");\n  axios\n    .get(\"/api/location/countries/africa/all\")\n    .then((africanCountries) => {\n      console.log(\"African Countrie\", africanCountries);\n      const allAfricanCountriesOptions = africanCountries.data.map(\n        (acountry) => ({\n          label: acountry.name,\n          value: acountry.sortname,\n        })\n      );\n      allAfricanCountriesOptions.unshift({\n        label: \"Select Country...\",\n        value: \"\",\n      });\n\n      dispatch({\n        type: GET_ALL_AFRICAN_COUNTRIES_OPTIONS,\n        payload: allAfricanCountriesOptions,\n      });\n      console.log(\"Dispatch Executed\");\n    })\n\n    .catch(() =>\n      dispatch({ type: GET_ALL_AFRICAN_COUNTRIES_OPTIONS, payload: [] })\n    );\n};\n\n//Getting List of Options for Unblocked African Countries\nexport const getUnBlockedAfricanCountries = () => (dispatch) => {\n  axios\n    .get(\"/api/location/countries/africa\")\n    .then((africanCountries) => {\n      const labels = [];\n      africanCountries.data.forEach((country) => {\n        labels.push(country.sortname);\n      });\n      console.log(labels);\n      dispatch({\n        type: GET_UNBLOCKED_AFRICAN_COUNTRIES_OPTIONS,\n        payload: labels,\n      });\n    })\n    .catch(() =>\n      dispatch({ type: GET_UNBLOCKED_AFRICAN_COUNTRIES_OPTIONS, payload: [] })\n    );\n};\n\n//Getting State By Country Options\nexport const getStatesOptions = (label) => async (dispatch) => {\n  try {\n    const states = await axios.post(\"/api/location/countries/states\", label);\n    const stateOptions = states.data.map((state, key) => ({\n      label: state.name,\n      value: state.id,\n    }));\n    stateOptions.unshift({ label: \"Select State...\", value: \"\" });\n    dispatch({\n      type: GET_STATES_OPTIONS,\n      payload: stateOptions,\n    });\n    return { success: 1 };\n  } catch (e) {\n    return { success: 0 };\n  }\n};\n\nexport const getBranch1States = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/states\", label)\n    .then((states) => {\n      const stateOptions = states.data.map((state, key) => ({\n        label: state.name,\n        value: state.id,\n      }));\n      stateOptions.unshift({ label: \"Select State...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH1_STATE,\n        payload: stateOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\nexport const getBranch2States = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/states\", label)\n    .then((states) => {\n      const stateOptions = states.data.map((state, key) => ({\n        label: state.name,\n        value: state.id,\n      }));\n      stateOptions.unshift({ label: \"Select State...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH2_STATE,\n        payload: stateOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\nexport const getBranch3States = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/countries/states\", label)\n    .then((states) => {\n      const stateOptions = states.data.map((state, key) => ({\n        label: state.name,\n        value: state.id,\n      }));\n      stateOptions.unshift({ label: \"Select State...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH3_STATE,\n        payload: stateOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\n//Getting All Cities By State Options\nexport const getCityOptions = (label) => async (dispatch) => {\n  try {\n    const cities = await axios.post(\"/api/location/states/countries\", label);\n    const cityOptions = cities.data.map((city, key) => ({\n      label: city.name,\n      value: city.name,\n    }));\n    cityOptions.unshift({ label: \"Select City...\", value: \"\" });\n    dispatch({\n      type: GET_CITY_OPTIONS,\n      payload: cityOptions,\n    });\n    return { success: 1 };\n  } catch (e) {\n    return { success: 0 };\n  }\n};\n\nexport const getBranch1City = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/states/countries\", label)\n    .then((cities) => {\n      const cityOptions = cities.data.map((city, key) => ({\n        label: city.name,\n        value: city.name,\n      }));\n      cityOptions.unshift({ label: \"Select City...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH1_CITY,\n        payload: cityOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\nexport const getBranch2City = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/states/countries\", label)\n    .then((cities) => {\n      const cityOptions = cities.data.map((city, key) => ({\n        label: city.name,\n        value: city.name,\n      }));\n      cityOptions.unshift({ label: \"Select City...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH2_CITY,\n        payload: cityOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\nexport const getBranch3City = (label) => (dispatch) => {\n  axios\n    .post(\"/api/location/states/countries\", label)\n    .then((cities) => {\n      const cityOptions = cities.data.map((city, key) => ({\n        label: city.name,\n        value: city.name,\n      }));\n      cityOptions.unshift({ label: \"Select City...\", value: \"\" });\n      dispatch({\n        type: GET_BRANCH3_CITY,\n        payload: cityOptions,\n      });\n    })\n    .catch(() => dispatch({ type: GET_STATES_OPTIONS, payload: [] }));\n};\n\n//Getting All Category Options\nexport const getCategoriesOptions = (categories) => (dispatch) => {\n  const categoryOptions = categories.map((category) => ({\n    label: category.label,\n    value: category.label,\n  }));\n\n  dispatch({\n    type: GET_CATEGORIES_OPTIONS,\n    payload: categoryOptions,\n  });\n\n  const websiteFilters = [...categoryOptions];\n\n  websiteFilters.unshift({\n    label: \"Category...\",\n    value: \"\",\n  });\n\n  dispatch({\n    type: GET_CATEGORIES_OPTIONS_FOR_FILTERS,\n    payload: websiteFilters,\n  });\n};\n//Getting All Catering Options\nexport const getCateringOptions = (catering) => (dispatch) => {\n  const cateringOptions = catering.map((catering, key) => ({\n    label: catering.label,\n    value: catering.value,\n  }));\n  // cateringOptions.unshift({ label: \"Select Catering\", value: \"\" });\n  dispatch({\n    type: GET_CATERING_OPTIONS,\n    payload: cateringOptions,\n  });\n};\n\n//Getting All EventTypes Options\nexport const getEventTypeOptions = (eventTypes) => (dispatch) => {\n  const eventTypeOptions = eventTypes.map((eventType) => ({\n    label: eventType.label,\n    value: eventType.label,\n  }));\n  dispatch({\n    type: GET_EVENT_TYPE_OPTIONS,\n    payload: eventTypeOptions,\n  });\n\n  const webEventOptions = [...eventTypeOptions];\n  webEventOptions.unshift({ label: \"Event Types..\", value: \"\" });\n  dispatch({\n    type: GET_EVENT_TYPE_OPTIONS_FOR_FILTERS,\n    payload: webEventOptions,\n  });\n};\n//Getting TargetMarket Options\nexport const getTargetMarketOptions = () => {\n  const targetMarketOptions = [\n    { label: \"Target Market...\", value: \"\" },\n    { label: \"UpMarket\", value: \"up\" },\n    { label: \"MainStream\", value: \"stream\" },\n    { label: \"MarketMix\", value: \"mix\" },\n  ];\n  return {\n    type: GET_TARGET_MARKET_OPTIONS,\n    payload: targetMarketOptions,\n  };\n};\n\nexport const getRevenueOptions = () => {\n  const revenueOptions = [\n    { label: \"$0 (Beginner)\", value: \"$0 (Beginner)\" },\n    { label: \"Up to $5,000\", value: \"Up to $5,000\" },\n    { label: \"$5,000 - $25,000\", value: \"$5,000 - $25,000\" },\n    { label: \"$25,000 - $50,000\", value: \"$25,000 - $50,000\" },\n    { label: \"$50,000 - $250,000\", value: \"$50,000 - $250,000\" },\n    { label: \"$250,000+\", value: \"$250,000+\" },\n  ];\n  return {\n    type: GET_REVENUE_OPTIONS,\n    payload: revenueOptions,\n  };\n};\n\nexport const getBusinessTitleOptions = () => {\n  const businessTitleOptions = [\n    { label: \"Choose a Business Title...\", value: \"\" },\n    { label: \"CEO\", value: \"CEO\" },\n    { label: \"Director\", value: \"Director\" },\n    { label: \"Managing Director\", value: \"Managing Director\" },\n    { label: \"General Manager\", value: \"General Manager\" },\n    { label: \"Supervisor\", value: \"Supervisor\" },\n    { label: \"Staff\", value: \"Staff\" },\n    { label: \"Clark\", value: \"Clark\" },\n  ];\n  return {\n    type: GET_BUSINESS_TITLE_OPTIONS,\n    payload: businessTitleOptions,\n  };\n};\n\nexport const getGenderOptions = () => {\n  const genderOptions = [\n    { label: \"Choose a Title...\", value: \"\" },\n    { label: \"Mr.\", value: \"Mr.\" },\n    { label: \"Mrs.\", value: \"Mrs.\" },\n    { label: \"Miss.\", value: \"Miss\" },\n  ];\n  return {\n    type: GET_GENDER_OPTIONS,\n    payload: genderOptions,\n  };\n};\n\n//Getting List of Planner Options\nexport const getFilterOptions = () => (dispatch) => {\n  dispatch(getAllAfricanCountries());\n  dispatch(getAllCountriesOptions());\n  dispatch(getTargetMarketOptions());\n  dispatch(setFilterOptionsLoaded());\n};\n\n// export const getVendorOptions = () => dispatch => {\n//   dispatch(getAllCountriesOptions());\n//   dispatch(getTargetMarketOptions());\n//   dispatch(clearOptionsLoading());\n//   dispatch(setVendorOptionsLoaded());\n// };\n\nexport const setFilterOptionsLoaded = () => {\n  return {\n    type: SET_FILTER_OPTIONS,\n    payload: true,\n  };\n};\n\n// export const setVendorOptionsLoaded = () => {\n//   return {\n//     type: SET_VENDOR_OPTIONS_LOADED,\n//     payload: true\n//   };\n// };\n\n// export const clearOptionsLoading = () => {\n//   return {\n//     type: CLEAR_OPTIONS_LOADING,\n//     payload: false\n//   };\n// };\n","D:\\website\\planners-directory\\src\\reducers\\userReducer.js",["641"],"import { SEARCH_RESULTS } from \"../types/types\";\n\nconst initialState = {\n  profiles: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_RESULTS:\n      return {\n        ...state,\n        profiles: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\utils\\getLabels.js",[],"D:\\website\\planners-directory\\src\\reducers\\profileReducer.js",["642","643","644","645","646"],"import {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_NOTICEBOARD,\n  GET_PLANNERS,\n  GET_PLANNER_ITEM,\n  PROFILES_LOADING,\n  GET_PACKAGES,\n  GET_PLANNER_ITEM_PACKAGES,\n  SEARCH_RESULTS,\n  GET_KEYWORDS,\n  GET_RESET_PASSWORD_ERRORS,\n  SUCCESSFULLY_RESET_PASSWORD\n} from \"../types/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: false,\n  notices: [],\n  packages: null,\n  planners: [],\n  plannerItem: {},\n  plannerItemPackages: {},\n  searchResults: [],\n  success: false,\n  keywords: [],\n  resetPasswordErrors: {},\n  successMessage: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_RESULTS:\n      return {\n        ...state,\n        searchResults: action.payload,\n        loading: false\n      };\n    case GET_KEYWORDS:\n      return {\n        ...state,\n        keywords: action.payload\n      };\n    case PROFILES_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: action.payload\n      };\n\n    case GET_PACKAGES:\n      return {\n        ...state,\n        packages: action.payload\n      };\n\n    case GET_RESET_PASSWORD_ERRORS:\n      return {\n        ...state,\n        resetPasswordErrors: action.payload\n      };\n\n    case SUCCESSFULLY_RESET_PASSWORD:\n      return {\n        ...state,\n        successMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\vendorReducer.js",["647","648","649","650"],"import {\n  GET_VENDOR_SERVICES,\n  GET_VENDOR_ITEM,\n  GET_VENDOR_ITEM_SERVICES,\n  ON_SUCCESS_VENDOR_PROFILE,\n  CLEAR_SUCCESS_MESSAGES,\n  ON_FAIL_VENDOR_PROFILE,\n  GET_VENDORS,\n  LOADING,\n  SET_LOADING_FALSE,\n  SET_FILTERED_VENDORS,\n  SET_FILTERED_VENDORS_TO_NULL,\n  SET_VENDOR_OPTIONS_LOADED,\n  RESET_PACK_AND_SERV\n} from \"../types/types\";\n\nconst initialState = {\n  services: {},\n  vendorOptionsLoaded: false,\n  vendors: [],\n  loading: false,\n  filteredVendors: [],\n  vendorItem: {},\n  vendorItemServices: {},\n  onSuccessVendorProfile: false,\n  onFailVendorProfile: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_VENDOR_SERVICES:\n      return {\n        ...state,\n        services: action.payload\n      };\n\n    case SET_FILTERED_VENDORS:\n      return {\n        ...state,\n        filteredVendors: action.payload\n      };\n\n    case SET_FILTERED_VENDORS_TO_NULL:\n      return {\n        ...state,\n        filteredVendors: []\n      };\n\n    case GET_VENDOR_ITEM:\n      return {\n        ...state,\n        vendorItem: action.payload\n      };\n\n    case GET_VENDOR_ITEM_SERVICES:\n      return {\n        ...state,\n        vendorItemServices: action.payload\n      };\n\n    case ON_SUCCESS_VENDOR_PROFILE:\n      return {\n        ...state,\n        onSuccessVendorProfile: true\n      };\n\n    case CLEAR_SUCCESS_MESSAGES:\n      return {\n        ...state,\n        onSuccessVendorProfile: false\n      };\n\n    case ON_FAIL_VENDOR_PROFILE:\n      return {\n        ...state,\n        onFailVendorProfile: true\n      };\n\n    case SET_VENDOR_OPTIONS_LOADED:\n      return {\n        ...state,\n        vendorOptionsLoaded: true\n      };\n\n    case RESET_PACK_AND_SERV:\n      return {\n        ...state,\n        vendorItemServices: {}\n      };\n\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\plannerReducer.js",["651","652","653","654","655","656","657"],"import {\n  GET_PACKAGES,\n  GET_OFFICE,\n  GET_PLANNER_ITEM,\n  LOADING,\n  GET_PLANNERS,\n  ON_START,\n  ON_SUCCESS,\n  GET_CURRENT_PLANNER,\n  GET_PLANNER_ITEM_PACKAGES,\n  SET_LOADING_FALSE,\n  SET_FILTERED_PLANNERS,\n  SET_FILTERED_PLANNERS_TO_NULL,\n  SET_PLANNER_OPTIONS_LOADED,\n  RESET_PACK_AND_SERV\n} from \"../types/types\";\n\nconst initialState = {\n  planner: {},\n  plannerOptionsLoaded: false,\n  loading: false,\n  success: false,\n\n  filteredPlanners: [],\n  packages: {},\n  office: {},\n  plannerItem: {},\n  plannerItemPackages: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CURRENT_PLANNER:\n      return {\n        ...state,\n        planner: action.payload,\n        success: false\n      };\n\n    case GET_PACKAGES:\n      return {\n        ...state,\n        packages: action.payload\n      };\n\n    case GET_OFFICE:\n      return {\n        ...state,\n        office: action.payload\n      };\n\n    case GET_PLANNER_ITEM:\n      return {\n        ...state,\n        plannerItem: action.payload,\n        loading: false\n      };\n\n    case ON_SUCCESS:\n      return {\n        ...state,\n        success: true\n      };\n\n    case GET_PLANNER_ITEM_PACKAGES:\n      return {\n        ...state,\n        plannerItemPackages: action.payload,\n        loading: false\n      };\n\n    case SET_PLANNER_OPTIONS_LOADED:\n      return {\n        ...state,\n        plannerOptionsLoaded: true\n      };\n\n    case RESET_PACK_AND_SERV:\n      return {\n        ...state,\n        plannerItemPackages: {}\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\commonReducer.js",["658","659","660"],"import {\n  LOADING,\n  SET_LOADING_FALSE,\n  ADMIN_DATA_LOADED,\n  GET_RESULTS,\n  GET_VENDOR_RESULTS,\n  NO_RESULTS_FOUND,\n  CLEAR_NO_RESULTS,\n  PROFILE_LOADED,\n  PACKAGES_LOADED,\n  NOTICEBOARD_LOADED,\n  PROFILE_UNLOADED,\n  GET_TRANSLATED_LABELS,\n  GET_LANGUAGE,\n  GET_DASHBOARD_LANG,\n  RESET_RESULTS,\n  GET_CATEGORIES_OPTIONS_FOR_FILTERS,\n} from \"../types/types\";\nimport { isEmpty } from \"lodash\";\n\nconst initialState = {\n  pager: {},\n  pageOfItems: [],\n  vendorPager: {},\n  vendorPageOfItems: [],\n  loading: false,\n  loadingfromAdmin: false,\n  profileLoaded: false,\n  noResults: false,\n  packagesLoaded: false,\n  noticeboardLoaded: false,\n  language: \"\",\n  translatedLabels: {},\n  dashboardLabels: {},\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SET_LOADING_FALSE:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case ADMIN_DATA_LOADED:\n      return {\n        ...state,\n        loadingfromAdmin: true,\n      };\n\n    case PROFILE_LOADED:\n      return {\n        ...state,\n        profileLoaded: true,\n      };\n\n    case PROFILE_UNLOADED:\n      return {\n        ...state,\n        profileLoaded: false,\n      };\n\n    case PACKAGES_LOADED:\n      return {\n        ...state,\n        packagesLoaded: true,\n      };\n\n    case GET_RESULTS:\n      // let updatedData = [];\n      // console.log(\"ACION PAYLOD\", action.payload);\n\n      // action.payload.pageOfItems.map((item) => {\n      //   // const imageChecking = Object.values(item.images);\n      //   // const arr = imageChecking.filter((i) => i !== \"\");\n      //   // console.log(\"IMAGE ARRAY\", arr);\n      //   if (\n      //     item.storeName &&\n      //     item.categories.length > 0 &&\n      //     item.eventTypes.length > 0 &&\n      //     item.description.length > 299 &&\n      //     item.targetMarket &&\n      //     item.images &&\n      //     Object.keys(item.images).length > 0\n      //     // Object.values(item.images).filter((img) => !isEmpty(img)).length > 0\n      //     // arr &&\n      //     // arr.length > 0\n      //     // item.targetMarket &&\n      //     // item.storeName\n      //   ) {\n      //     updatedData.push(item);\n      //   }\n      // });\n\n      // const data = updatedData.sort(function (a, b) {\n      //   var textA = a.storeName;\n      //   var textB = b.storeName;\n      //   return textA < textB ? -1 : textA > textB ? 1 : 0;\n      // });\n      // console.log(\"LENGTH\", Object.values(data[0].images));\n      // console.log(\"DATA\", data);\n      // const pager = {\n      //   next: action.payload.next ? action.payload.next : {},\n      //   previous: action.payload.previous ? action.payload.previous : {},\n      //   pages: action.payload.pages,\n      //   currentPage: action.payload.currentPage,\n      // };\n      return {\n        ...state,\n        pager: action.payload.pager,\n        pageOfItems: action.payload.results,\n      };\n\n    case GET_VENDOR_RESULTS:\n      // let updatedData = [];\n      // console.log(\"ACION PAYLOD\", action.payload);\n\n      // action.payload.pageOfItems.map((item) => {\n      //   // const imageChecking = Object.values(item.images);\n      //   // const arr = imageChecking.filter((i) => i !== \"\");\n      //   // console.log(\"IMAGE ARRAY\", arr);\n      //   if (\n      //     item.storeName &&\n      //     item.categories.length > 0 &&\n      //     item.eventTypes.length > 0 &&\n      //     item.description.length > 299 &&\n      //     item.targetMarket &&\n      //     item.images &&\n      //     Object.keys(item.images).length > 0\n      //     // Object.values(item.images).filter((img) => !isEmpty(img)).length > 0\n      //     // arr &&\n      //     // arr.length > 0\n      //     // item.targetMarket &&\n      //     // item.storeName\n      //   ) {\n      //     updatedData.push(item);\n      //   }\n      // });\n\n      // const data = updatedData.sort(function (a, b) {\n      //   var textA = a.storeName;\n      //   var textB = b.storeName;\n      //   return textA < textB ? -1 : textA > textB ? 1 : 0;\n      // });\n      // console.log(\"LENGTH\", Object.values(data[0].images));\n      // console.log(\"DATA\", data);\n      // const pager = {\n      //   next: action.payload.next ? action.payload.next : {},\n      //   previous: action.payload.previous ? action.payload.previous : {},\n      //   pages: action.payload.pages,\n      //   currentPage: action.payload.currentPage,\n      // };\n      return {\n        ...state,\n        vendorPager: action.payload.pager,\n        vendorPageOfItems: action.payload.results,\n      };\n\n    case NO_RESULTS_FOUND:\n      return {\n        ...state,\n        noResults: true,\n        loading: false,\n      };\n\n    case CLEAR_NO_RESULTS:\n      return {\n        ...state,\n        noResults: false,\n      };\n\n    case NOTICEBOARD_LOADED:\n      return {\n        ...state,\n        noticeboardLoaded: true,\n      };\n\n    case GET_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload,\n      };\n\n    case GET_TRANSLATED_LABELS:\n      return {\n        ...state,\n        translatedLabels: action.payload,\n      };\n\n    case GET_DASHBOARD_LANG:\n      return {\n        ...state,\n        dashboardLabels: action.payload,\n      };\n\n    case RESET_RESULTS:\n      return {\n        ...state,\n        pager: {},\n        pageOfItems: [],\n        vendorPager: {},\n        vendorPageOfItems: [],\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\buttonReducer.js",["661","662"],"import { ON_CLICK_CANCEL, ON_CLICK_EDIT, ON_CLICK_SAVE } from \"../types/types\";\n\nconst initialState = {\n  disabled: true,\n  editdisabled: false,\n  formdisabled: \"disabled\"\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ON_CLICK_EDIT:\n      return {\n        ...state,\n        disabled: false,\n        editdisabled: true,\n        formdisabled: \"\"\n      };\n\n    case ON_CLICK_SAVE:\n      return {\n        ...state,\n        disabled: true,\n        editdisabled: false,\n        formdisabled: \"disabled\"\n      };\n\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\reducers\\optionReducer.js",["663","664"],"import {\n  GET_ALL_AFRICAN_COUNTRIES_OPTIONS,\n  GET_ALL_COUNTRIES_OPTIONS,\n  GET_STATES_OPTIONS,\n  GET_CITY_OPTIONS,\n  GET_CATEGORIES_OPTIONS,\n  GET_EVENT_TYPE_OPTIONS,\n  GET_TARGET_MARKET_OPTIONS,\n  GET_CATERING_OPTIONS,\n  SET_OPTIONS_LOADING,\n  CLEAR_OPTIONS_LOADING,\n  GET_UNBLOCKED_CONTINENT_OPTIONS,\n  GET_UNBLOCKED_AFRICAN_COUNTRIES_OPTIONS,\n  GET_COUNTRIES_BY_CONTINENT_OPTIONS,\n  GET_REVENUE_OPTIONS,\n  GET_BUSINESS_TITLE_OPTIONS,\n  GET_GENDER_OPTIONS,\n  CLEAR_LOCATION_OPTIONS,\n  GET_BRANCH1_COUNTRIES,\n  GET_BRANCH2_COUNTRIES,\n  GET_BRANCH3_COUNTRIES,\n  GET_BRANCH1_CITY,\n  GET_BRANCH2_CITY,\n  GET_BRANCH3_CITY,\n  GET_BRANCH1_STATE,\n  GET_BRANCH2_STATE,\n  GET_BRANCH3_STATE,\n  SET_FILTER_OPTIONS,\n  GET_ALL_CONTINENTS,\n  GET_CATEGORIES_OPTIONS_FOR_FILTERS,\n  GET_EVENT_TYPE_OPTIONS_FOR_FILTERS\n} from \"../types/types\";\n\nconst initialState = {\n  allContinents: [],\n  unBlockedContinentOptions: [],\n  unBlockedAfricanCountriesOptions: [],\n  countriesByContinentOptions: [],\n  countriesByContinentBranch1: [],\n  countriesByContinentBranch2: [],\n  countriesByContinentBranch3: [],\n  allCountriesOptions: [],\n  allAfricanCountriesOptions: [],\n  cityOptions: [],\n  cityBranch1: [],\n  cityBranch2: [],\n  cityBranch3: [],\n  stateOptions: [],\n  stateBranch1: [],\n  stateBranch2: [],\n  stateBranch3: [],\n  categoriesOptions: [],\n  webCatOptions: [],\n  eventTypeOptions: [],\n  webEventOptions: [],\n  cateringOptions: [],\n  targetMarketOptions: [],\n  revenueOptions: [],\n  businessTitleOptions: [],\n  genderOptions: [],\n  filtersLoaded: false\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_CONTINENTS:\n      return {\n        ...state,\n        allContinents: action.payload\n      };\n    case GET_UNBLOCKED_CONTINENT_OPTIONS:\n      return {\n        ...state,\n        unBlockedContinentOptions: action.payload\n      };\n\n    case GET_COUNTRIES_BY_CONTINENT_OPTIONS:\n      return {\n        ...state,\n        countriesByContinentOptions: action.payload\n      };\n\n    case GET_BRANCH1_COUNTRIES:\n      return {\n        ...state,\n        countriesByContinentBranch1: action.payload\n      };\n\n    case GET_BRANCH2_COUNTRIES:\n      return {\n        ...state,\n        countriesByContinentBranch2: action.payload\n      };\n\n    case GET_BRANCH3_COUNTRIES:\n      return {\n        ...state,\n        countriesByContinentBranch3: action.payload\n      };\n\n    case GET_UNBLOCKED_AFRICAN_COUNTRIES_OPTIONS:\n      return {\n        ...state,\n        unBlockedAfricanCountriesOptions: action.payload\n      };\n\n    case GET_ALL_AFRICAN_COUNTRIES_OPTIONS:\n      return {\n        ...state,\n        allAfricanCountriesOptions: action.payload\n      };\n    case GET_ALL_COUNTRIES_OPTIONS:\n      return {\n        ...state,\n        allCountriesOptions: action.payload\n      };\n    case GET_STATES_OPTIONS:\n      return {\n        ...state,\n        stateOptions: action.payload\n      };\n\n    case GET_BRANCH1_STATE:\n      return {\n        ...state,\n        stateBranch1: action.payload\n      };\n\n    case GET_BRANCH2_STATE:\n      return {\n        ...state,\n        stateBranch2: action.payload\n      };\n\n    case GET_BRANCH3_STATE:\n      return {\n        ...state,\n        stateBranch3: action.payload\n      };\n    case GET_CITY_OPTIONS:\n      return {\n        ...state,\n        cityOptions: action.payload\n      };\n\n    case GET_BRANCH1_CITY:\n      return {\n        ...state,\n        cityBranch1: action.payload\n      };\n\n    case GET_BRANCH2_CITY:\n      return {\n        ...state,\n        cityBranch2: action.payload\n      };\n\n    case GET_BRANCH3_CITY:\n      return {\n        ...state,\n        cityBranch3: action.payload\n      };\n    case GET_CATEGORIES_OPTIONS:\n      return {\n        ...state,\n        categoriesOptions: action.payload\n      };\n    case GET_CATEGORIES_OPTIONS_FOR_FILTERS:\n      return {\n        ...state,\n        webCatOptions: action.payload\n      };\n\n    case GET_EVENT_TYPE_OPTIONS:\n      return {\n        ...state,\n        eventTypeOptions: action.payload\n      };\n\n    case GET_EVENT_TYPE_OPTIONS_FOR_FILTERS:\n      return {\n        ...state,\n        webEventOptions: action.payload\n      };\n    case GET_CATERING_OPTIONS:\n      return {\n        ...state,\n        cateringOptions: action.payload\n      };\n    case GET_TARGET_MARKET_OPTIONS:\n      return {\n        ...state,\n        targetMarketOptions: action.payload\n      };\n    case GET_REVENUE_OPTIONS:\n      return {\n        ...state,\n        revenueOptions: action.payload\n      };\n\n    case GET_BUSINESS_TITLE_OPTIONS:\n      return {\n        ...state,\n        businessTitleOptions: action.payload\n      };\n\n    case GET_GENDER_OPTIONS:\n      return {\n        ...state,\n        genderOptions: action.payload\n      };\n\n    case CLEAR_OPTIONS_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    case CLEAR_LOCATION_OPTIONS:\n      return {\n        ...state,\n        countriesByContinentOptions: [],\n        unBlockedAfricanCountriesOptions: [],\n        countriesByContinentBranch1: [],\n        countriesByContinentBranch2: [],\n        countriesByContinentBranch3: [],\n        stateOptions: [],\n        stateBranch1: [],\n        stateBranch2: [],\n        stateBranch3: [],\n        cityOptions: [],\n        cityBranch1: [],\n        cityBranch2: [],\n        cityBranch3: []\n      };\n    case SET_FILTER_OPTIONS:\n      return {\n        ...state,\n        filtersLoaded: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","D:\\website\\planners-directory\\src\\utils\\is-empty.js",[],"D:\\website\\planners-directory\\src\\utils\\labelsData.js",["665","666","667","668"],"export const labels = {\n  eng: {\n    branchOffice: \"Branch Office\",\n    address: \"Address\",\n    reviews: \"Reviews\",\n    canCater: \"Can cater for up to\",\n    guest: \"guest\",\n    clearFilters: \"Clear Filters\",\n    reEnter: \"Re Enter\",\n    uploadImageWarnings: \"Only JPG's and PNG's are allowed! Use 1040 * 800 for best results.\",\n    alphanumeric: \"Alphanumeric Password (min 8 characters)\",\n    searchText:\n      \"All searchable Event planners in this directory are based or registered in Africa countries\",\n    tellUs: \"Tell us a little about yourself\",\n    iAm: \"I Am An\",\n    wIsCurrent: \"What is your current revenue?\",\n    store: \"Store\",\n    zipCode: \"Zip / Potal code\",\n    dashboard: \"Dashboard\",\n    noticeBoard: \"Notice Board\",\n    profile: \"Profile\",\n    packages: \"Packages\",\n    services: \"Services\",\n    uploadImage: \"Upload Images\",\n    keywords: \"Keywords\",\n    office: \"Office\",\n    contactAdmin: \"Contact Admin\",\n    logout: \"Logout\",\n    edit: \"Edit\",\n    save: \"Save\",\n    cancel: \"Cancel\",\n    description: \"Description\",\n    diamond: \"Diamond\",\n    platinum: \"Platinum\",\n    gold: \"Gold\",\n    silver: \"Silver\",\n    bronze: \"Bronze\",\n    bespoke: \"Bespoke\",\n    custom: \"Custom\",\n    enable: \"Enable\",\n    summury: \"Summury\",\n    price: \"Price\",\n    mainWelcome: \"WELCOME\",\n    welcomeLine: \"to The Planner's Directory\",\n    welcome: \"Welcome\",\n    mainOffice: \"Main office\",\n    streetAddress: \"Street address\",\n    city: \"City\",\n    state: \"State\",\n    mobileNo: \"Mobile no\",\n    optional: \"Optional\",\n    telephone: \"Telephone\",\n    country: \"Country\",\n    apt: \"Apt\",\n    addBranch: \"Add Branch Office\",\n    removeBranch: \"Remove Branch Office\",\n    continent: \"Continent\",\n    personalInfo: \"Personal Info\",\n    title: \"Title\",\n    titleorService: \"Title or services offered\",\n    titleSummary:\n      \"Enter summary / descrption / variations of what is on offer here\",\n    firstName: \"First Name\",\n    lastName: \"Last Name\",\n    targetMarket: \"Target Market\",\n    marketMix: \"MarketMix\",\n    mainStream: \"Mainstream\",\n    upMarket: \"UpMarket\",\n    cateringCapacity: \"Catering capacity\",\n    categories: \"Categories \",\n    eventType: \"Event types\",\n    officialPosition: \"Official Position\",\n    buisinessTitle: \"Business Title\",\n    businessWebsite: \"Business or Personal website\",\n    website: \"Website\",\n    mobileNo: \"Mobile no\",\n    ceo: \"CEO\",\n    director: \"Director\",\n    managerDirector: \"Managing Director\",\n    generalManager: \"General Manager\",\n    manager: \"Manager\",\n    supervisor: \"Supervisor\",\n    staff: \"Staff\",\n    clark: \"Clark\",\n    weddingPlanners: \"Wedding Planners\",\n    smallParties: \"Small Parties\",\n    weddingProposals: \"Wedding proposals\",\n    fundraiser: \"Fundraiser\",\n    themedParties: \"Themed Parties\",\n    fireworks: \"Fireworks\",\n    awardPrograms: \"Award programs\",\n    bridal: \"Bridal\",\n    educational: \"Educational\",\n    commemorative: \"Commemorative\",\n    launch: \"Launch\",\n    sport: \"Sport\",\n    entertainmentIndustry: \"Entertainment industry\",\n    charity: \"Charity\",\n    adultOnly: \"Adult only\",\n    oldPassword: \"Old password\",\n    NewPassword: \"New password\",\n    setting: \"Setting\",\n    sponsoredBy: \"Sponsored by\",\n    uploadFile: \"Upload file\",\n    uploadImage2: \"upload image\",\n    attachFrom: \"Attach from\",\n    yourComputer: \"Your computer\",\n    googleDrive: \"Google drive\",\n    dropbox: \"Dropbox\",\n    attach: \"attach\",\n    warning: \"Warning\",\n    eventPlanner: \"Event Planner\",\n    eventVendor: \"Event Vendor\",\n    phoneNumber: \"Phone number\",\n    potalCode: \"Potal code\",\n    business: \"Business\",\n\n    register: \"Register\",\n    aboutUs: \"About us\",\n    vendors: \"Vendors\",\n    planners: \"Planners\",\n    home: \"Home\",\n    searchHere: \"SEARCH HERE\",\n    serarchText:\n      \"All searchable Event planners in this directory are based or registered in Africa countries\",\n    planner: \"Planner\",\n    vendor: \"Vendor\",\n    termsCondition: \"Terms & Conditions\",\n    login: \"Login\",\n    registerNow: \"Register Now\",\n    emailAddress: \"Email Address\",\n    password: \"Password\",\n    forgetPassword: \"FORGOT PASSWORD\",\n    packagesLarge: \"PACKAGES\",\n    comments: \"COMMENTS\",\n    offices: \"OFFICES\",\n    servicesLarge: \"SERVICES\",\n    storeName: \"Store Name\",\n    continue: \"Continue\",\n    filterBy: \"Filter by\",\n    viewDetails: \"View Details\",\n    category: \"Category\",\n    facebookAddress: \"Facebook address\",\n    instagramHandle: \"Instagram handle\",\n    youTubeAddress: \"YouTube address\",\n    twitterHandle: \"Twitter handle\",\n    linkedInaddress: \"LinkedIn address\",\n    privacyPolicy: \"Privacy Policy\"\n  },\n  por: {\n    address: \"Endereço\",\n    branchOffice: \"Filial\",\n    reviews: \"Rever\",\n    canCater: \"Pode atender até\",\n    guest: \"convidados\",\n    clearFilters: \"Limpar filtros\",\n    reEnter: \"Insira o seu\",\n    uploadImageWarnings: \"Somente JPG e PNG são permitidos!\",\n    alphanumeric: \"Senha Alfanumérica (mín. 8 caracteres)\",\n    searchText:\n      \"Todos os planejadores de Eventos disponíveis neste diretório estão registrados em países da África\",\n    tellUs: \"Conte-nos um pouco sobre você mesmo\",\n    businessWebsite: \"Website pessoal ou do seu negócio\",\n    iAm: \"Eu sou um\",\n    wIsCurrent: \"Qual é a sua receita?\",\n    zipCode: \"CEP\",\n    store: \"Loja\",\n    noticeBorad: \"Quadro de Avisos\",\n    dashboard: \"Painel\",\n    packages: \"Pacotes \",\n    profile: \"Perfil\",\n    services: \"Serviços\",\n    uploadImage: \"Fazer upload das imagens\",\n    keywords: \"Palavras chave\",\n    office: \"Escritório\",\n    contactAdmin: \"Contate-Nos\",\n    logout: \"Logout\",\n    edit: \"Editar\",\n    save: \"Salvar\",\n    cancel: \"Cancelar\",\n    description: \"Descrição\",\n    diamond: \"Diamante\",\n    platinum: \"Platina \",\n    gold: \"Ouro\",\n    silver: \"Prata\",\n    bronze: \"Bronze\",\n    bespoke: \"Sob medida\",\n    custom: \"Customizado\",\n    enable: \"Habilitar\",\n    summury: \"Resumo\",\n    price: \"Preço\",\n\n    mainWelcome: \"BOAS-VINDAS\",\n    welcomeLine: \"para O Diretório do Organizador\",\n    welcome: \"Boas-vindas\",\n    mainOffice: \"Sede\",\n    streetAddress: \"Endereço\",\n    city: \"Cidade\",\n    state: \"Estado\",\n    mobileNo: \"Número do telefone\",\n    optional: \"Opcional\",\n    telephone: \"Telefone\",\n    country: \"País\",\n    apt: \"Apartamento\",\n    addBranch: \"Adicionar Escritório Filial\",\n    removeBranch: \"Remover Escritório Filial\",\n    continent: \"Continente\",\n    personalInfo: \"Informações Pessoais\",\n    title: \"Título\",\n    titleSummary:\n      \"Inserir resumo / descrição / variações do que está disponível aqui\",\n    titleorService: \"Título ou serviços oferecidos\",\n    firstName: \"Primeiro Nome\",\n    lastName: \"Último Nome\",\n    targetMarket: \"Mercado Alvo\",\n    marketMix: \"Mistura de Mercado\",\n    mainStream: \"Fluxo principal\",\n    upMarket: \"UpMarket\",\n    cateringCapacity: \"Capacidade de restauração\",\n    categories: \"Categorias\",\n    eventType: \"Tipos de eventos\",\n    officialPosition: \"Posição Oficial\",\n    buisinessTitle: \"Título do Negócio\",\n    website: \"Website\",\n    mobileNo: \"Número do telefone\",\n    ceo: \"CEO\",\n    director: \"Diretor\",\n    managerDirector: \"Diretor Geral\",\n    generalManager: \"Gerente Geral\",\n    manager: \" Gerente\",\n    supervisor: \"Supervisor\",\n    staff: \"Equipe\",\n    clark: \"Encarregado\",\n    weddingPlanners: \"Organizadores de Casamentos\",\n    smallParties: \"Pequenas Festas (até 50 convidados)\",\n    weddingProposals: \"Propostas de casamento\",\n    fundraiser: \"Arrecadação \",\n    themedParties: \"Festas Temáticas\",\n    fireworks: \"Fogos de Artificios\",\n    awardPrograms: \"Programas com prêmios\",\n    bridal: \"Noivado\",\n    educational: \"Educacional\",\n    commemorative: \"Comemorativo\",\n    launch: \"Lançamento \",\n    sport: \"Esportes\",\n    entertainmentIndustry: \"Indústria do entretenimento\",\n    charity: \"Caridade\",\n    adultOnly: \"Somente Adultos\",\n    oldPassword: \"Senha antiga\",\n    NewPassword: \"Senha nova\",\n    setting: \"Configurações\",\n    sponsoredBy: \"Patrocinado por\",\n    uploadFile: \"Fazer o upload do arquivo\",\n    uploadImage2: \"fazer o upload da imagem\",\n    attachFrom: \"Anexar de\",\n    yourComputer: \"Seu computador\",\n    googleDrive: \"Google drive\",\n    dropbox: \"Dropbox\",\n    attach: \"Anexar\",\n    warning: \"Aviso \",\n    eventPlanner: \"Planejador de Eventos\",\n    eventVendor: \"Vendedor de Eventos\",\n    phoneNumber: \"Número de telefone\",\n    potalCode: \"CEP\",\n    zip: \"CEP\",\n    business: \"Website pessoal ou do seu negócio\",\n    register: \"Registrar\",\n    aboutUs: \"Sobre nós\",\n    vendors: \" Vendedores\",\n    planners: \"Planejadores\",\n    home: \"Página inicial\",\n    searchHere: \"PESQUISAR AQUI\",\n    serarchText:\n      \"Todos os planejadores de Eventos disponíveis neste diretório estão registrados em países da África\",\n    planner: \"Planejador\",\n    vendor: \"Vendedor\",\n    termsCondition: \"Termos e Condições\",\n    login: \"Login\",\n    registerNow: \"Registrar-se agora\",\n    emailAddress: \"Endereço de e-mail\",\n    password: \"Senha \",\n    forgetPassword: \"ESQUECI MINHA SENHA\",\n    packagesLarge: \"PACOTES\",\n    comments: \"COMENTÁRIOS\",\n    offices: \"ESCRITÓRIOS\",\n    servicesLarge: \"SERVIÇOS\",\n    storeName: \"Nome da Loja\",\n    continue: \"Continuar\",\n    filterBy: \"Fitrar por\",\n    viewDetails: \"Visualizar detalhes\",\n    category: \"Categoria\",\n    facebookAddress: \"Endereço do Facebook\",\n    instagramHandle: \"Instagram\",\n    youTubeAddress: \"Endereço do YouTube\",\n    twitterHandle: \"Twitter\",\n    linkedInaddress: \"Endereço do LinkedIn\",\n    privacyPolicy: \"Política de Privacidade\"\n  },\n  swa: {\n    businessWebsite: \"Tovuti ya Biashara au Binafsi\",\n    tellUs: \"Tuambie kidogo kuhusu wewe\",\n    iAm: \"Mimi ni An\",\n    wIsCurrent: \"Je, ni nini mapato yako?\",\n    zipCode: \"Zip/ Potal code\",\n    store: \"Duka\",\n    dashboard: \"Dashibodi\",\n    noticeBoard: \"Ubao wa Matangazo\",\n    profile: \"PMaelezo yangu Mafupi\",\n    packages: \"Vifurushi\",\n    services: \"Huduma\",\n    uploadImage: \"Pakia Picha\",\n    keywords: \"Maneno ya msingi\",\n    office: \"Ofisi\",\n    contactAdmin: \"Wasiliana nasi\",\n    logout: \"Toka \",\n    edit: \"Rekebisha\",\n    save: \"Hifadhi\",\n    cancel: \"Batilisha\",\n    description: \"Maelezo\",\n    diamond: \"Almasi\",\n    platinum: \"Platini\",\n    gold: \"Dhahabu\",\n    silver: \"Fedha\",\n    bronze: \"Shaba\",\n    bespoke: \"Maalumu kwa mteja\",\n    custom: \"Tengeneza unavyopendelea\",\n    enable: \"Wezesha\",\n    summury: \"Muhtasari\",\n    price: \"Bei\",\n    mainWelcome: \"KARIBU\",\n    welcomeLine: \"kwenye Planner's Directory\",\n    welcome: \"Karibu\",\n    mainOffice: \"Ofisi kuu\",\n    streetAddress: \"Anuani ya mtaa\",\n    city: \"Mji\",\n    state: \"Jimbo\",\n    mobileNo: \"Namba ya simu ya mkononi\",\n    optional: \"Ya hiari\",\n    telephone: \"Simu ya mezani\",\n    country: \"Nchi\",\n    apt: \"Nyumba\",\n    addBranch: \"Ongeza Ofisi\",\n    removeBranch: \"Ondoa Ofisi \",\n    continent: \"Bara\",\n    personalInfo: \"Taarifa Binafsi\",\n    title: \"Cheo\",\n    titleorService: \"Jina au huduma inayotolewa\",\n    titleSummary:\n      \"Ingiza muhtasari / maelezo mafupi / aina tofauti za vitu vilivyo kwenye ofa hapa\",\n    firstName: \"Jina La Kwanza\",\n    lastName: \"Jina La Mwisho\",\n    targetMarket: \"Soko Lengwa\",\n    marketMix: \"Mchanganyiko wa Soko\",\n    mainStream: \"Maarufu\",\n    upMarket: \"Masoko Ya Juu\",\n    cateringCapacity: \"Uwezo wa kuhudumia\",\n    categories: \"Kategoria\",\n    eventType: \"Aina za matukio\",\n    officialPosition: \"Cheo Rasmi\",\n    buisinessTitle: \"Jina la Biashara\",\n    website: \"Tovuti\",\n    mobileNo: \"Namba ya simu ya mkononi\",\n    ceo: \"CEO\",\n    director: \"Mkurugenzi\",\n    managerDirector: \"Mkurugenzi Mtendaji\",\n    generalManager: \"Meneja Mkuu\",\n    manager: \"Meneja\",\n    supervisor: \"Msimamizi\",\n    staff: \"Wafanyakazi\",\n    clark: \"Muuza duka\",\n    weddingPlanners: \"Wapambaji wa Harudi\",\n    smallParties: \"Sherehe ndogo (mpaka wageni 50)\",\n    weddingProposals: \"Pendekezo la harusi\",\n    fundraiser: \"Kuchangisha fedha\",\n    themedParties: \"Sherehe za Mandhari\",\n    fireworks: \"Fataki\",\n    awardPrograms: \"Programu za tuzo\",\n    bridal: \"Bi Harusi\",\n    educational: \"Ya Elimu\",\n    commemorative: \"Ukumbusho\",\n    launch: \"Uzinduzi\",\n    sport: \"Mchezo\",\n    entertainmentIndustry: \"Sekta ya burudani\",\n    charity: \"Kujitolea\",\n    adultOnly: \"Watu wazima tu\",\n    oldPassword: \"Neno la siri la zamani\",\n    NewPassword: \"Neno la siri jipya\",\n    setting: \"Mipangilio\",\n    sponsoredBy: \"Imedhaminiwa na\",\n    uploadFile: \"Pakia faili\",\n    uploadImage2: \"pakia picha\",\n    attachFrom: \"Ambatanisha kutoka\",\n    yourComputer: \"Kwenye kompyuta yako\",\n    googleDrive: \"Google drive\",\n    dropbox: \"Dropbox\",\n    attach: \"Ambatanisha\",\n    warning: \"Onyo\",\n    eventPlanner: \"Mpangiliaji wa Matukio\",\n    eventVendor: \"Muuza bidhaa katika Matukio\",\n    phoneNumber: \"Namba ya simu ya mkononi\",\n    potalCode: \"Zip/ Potal code\",\n    business: \"Tovuti \",\n    register: \"Jisajili\",\n    aboutUs: \"Kuhusu sisi\",\n    vendors: \"Wauzaji\",\n    planners: \"Wapangiliaji\",\n    home: \"Nyumbani\",\n    searchHere: \"TAFUTA HAPA\",\n    uploadImageWarnings: \"Ni JPG tu na PNG zinazoruhusiwa!\",\n    alphanumeric: \"Neno la siri lenye herufi na namba (kuanzia herufi 8)\",\n    reEnter: \"Ingiza Yako\",\n    canCater: \"Inawezekana kuwahudumia mpaka\",\n    reviews: \"Maoni\",\n    branchOffice: \"Ofisi ya tawi\",\n    address: \"Anwani\",\n    guest: \"wageni\",\n    clearFilters: \"Futa vichungi\",\n    searchText:\n      \"Wapangiliaji wa Matukio wote unaoweza kuwatafuta katika orodha hii wanatokea au wamesajili kutokea nchi za Africa\",\n    planner: \"Wapangiliaji\",\n    vendor: \"Wauzaji\",\n    termsCondition: \"Vigezo & Masharti\",\n    login: \"Ingia\",\n    registerNow: \"Jisajili Sasa\",\n    emailAddress: \"Barua Pepe\",\n    password: \"Neno la siri\",\n    forgetPassword: \"UMESAHAU NENO LA SIRI\",\n    packagesLarge: \"VIFURUSHI\",\n    comments: \"MAONI\",\n    offices: \"OFISI\",\n    servicesLarge: \"HUDUMA\",\n    storeName: \"Jina la Duka\",\n    continue: \"Endelea\",\n    filterBy: \"Chuja kwa\",\n    viewDetails: \"Tazama Taarifa\",\n    category: \"Kategoria\",\n    facebookAddress: \"Anuani ya Facebook\",\n    instagramHandle: \"Jina la Instagram\",\n    youTubeAddress: \"Anuani ya YouTube\",\n    twitterHandle: \"Jina la Twitter\",\n    linkedInaddress: \"Anuani ya LinkedIn\",\n    privacyPolicy: \"Sera ya faragha\"\n  },\n  fre: {\n    businessWebsite: \"Site internet professionnel ou personnel\",\n    tellUs: \"Parlez-nous un peu de vous\",\n    iAm: \"Je suis un\",\n    wIsCurrent: \"Quel est votre revenu actuel?\",\n    zipCode: \"Adresse / Boite postale\",\n    store: \"Magasin / Boutique\",\n    dashboard: \" Tableau de bord \",\n    noticeBoard: \"Tableau d'affichage\",\n    profile: \"Profil \",\n    packages: \"Paquets \",\n    services: \"Prestations de service\",\n    uploadImage: \"Importer des images\",\n    keywords: \"Mots clés\",\n    office: \"Bureau\",\n    contactAdmin: \"Contacter l'administrateur\",\n    logout: \"se déconnecter\",\n    edit: \"Modifier\",\n    save: \"Sauvegarder\",\n    cancel: \"Annuler\",\n    description: \"Description\",\n    diamond: \"Diamant\",\n    platinum: \"Platine\",\n    gold: \"Or \",\n    silver: \"Argent\",\n    bronze: \"Bronze\",\n    bespoke: \"Sur mesure\",\n    custom: \"Personnaliser\",\n    enable: \"Activer\",\n    summury: \"Liste récapitulative\",\n    price: \"Prix\",\n    mainWelcome: \"BIENVENUE\",\n    welcomeLine: \"dans l'annuaire du planificateur\",\n    welcome: \"Bienvenue\",\n    mainOffice: \"Bureau principal\",\n    streetAddress: \"Nom de rue\",\n    city: \"Ville\",\n    state: \"Etat\",\n    mobileNo: \"Numéro de portable\",\n    optional: \"Facultatif\",\n    telephone: \"Téléphone\",\n    country: \"Pays\",\n    apt: \"Appart, suite\",\n    addBranch: \"Ajouter une succursale\",\n    removeBranch: \"Supprimer une succursale\",\n    continent: \"Continent\",\n    personalInfo: \"Informations personnelles \",\n    title: \"Titre\",\n    titleSummary:\n      \"Entrez résumé / description / types de prestations proposées ici\",\n    titleorService: \"Intitulé ou prestations proposés\",\n    firstName: \"Prénom\",\n    lastName: \"Nom de famille\",\n    targetMarket: \"Marché cible\",\n    marketMix: \"Mix de marché\",\n    nainStream: \"Marché moyen\",\n    upMarket: \"Haut de gamme\",\n    cateringCapacity: \"Capacité de restauration\",\n    categories: \"Catégories\",\n    eventType: \"Type d'évenements\",\n    officialPosition: \"Poste\",\n    buisinessTitle: \"Fonction\",\n    website: \"Site internet\",\n    mobileNo: \"Numéro de portable\",\n    ceo: \"PDG\",\n    director: \"Directeur\",\n    managerDirector: \"Directeur général\",\n    generalManager: \"Directeur général\",\n    manager: \"Directeur\",\n    supervisor: \"Superviseur\",\n    staff: \"Personnel\",\n    clark: \"Employé\",\n    weddingPlanners: \"Planificateurs de mariage\",\n    smallParties: \"Petites fetes (jusqu'à 50 invités)\",\n    weddingProposals: \"Propositions de mariage\",\n    fundraiser: \"Levée de fonds\",\n    themedParties: \"Soirées à thème\",\n    fireworks: \"Feux d'artifice\",\n    awardPrograms: \"Programmes de récompense\",\n    bridal: \"Nuptial\",\n    educational: \"Educatif\",\n    commemorative: \"Commératif\",\n    launch: \"Lancement\",\n    sport: \"Sport\",\n    entertainmentIndustry: \"Industrie du divertissement\",\n    charity: \"Œuvre de bienfaisance\",\n    adultOnly: \"Réservé aux adultes\",\n    oldPassword: \"Ancien mot de passe\",\n    NewPassword: \"Nouveau mot de passe\",\n    setting: \"Paramètres\",\n    sponsoredBy: \"Sponsorisé par\",\n    uploadFile: \"Importer le fichier\",\n    uploadImage2: \"Importer l'image\",\n    attachFrom: \"Joindre à partir de\",\n    yourComputer: \"Votre ordinateur\",\n    googleDrive: \"Moteur de recherche Google\",\n    dropbox: \"Boîte de dépôt\",\n    attach: \"Joindre\",\n    warning: \"Attention\",\n    eventPlanner: \"Planificateur d'événements\",\n    eventVendor: \"Promoteur d'événements\",\n    phoneNumber: \"Numéro de téléphone\",\n    potalCode: \"Adresse / Boite postale\",\n    business: \"Site internet professionnel ou personnel\",\n    register: \"Répertoire\",\n    aboutUs: \"À propos de nous\",\n    vendors: \"Vendeurs\",\n    planners: \"Plannificateurs\",\n    home: \"Accueil\",\n    searchHere: \"Chercher ici\",\n    uploadImageWarnings: \"Seuls les fichiers JPG et PNG sont autorisés!\",\n    alphanumeric: \"Mot de passe alphanumérique (min. 8 caractères)\",\n    reEnter: \"Entrez votre\",\n    clearFilters: \"Effacer les filtres\",\n    canCater: \"Peut accueillir jusqu'à\",\n    reviews: \"Commentaires\",\n    branchOffice: \"Succursale\",\n    address: \"Adresse\",\n    guest: \"invités\",\n    searchText:\n      \"Tous les planificateurs d’événements consultables de ce répertoire sont basés ou enregistrés dans des pays d’Afrique\",\n\n    planner: \"Plannificateur\",\n    vendor: \"Vendeur\",\n    termsCondition: \"Termes & Conditions\",\n    login: \"S'Identifier\",\n    registerNow: \"S'inscire maintenant\",\n    emailAddress: \"Adresse électronique\",\n    password: \"Mot de passe\",\n    forgetPassword: \"MOT DE PASSE OUBLIÉ\",\n    packagesLarge: \"FORFAITS\",\n    comments: \"COMMENTAIRES\",\n    offices: \"BUREAUX\",\n    servicesLarge: \"PRESTATIONS\",\n    storeName: \"Nom du magasin\",\n    continue: \"Continuer\",\n    filterBy: \"Filter par\",\n    viewDetails: \"Voir les détails\",\n    category: \"Catégorie\",\n    facebookAddress: \"Adresse facebook\",\n    instagramHandle: \"Poignée Instagram\",\n    youTubeAddress: \"Adresse YouTube \",\n    twitterHandle: \"Poignée Twitter\",\n    linkedInaddress: \"Adresse LinkedIn\",\n    privacyPolicy: \"Politique de confidentialité\"\n  }\n};\n","D:\\website\\planners-directory\\src\\components\\admin\\index.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Search\\Search.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Category\\Category.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Noticeboard\\Noticeboard.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUs.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Images\\Images.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\EventType\\EventType.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\UniquePackages\\UniquePackages.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Catering\\Catering.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\UserStats\\UserStats.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Terms\\Terms.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicy.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockCountries\\BlockCountries.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\ChangeTargetMarket\\ChangeTargetMarket.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockContinents\\BlockContinent.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUs-View.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Category\\Category-View.js",["669","670"],"import React from \"react\";\nimport EditButton from \"../../ui/Buttons/EditButton\";\nimport SaveButton from \"../../ui/Buttons/SaveButton\";\nimport CancelButton from \"../../ui/Buttons/CancelButton\";\nimport SmallDeleteBtn from \"../../ui/Buttons/SmallDeleteBtn\";\nimport AddButton from \"../../ui/Buttons/AddButton\";\nimport GreenButton from \"../../ui/Buttons/GreenButton\";\nimport Select from \"../../common/SelectListGroup\";\n\nconst CategoryView = ({\n  categories,\n  data,\n  onClickAdd,\n  onClickEdit,\n  onChange,\n  onDeleteCategory,\n  onClickSave,\n  addCategory\n}) => {\n  return (\n    <div className=\"tab-pane\" id=\"services\" role=\"tabpanel\">\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          <EditButton\n            onClick={onClickEdit}\n            disabled={data.editdisabled}\n            type=\"Edit\"\n          >\n            Edit\n          </EditButton>\n        </div>\n        <div className=\"col-md-12  text-center\">\n          <h4 className=\"font-32 tabs-title\">Category</h4>\n        </div>\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <table class=\"table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.map(category => (\n                <tr key={category._id}>\n                  <td>{category.label}</td>\n                  <td>\n                    <SmallDeleteBtn\n                      type=\"smalldelete\"\n                      label=\"Delete\"\n                      disabled={data.disabled}\n                      onClick={() => onDeleteCategory(category._id)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {data.addButton ? (\n            <AddButton\n              label=\"Add Category\"\n              type=\"addbtn\"\n              onClick={onClickAdd}\n              disabled={data.disabled}\n              style={{ paddingBottom: \"10px\" }}\n            />\n          ) : null}\n          {data.input ? (\n            <form onSubmit={addCategory} noValidate>\n              <div className=\"row text-center\">\n                <div className=\"form-group\">\n                  <div className=\"col-md-3\">\n                    {/* <span className=\"fa fa-search form-control-feedback\" /> */}\n                    <input\n                      name=\"category\"\n                      value={data.category}\n                      style={{ width: \"28rem\" }}\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Add Category.. \"\n                      onChange={onChange}\n                    />\n                  </div>\n\n                  <div className=\"col-md-2\">\n                    <GreenButton\n                      type=\"submit\"\n                      style={{ paddingLeft: \"16rem\" }}\n                      label=\"Add Event Type\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"bd-top\" />\n      <div className=\"osr-btn-group p-b-15  text-center\">\n        <SaveButton\n          onClick={onClickSave}\n          label=\"Save\"\n          type=\"save\"\n          disabled={data.disabled}\n        />\n        {/* <CancelButton\n          onClick={onClickEdit}\n          label=\"Cancel\"\n          type=\"cancel\"\n          disabled={data.disabled}\n        /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryView;\n","D:\\website\\planners-directory\\src\\components\\admin\\Images\\Images-View.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\EventType\\EventType-View.js",["671","672"],"import React from \"react\";\nimport EditButton from \"../../ui/Buttons/EditButton\";\nimport SaveButton from \"../../ui/Buttons/SaveButton\";\nimport CancelButton from \"../../ui/Buttons/CancelButton\";\nimport SmallDeleteBtn from \"../../ui/Buttons/SmallDeleteBtn\";\nimport AddButton from \"../../ui/Buttons/AddButton\";\nimport GreenButton from \"../../ui/Buttons/GreenButton\";\nimport Select from \"../../common/SelectListGroup\";\n\nconst EventTypeView = ({\n  eventTypes,\n  data,\n  onClickAdd,\n  onClickEdit,\n  onChange,\n  onDeleteEventType,\n  onClickSave,\n  addEventType\n}) => {\n  return (\n    <div className=\"tab-pane\" id=\"services\" role=\"tabpanel\">\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          <EditButton\n            onClick={onClickEdit}\n            disabled={data.editdisabled}\n            type=\"Edit\"\n          >\n            Edit\n          </EditButton>\n        </div>\n        <div className=\"col-md-12  text-center\">\n          <h4 className=\"font-32 tabs-title\">Event Type</h4>\n        </div>\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <table class=\"table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {eventTypes.map(eventType => (\n                <tr key={eventType._id}>\n                  <td>{eventType.label}</td>\n                  <td>\n                    <SmallDeleteBtn\n                      type=\"smalldelete\"\n                      label=\"Delete\"\n                      disabled={data.disabled}\n                      onClick={() => onDeleteEventType(eventType._id)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {data.addButton ? (\n            <AddButton\n              label=\"Add EventType\"\n              type=\"addbtn\"\n              onClick={onClickAdd}\n              disabled={data.disabled}\n              style={{ paddingBottom: \"10px\" }}\n            />\n          ) : null}\n          {data.input ? (\n            <form onSubmit={addEventType} noValidate>\n              <div className=\"row text-center\">\n                <div className=\"form-group\">\n                  <div className=\"col-md-3\">\n                    {/* <span className=\"fa fa-search form-control-feedback\" /> */}\n                    <input\n                      name=\"eventType\"\n                      value={data.eventType}\n                      style={{ width: \"28rem\" }}\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Add EventType.. \"\n                      onChange={onChange}\n                    />\n                  </div>\n\n                  <div className=\"col-md-2\">\n                    <GreenButton\n                      type=\"submit\"\n                      style={{ paddingLeft: \"16rem\" }}\n                      label=\"Add Event Type\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"bd-top\" />\n      <div className=\"osr-btn-group p-b-15  text-center\">\n        <SaveButton\n          onClick={onClickSave}\n          label=\"Save\"\n          type=\"save\"\n          disabled={data.disabled}\n        />\n        {/* <CancelButton\n          onClick={onClickEdit}\n          label=\"Cancel\"\n          type=\"cancel\"\n          disabled={data.disabled}\n        /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default EventTypeView;\n","D:\\website\\planners-directory\\src\\components\\admin\\UniquePackages\\UniquePackages-View.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Catering\\Catering-View.js",["673"],"import React from \"react\";\nimport EditButton from \"../../ui/Buttons/EditButton\";\nimport SaveButton from \"../../ui/Buttons/SaveButton\";\nimport CancelButton from \"../../ui/Buttons/CancelButton\";\nimport SmallDeleteBtn from \"../../ui/Buttons/SmallDeleteBtn\";\nimport AddButton from \"../../ui/Buttons/AddButton\";\nimport GreenButton from \"../../ui/Buttons/GreenButton\";\nimport Select from \"../../common/SelectListGroup\";\n\nconst CateringView = ({\n  caterings,\n  data,\n  onClickAdd,\n  onClickEdit,\n  onChange,\n  onDeleteCatering,\n  onClickSave,\n  cateringOptions,\n  addCatering\n}) => {\n  return (\n    <div className=\"tab-pane\" id=\"services\" role=\"tabpanel\">\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          <EditButton\n            onClick={onClickEdit}\n            disabled={data.editdisabled}\n            type=\"Edit\"\n          >\n            Edit\n          </EditButton>\n        </div>\n        <div className=\"col-md-12  text-center\">\n          <h4 className=\"font-32 tabs-title\">Catering</h4>\n        </div>\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <table class=\"table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {caterings.slice(0, 5).map(catering => (\n                <tr key={catering._id}>\n                  <td>{catering.label}</td>\n                </tr>\n              ))}\n              {caterings.slice(5).map(catering => (\n                <tr key={catering._id}>\n                  <td>{catering.label}</td>\n                  <td>\n                    <SmallDeleteBtn\n                      type=\"smalldelete\"\n                      label=\"Delete\"\n                      disabled={data.disabled}\n                      onClick={() => onDeleteCatering(catering._id)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {data.addButton && cateringOptions.length > 1 ? (\n            <AddButton\n              label=\"Add Catering\"\n              type=\"addbtn\"\n              onClick={onClickAdd}\n              disabled={data.disabled}\n              style={{ paddingBottom: \"10px\" }}\n            />\n          ) : null}\n          {data.input ? (\n            <form onSubmit={addCatering} noValidate>\n              <div\n                className=\"row text-center\"\n                style={{ display: \"flex\", justifyContent: \"stretch\" }}\n              >\n                <div className=\"col-md-5\">\n                  <div className=\"form-group\" style={{ paddingLeft: \"3rem\" }}>\n                    {/* <span className=\"fa fa-search form-control-feedback\" /> */}\n                    <Select\n                      name=\"catering\"\n                      value={data.catering}\n                      options={cateringOptions}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-2\">\n                  <GreenButton\n                    type=\"submit\"\n                    style={{ paddingLeft: \"16rem\" }}\n                    label=\"Add Catering\"\n                  />\n                </div>\n              </div>\n            </form>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"bd-top\" />\n      <div className=\"osr-btn-group p-b-15  text-center\">\n        <SaveButton\n          onClick={onClickSave}\n          label=\"Save\"\n          type=\"save\"\n          disabled={data.disabled}\n        />\n        {/* <CancelButton\n          onClick={onClickEdit}\n          label=\"Cancel\"\n          type=\"cancel\"\n          disabled={data.disabled}\n        /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default CateringView;\n","D:\\website\\planners-directory\\src\\utils\\getCountryName.js",[],"D:\\website\\planners-directory\\src\\actions\\buttonActions.js",[],"D:\\website\\planners-directory\\src\\components\\common\\Spinner\\Spinner.js",["674"],"import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n// import Spinner from \"./spinner1.gif\";\n\nexport default () => {\n  return (\n    // <div style={{ textAlign: \"center\" }}>\n    //   <img\n    //     src={Spinner}\n    //     style={{ width: \"200px\", margin: \"auto\", display: \"inline\" }}\n    //     alt=\"Loading...\"\n    //   />\n    // </div>\n    <div className=\"centered\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        //3 secs\n      />\n    </div>\n  );\n};\n","D:\\website\\planners-directory\\src\\components\\common\\imageForm.js",["675"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nclass ImageForm extends React.Component {\n  state = {\n    data: {},\n  };\n\n  onImageSelected = (e) => {\n    let name = e.target.files[0].name;\n\n    let img = new Image();\n\n    img.src = window.URL.createObjectURL(e.target.files[0]);\n\n    let c = e.target.files[0];\n    let id = e.target.id;\n\n    img.onload = (x = 0, y = c, i = id) => {\n      if (img.width >= 1040 && img.height >= 800) {\n        console.log(\"ss\", y);\n        console.log(\"id\", id);\n\n        let label = document.getElementById(id + \"label\");\n\n        label.innerHTML = name;\n        this.setState({\n          data: {\n            ...this.state.data,\n            selectedFile: y,\n            selected: true,\n          },\n        });\n      } else {\n        toast.warn(\"Image size should be at least 1040 * 800.\");\n      }\n    };\n  };\n\n  onImageUpload = (e) => {\n    e.preventDefault();\n    const { selected } = this.state.data;\n    if (!selected) {\n      toast.warn(\"Please Select a image to upload\");\n    } else {\n      this.setState({ data: { ...this.state.data, loading: true } });\n      let id = e.target.id;\n      const httpClient = axios.create();\n      httpClient.defaults.timeout = 30000;\n      const formData = new FormData();\n      formData.append(id, this.state.data.selectedFile);\n\n      httpClient\n        .post(`/api/image-upload/${id}`, formData)\n        .then((res) => this.onSuccess(res, id))\n        .catch((err) => this.onFailure(err));\n    }\n  };\n\n  onSuccess = (res, id) => {\n    toast.success(\"Image Uploaded Successfully\");\n    this.setState(\n      {\n        data: {\n          ...this.state.data,\n          [id]: res.data.imageUrl,\n          selectedFile: {},\n          loading: false,\n        },\n      },\n      () => {\n        if (id !== \"noticeboard\") this.onSubmit();\n      }\n    );\n  };\n\n  onFailure = (err) => {\n    this.setState({\n      data: { ...this.state.data, selectedFile: {}, loading: false },\n    });\n    toast.error(\"Failed to Upload Image. Exceeded Time Duration\");\n  };\n}\n\nexport default ImageForm;\n","D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\GreenButton.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Noticeboard\\NoticeboardView.js",[],"D:\\website\\planners-directory\\src\\components\\common\\SelectListGroup.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockContinents\\BlockContinent-View.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Block\\BlockCountries\\BlockCountries-View.js",[],"D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\SaveButton.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\Terms\\TermsView.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicyView.js",[],"D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\EditButton.js",[],"D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\SmallDeleteBtn.js",[],"D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\AddButton.js",[],"D:\\website\\planners-directory\\src\\components\\ui\\Buttons\\CancelButton.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\AboutUs\\AboutUsForm.js",[],"D:\\website\\planners-directory\\src\\components\\common\\InputGroup.js",[],"D:\\website\\planners-directory\\src\\components\\common\\ButtonGroup\\ButtonGroup.js",[],"D:\\website\\planners-directory\\src\\utils\\countryData.js",[],"D:\\website\\planners-directory\\src\\components\\common\\Image_Upload\\ImageUpload.js",["676"],"import React from \"react\";\nimport TickIcon from \"../../../../src/img/tick.png\";\nimport \"../../../styles/UploadImage.css\";\n\nimport { toast } from \"react-toastify\";\n\nconst ImageUpload = ({\n  onClick,\n  onChangeImage,\n  label,\n  disabled,\n  type,\n  id,\n  data,\n}) => {\n\n\n  return (\n    <div className=\"d-flex\" style={{ paddingTop: \"30px\" }}>\n      <div\n        className=\"image-show\"\n        style={{ backgroundImage: \"url(\" + data + \")\" }}\n      >\n        {/*<img className=\"image-show\" src={data} alt=\"\"/>*/}\n      </div>\n      <div className=\"custom-file\">\n        <input\n          type=\"file\"\n          onChange={onChangeImage}\n          disabled={disabled}\n          className=\"custom-file-input\"\n          id={id + \"i\"}\n          required\n        />\n\n        <label\n          id={id + \"ilabel\"}\n          className=\"custom-file-label\"\n          for=\"validatedCustomFile\"\n        >\n          Choose file...\n        </label>\n        <div className=\"invalid-feedback\">\n          Example invalid custom file feedback\n        </div>\n      </div>\n      <button\n        type={type}\n        disabled={disabled}\n        id={id}\n        onClick={onClick}\n        className=\"btn btn-primary ml-4\"\n      >\n        {label}\n      </button>\n\n    \n      {/* <div >{imagePreview}</div> */}\n\n      {/*<input*/}\n      {/*style={{ border: \"5px solid black\" }}*/}\n      {/*type=\"file\"*/}\n      {/*id=\"idofinput\"*/}\n      {/*className=\"hidden\"*/}\n      {/*accept=\"image/png, image/jpeg\"*/}\n      {/*onChange={onChange}*/}\n      {/*disabled={disabled}*/}\n      {/*/>*/}\n      {/*<button*/}\n      {/*type={type}*/}\n      {/*disabled={disabled}*/}\n      {/*id={id}*/}\n      {/*className=\"uploadButton\"*/}\n      {/*onClick={onClick}*/}\n      {/*>*/}\n      {/*{label}*/}\n      {/*</button>*/}\n      <div className=\"tick-container\">\n        {data ? (\n          <img className=\"upload-image-tick\" src={TickIcon} alt=\"Tick Icon\" />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","D:\\website\\planners-directory\\src\\components\\admin\\Terms\\TermsForm.js",[],"D:\\website\\planners-directory\\src\\components\\admin\\PrivacyPolicy\\PrivacyPolicyForm.js",[],"D:\\website\\planners-directory\\src\\components\\website\\index.js",[],"D:\\website\\planners-directory\\src\\components\\website\\home\\Home.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PlannerItem.js",["677"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport SingleItem from \"./SingleItem\";\nimport HeadersArea2 from \"./HeadersArea2\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport {\n  getPlannerbyId,\n  getPlannerItemPackages\n} from \"../../../actions/plannerActions\";\nimport {\n  getVendorbyId,\n  getVendorItemServices\n} from \"../../../actions/vendorActions\";\nimport { resetPackAndServ } from \"../../../actions/common\";\n\nclass PlannerItem extends Component {\n  state = { handler: \"\", id: \"\" };\n  componentDidMount = () => {\n    const { pathname: handler } = this.props.location;\n    const { id } = this.props.match.params;\n\n    this.setState({ handler, id }, () => {\n      if (this.state.handler) this.handleInitialLoading(this.state.handler, id);\n    });\n  };\n\n  handleInitialLoading = (handler, id) => {\n    const { userId } = this.props.location.state;\n    if (handler === `/planners/${id}`) {\n      this.props.getPlannerbyId(id);\n      this.props.getPlannerItemPackages(userId);\n    } else if (handler === `/vendors/${id}`) {\n      this.props.getVendorbyId(id);\n      this.props.getVendorItemServices(userId);\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.props.resetPackAndServ();\n  };\n\n  setUser = () => {\n    const {\n      plannerItem,\n      vendorItem,\n      plannerItemPackages,\n      vendorItemServices\n    } = this.props;\n    let user = {};\n    let userOffer = {};\n    if (this.state.handler === `/planners/${this.state.id}`) {\n      user = plannerItem;\n      userOffer = plannerItemPackages;\n      const userType = \"planner\";\n      return {\n        user,\n        userOffer,\n        userType\n      };\n    } else {\n      user = vendorItem;\n      userOffer = vendorItemServices;\n      const userType = \"vendor\";\n      return {\n        user,\n        userOffer,\n        userType\n      };\n    }\n  };\n\n  goBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { plannerItem, loading, t } = this.props;\n\n    if (this.props.loading) return <Spinner />;\n    if (this.props.plannerItemPackages || this.props.vendorItemServices) {\n      const { user, userOffer, userType } = this.setUser();\n      return (\n        <section className=\"packages-section d-flex justify-content-center\">\n          <div\n            className={userType === \"vendor\" ? \"container vendor\" : \"container\"}\n          >\n            <div className=\"packages-area\">\n              <Link to={{}}>\n                <button\n                  style={{\n                    paddingBottom: \"5px\",\n                    paddingRight: \"5px\",\n                    fontSize: \"2.5rem\"\n                  }}\n                  type=\"button\"\n                  className=\"close\"\n                  onClick={() => this.goBack()}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                  <span className=\"sr-only\">Close</span>\n                </button>\n              </Link>\n\n              {loading ? (\n                <Spinner />\n              ) : (\n                <div>\n                  <SingleItem userType={userType} plannerItem={user} t={t} />\n                  <div className=\"tabs-area\">\n                    <HeadersArea2\n                      userType={userType}\n                      userItem={user}\n                      userItemOffer={userOffer}\n                      t={t}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  plannerItem: state.planner.plannerItem,\n  loading: state.common.loading,\n  vendorItem: state.vendor.vendorItem,\n  plannerItemPackages: state.planner.plannerItemPackages,\n  vendorItemServices: state.vendor.vendorItemServices,\n  t: state.common.translatedLabels\n});\n\nexport default connect(mapStateToProps, {\n  getPlannerbyId,\n  getPlannerItemPackages,\n  getVendorbyId,\n  getVendorItemServices,\n  resetPackAndServ\n})(withRouter(PlannerItem));\n","D:\\website\\planners-directory\\src\\components\\website\\aboutUs\\AboutUs.js",["678"],"import React, { Component } from \"react\";\nimport aboutus from \"../../../img/images/about.png\";\nimport Spinner from \"../../common/Spinner/Spinner\";\n\nimport { withRouter, Link } from \"react-router-dom\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { connect } from \"react-redux\";\nimport { getAdminData } from \"../../../actions/adminActions\";\nimport { resetResults } from \"../../../actions/common\";\n\nclass AboutUs extends Component {\n  componentDidMount() {\n    if (!this.props.loadingfromAdmin) {\n      this.props.getAdminData();\n    }\n    this.props.resetResults();\n  }\n\n  render() {\n    if (!this.props.loadingfromAdmin) {\n      return <Spinner />;\n    }\n    return (\n      <section\n        className=\"d-flex align-items-center flex-column justify-content-center h-100\"\n        style={{\n          backgroundImage: \"url(\" + this.props.websiteBg + \")\",\n          backgroundPosition: \"center\",\n          opacity: 0.9,\n        }}\n      >\n        <div\n          className=\"about-us-wrap radius-5\"\n          style={{ position: \"relative\", width: \"80%\", marginTop: \"80px\" }}\n        >\n          <h5 className=\"title\">{this.props.t.aboutUs}</h5>\n          <div className=\"about-caption d-xs-inherit d-flex align-items-center\">\n            <figure className=\"sticky-about-us\">\n              <img class=\"modal-image-style\" src={aboutus} alt=\"About Us\" />\n            </figure>\n            <div>\n              <Editor\n                readOnly\n                toolbarHidden\n                editorState={EditorState.createWithContent(\n                  convertFromRaw(JSON.parse(this.props.aboutUs))\n                )}\n                wrapperClassName=\"editor-about-us-wrapper\"\n                editorClassName=\"editor-about-us-content\"\n                editorStyle={{ overflow: \"none\", overflowY: \"none\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  aboutUs: state.admin.admin.aboutUs,\n  websiteBg: state.admin.admin.websiteBg,\n  loadingfromAdmin: state.common.loadingfromAdmin,\n  loading: state.common.loading,\n  t: state.common.translatedLabels,\n});\n\nexport default connect(mapStateToProps, { getAdminData, resetResults })(\n  withRouter(AboutUs)\n);\n","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Planners.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Filters from \"../Filters/Filters\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlanners } from \"../../../../actions/plannerActions\";\r\nimport { getVendors } from \"../../../../actions/vendorActions\";\r\nimport PlannerItem from \"../PlannerItem/PlannerItem\";\r\n\r\nimport {\r\n  getFilterOptions,\r\n  getStatesOptions,\r\n  getCityOptions,\r\n  getAllCountriesOptions,\r\n} from \"../../../../actions/optionActions\";\r\nimport { resetResults } from \"../../../../actions/common\";\r\nimport Spinner from \"../../../common/Spinner/Spinner\";\r\nimport NoResults from \"../../NoResults\";\r\nimport queryString from \"query-string\";\r\nimport isEmpty from \"../../../../utils/is-empty\";\r\nimport Pagination from \"../../../../utils/Pagination\";\r\n\r\nclass Planners extends Component {\r\n  state = {\r\n    pager: {},\r\n    pageOfItems: [],\r\n    pageNo: 1,\r\n    query: \"\",\r\n    acountry: \"\",\r\n    country: \"\",\r\n    st: \"\",\r\n    city: \"\",\r\n    eventType: \"\",\r\n    categories: \"\",\r\n    targetMarket: \"\",\r\n    seeAll: false,\r\n    filterFound: \"\",\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let params;\r\n    await this.props.getAllCountriesOptions();\r\n    if (this.props.pageOfItems.length < 1) {\r\n      console.log(\"IN FUCKING CDM\");\r\n      // Getting Search Query Params and Mapping it to state\r\n      const { search } = this.props.location;\r\n      params = queryString.parse(search) || \"\";\r\n      this.urlMapper(params, \"initial\");\r\n    }\r\n    if (!this.props.filtersLoaded) this.props.getFilterOptions();\r\n    await this.props.getAllCountriesOptions();\r\n    if (params) {\r\n      await this.props.getAllCountriesOptions();\r\n      await this.handleFilters();\r\n    }\r\n  };\r\n\r\n  getPlanners = async () => {\r\n    await this.props.getPlanners();\r\n    this.setState({\r\n      pager: this.props.pager,\r\n      pageOfItems: this.props.pageOfItems,\r\n    });\r\n  };\r\n  componentWillReceiveProps = async (prevProps, prevState) => {\r\n    console.log(\"CWRCPRS HITS\");\r\n    if (prevProps.location.search != this.props.location.search) {\r\n      const {\r\n        country,\r\n        acountry,\r\n        st,\r\n        categories,\r\n        city,\r\n        eventType,\r\n        targetMarket,\r\n      } = this.state;\r\n      const previousSearch = prevProps.location.search;\r\n      let url;\r\n      let search;\r\n      //  await  this.setState({isLoading:true})\r\n      const { pathname } = this.props.location;\r\n      let currentSearch = this.props.location.search;\r\n      const currentPath = this.props.location.pathname;\r\n      const previousPath = prevProps.location.pathname;\r\n      let currentParams = queryString.parse(currentSearch) || \"\";\r\n      let previousParams = queryString.parse(previousSearch);\r\n      if (previousParams.co != currentParams.co) {\r\n        if (pathname == \"/planners\") {\r\n          if (currentParams.co == acountry) {\r\n            console.log(\"cwrp handle filter\");\r\n            await this.setState({ acountry: previousParams.co, country: \"\" });\r\n\r\n            if (\r\n              previousParams.co &&\r\n              this.props.allCountriesOptions.length > 0\r\n            ) {\r\n              await this.props.getAllCountriesOptions();\r\n              const elementFound = await this.props.allCountriesOptions.filter(\r\n                (u) => u.value == previousParams.co\r\n              );\r\n              // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n              if (elementFound.length == 0) {\r\n                console.log(\"country element no found\");\r\n                delete currentParams.co;\r\n                if (currentParams.st) delete currentParams.st;\r\n                if (currentParams.ct) delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n              } else {\r\n                if (acountry !== previousParams.co)\r\n                  await this.setState({ acountry: previousParams.co });\r\n                console.log(\"matched countries\");\r\n                const newHistory = queryString.stringify(previousParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                if (this.state.acountry) {\r\n                  await this.props.getStatesOptions({\r\n                    code: this.state.acountry,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            if (!previousParams.co) {\r\n              if (currentParams.co) delete currentParams.co;\r\n              if (currentParams.st) delete currentParams.st;\r\n              if (currentParams.ct) delete currentParams.ct;\r\n              const newHistory = queryString.stringify(currentParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (pathname == \"/vendors\") {\r\n          if (currentParams.co == country) {\r\n            console.log(\"cwrp handle filter\");\r\n            await this.setState({ country: previousParams.co, acountry: \"\" });\r\n\r\n            if (\r\n              previousParams.co &&\r\n              this.props.allCountriesOptions.length > 0\r\n            ) {\r\n              await this.props.getAllCountriesOptions();\r\n              const elementFound = await this.props.allCountriesOptions.filter(\r\n                (u) => u.value == previousParams.co\r\n              );\r\n              // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n              if (elementFound.length == 0) {\r\n                console.log(\"country element no found\");\r\n                delete currentParams.co;\r\n                if (currentParams.st) delete currentParams.st;\r\n                if (currentParams.ct) delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n                if (pathname === \"/vendors\") {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                } else {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                }\r\n              } else {\r\n                if (country !== previousParams.co)\r\n                  await this.setState({ country: previousParams.co });\r\n                console.log(\"matched countries\");\r\n                const newHistory = queryString.stringify(previousParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                if (pathname === \"/vendors\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                if (this.state.country) {\r\n                  await this.props.getStatesOptions({\r\n                    code: this.state.country,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            if (!previousParams.co) {\r\n              if (currentParams.co) delete currentParams.co;\r\n              if (currentParams.st) delete currentParams.st;\r\n              if (currentParams.ct) delete currentParams.ct;\r\n              const newHistory = queryString.stringify(currentParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // countries end\r\n      if (previousParams.st != currentParams.st) {\r\n        // console.log('cwrp handle filter 2 states', previousParams.st,currentParams,'state',this.state.st)\r\n\r\n        if (currentParams.st && !isEmpty(st) && currentParams.st == st) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.st) {\r\n            delete currentParams.st;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            // this.props.history.push(url);\r\n            await this.setState({ st: \"\" });\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n          if (previousParams.st && previousParams.co) {\r\n            if (\r\n              !this.props.stateOptions &&\r\n              this.props.stateOptions.length < 1\r\n            ) {\r\n              if (previousParams.co) {\r\n                await this.props.getStatesOptions({ code: previousParams.co });\r\n              }\r\n            }\r\n            const elementFound = await this.props.stateOptions.filter(\r\n              (u) => u.value == previousParams.st\r\n            );\r\n            if (elementFound.length == 0) {\r\n              delete previousParams.st;\r\n\r\n              if (previousParams.ct) delete previousParams.ct;\r\n\r\n              const newHistory = queryString.stringify(previousParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"st\",\r\n                \"Select State...\"\r\n              );\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"ct\",\r\n                \"Select City...\"\r\n              );\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n              // this.props.history.push(url);\r\n              console.log(currentSearch, \"current\");\r\n              await this.setState({ st: \"\", city: \"\" });\r\n            } else {\r\n              console.log(\"matched states element\", elementFound);\r\n\r\n              const data = {\r\n                code: previousParams.st,\r\n              };\r\n              await this.props.getCityOptions(data);\r\n              const newHistory = queryString.stringify(previousParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"st\",\r\n                previousParams.st\r\n              );\r\n              // this.props.history.push(url);\r\n              await this.setState({ st: previousParams.st });\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n              console.log(\r\n                currentParams.st,\r\n                previousParams.st,\r\n                \"state set\",\r\n                this.state.st\r\n              );\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.st && previousParams.st) {\r\n          console.log(\"logic is here\");\r\n          if (previousParams.co) {\r\n            await this.props.getStatesOptions({ code: previousParams.co });\r\n          }\r\n          const elementFound = await this.props.stateOptions.filter(\r\n            (u) => u.value == previousParams.st\r\n          );\r\n          if (elementFound.length == 0) {\r\n            delete previousParams.st;\r\n\r\n            if (previousParams.ct) delete previousParams.ct;\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            // this.props.history.push(url);\r\n            url = this.updateQueryStringParameter(url, \"st\", \"Select State...\");\r\n            url = this.updateQueryStringParameter(url, \"ct\", \"Select City...\");\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            console.log(currentSearch, \"current\");\r\n            await this.setState({ st: \"\", city: \"\" });\r\n          } else {\r\n            console.log(\"matched states element logic in here\", elementFound);\r\n\r\n            const data = {\r\n              code: previousParams.st,\r\n            };\r\n            await this.props.getCityOptions(data);\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            // url = pathname.concat(currentSearch);\r\n            // url = this.updateQueryStringParameter(url,'st',previousParams.st)\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            // this.props.history.push(url);\r\n            await this.setState({ st: previousParams.st });\r\n          }\r\n        }\r\n      }\r\n\r\n      // state end\r\n      if (\r\n        previousParams.ct != currentParams.ct &&\r\n        previousParams.st &&\r\n        previousParams.co\r\n      ) {\r\n        if (currentParams.ct && !isEmpty(city) && currentParams.ct == city) {\r\n          console.log(currentParams.ct, \"city\", previousParams.ct);\r\n\r\n          if (!previousParams.ct) {\r\n            delete currentParams.ct;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            //this.props.history.push(url);\r\n\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            await this.setState({ city: \"\" });\r\n          }\r\n\r\n          if (previousParams.ct != currentParams.ct) {\r\n            if (\r\n              currentParams.ct &&\r\n              !isEmpty(city) &&\r\n              currentParams.ct == city\r\n            ) {\r\n              console.log(currentParams.ct, \"city\", previousParams.ct);\r\n\r\n              if (!previousParams.ct) {\r\n                delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                // this.props.history.push(url);\r\n                await this.setState({ city: \"\" });\r\n              }\r\n\r\n              if (previousParams.st && previousParams.co && previousParams.ct) {\r\n                if (\r\n                  !this.props.cityOptions &&\r\n                  this.props.cityOptions.length < 1\r\n                ) {\r\n                  if (previousParams.st) {\r\n                    const data = {\r\n                      code: previousParams.st,\r\n                    };\r\n                    await this.props.getCityOptions(data);\r\n                  }\r\n                }\r\n                const elementFound = await this.props.cityOptions.filter(\r\n                  (u) => u.value == previousParams.ct\r\n                );\r\n                if (elementFound.length == 0) {\r\n                  console.log(\"not matched\");\r\n                  delete previousParams.ct;\r\n                  const newHistory = queryString.stringify(previousParams);\r\n                  currentSearch = \"?\" + newHistory;\r\n                  url = pathname.concat(currentSearch);\r\n                  if (pathname === \"/planners\") {\r\n                    this.props.getPlanners({ url: currentSearch });\r\n                  } else {\r\n                    this.props.getVendors({ url: currentSearch });\r\n                  }\r\n                  //   this.props.history.push(url);\r\n                  console.log(currentSearch, \"current\");\r\n                  await this.setState({ city: \"\" });\r\n                } else {\r\n                  console.log(\"matched states element\", elementFound);\r\n\r\n                  const newHistory = queryString.stringify(previousParams);\r\n                  currentSearch = \"?\" + newHistory;\r\n                  url = pathname.concat(currentSearch);\r\n                  url = this.updateQueryStringParameter(\r\n                    url,\r\n                    \"ct\",\r\n                    previousParams.ct\r\n                  );\r\n                  //  this.props.history.push(url);\r\n                  await this.setState({ city: previousParams.ct });\r\n                  if (pathname === \"/planners\") {\r\n                    this.props.getPlanners({ url: currentSearch });\r\n                  } else {\r\n                    this.props.getVendors({ url: currentSearch });\r\n                  }\r\n                  // console.log(currentParams.st,previousParams.st,'state set',this.state.st);\r\n                }\r\n              }\r\n\r\n              // await this.handleFilters()\r\n            }\r\n          }\r\n          // await this.handleFilters()\r\n        }\r\n        if (!this.state.city && previousParams.st && previousParams.co) {\r\n          console.log(\"logic is here\");\r\n          if (previousParams.st) {\r\n            const data = {\r\n              code: previousParams.st,\r\n            };\r\n            await this.props.getCityOptions(data);\r\n          }\r\n          const elementFound = await this.props.cityOptions.filter(\r\n            (u) => u.value == previousParams.ct\r\n          );\r\n          if (elementFound.length == 0) {\r\n            delete previousParams.ct;\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n\r\n            //     this.props.history.push(url);\r\n            console.log(currentSearch, \"current\");\r\n            await this.setState({ city: \"\" });\r\n          } else {\r\n            console.log(\"matched states element logic in here\", elementFound);\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n\r\n            // url = pathname.concat(currentSearch);\r\n            // url = this.updateQueryStringParameter(url,'st',previousParams.st)\r\n            // this.props.history.push(url);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            await this.setState({ city: previousParams.ct });\r\n          }\r\n        }\r\n      }\r\n\r\n      // city end\r\n      if (previousParams.cat != currentParams.cat) {\r\n        if (\r\n          currentParams.cat &&\r\n          !isEmpty(categories) &&\r\n          currentParams.cat == categories\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.cat) {\r\n            delete currentParams.cat;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ categories: \"\" });\r\n          }\r\n          if (previousParams.cat) {\r\n            await this.setState({ categories: previousParams.cat });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"cat\", categories);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.categories && previousParams.cat) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"cat\",\r\n            previousParams.cat\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ categories: previousParams.cat });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // categories end   11\r\n      if (previousParams.tm != currentParams.tm) {\r\n        if (\r\n          currentParams.tm &&\r\n          !isEmpty(targetMarket) &&\r\n          currentParams.tm == targetMarket\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.tm) {\r\n            delete currentParams.tm;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ targetMarket: \"\" });\r\n          }\r\n          if (previousParams.tm) {\r\n            await this.setState({ categories: previousParams.tm });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"tm\", targetMarket);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.targetMarket && previousParams.tm) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"tm\",\r\n            previousParams.tm\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ targetMarket: previousParams.tm });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // target market end\r\n      if (previousParams.et != currentParams.et) {\r\n        if (\r\n          currentParams.et &&\r\n          !isEmpty(eventType) &&\r\n          currentParams.et == eventType\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.et) {\r\n            delete currentParams.et;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ eventType: \"\" });\r\n          }\r\n          if (previousParams.et) {\r\n            await this.setState({ eventType: previousParams.et });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"et\", eventType);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.eventType && previousParams.et) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"et\",\r\n            previousParams.et\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ eventType: previousParams.et });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // event type end\r\n    }\r\n\r\n    // if (!this.props.location.search && prevProps.location.search) {\r\n    //   this.clearFilters();\r\n    // }\r\n\r\n    // await  this.setState({isLoading:false})\r\n  };\r\n\r\n  componentDidUpdate = async (prevProps, prevState) => {\r\n    const previousSearch = prevProps.location.search;\r\n    const currentSearch = this.props.location.search;\r\n    const currentPath = this.props.location.pathname;\r\n    const previousPath = prevProps.location.pathname;\r\n    let currentParams = queryString.parse(currentSearch) || \"\";\r\n    let previousParams = queryString.parse(previousSearch);\r\n    if (prevState.acountry != this.state.acountry) {\r\n      console.log(\"cdu handle filter\");\r\n    }\r\n    //  console.log(prevState.acountry,'prevst',this.state.acountry,'current',currentParams.co,'currentpar',previousParams.co,'prevparam','co history2')\r\n\r\n    //  if(currentParams.co == this.state.acountry){\r\n    //    this.handleFilters();\r\n    //  }\r\n    // if (previousSearch !== currentSearch) {\r\n\r\n    //   await this.handleFilters();\r\n\r\n    // }\r\n\r\n    if (currentPath !== previousPath) {\r\n      console.log(\"in cdu condition\");\r\n      const { search } = this.props.history.location;\r\n      if (currentPath === \"/planners\") {\r\n        this.props.getPlanners({ url: search });\r\n        this.setState({ country: \"\" });\r\n      } else {\r\n        this.props.getVendors({ url: search });\r\n        this.setState({ acountry: \"\" });\r\n      }\r\n\r\n      // await this.handleFilters();\r\n    }\r\n  };\r\n\r\n  /* This Mehtod will map url params to component state on intial and \r\n     updates */\r\n  urlMapper = (params, method) => {\r\n    let mappingObject = {};\r\n    const stateMappingObject = {\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.query) && { query: params.query }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.pageNo) && { pageNo: params.pageNo }),\r\n      ...(!isEmpty(params) && !isEmpty(params.co) && { acountry: params.co }),\r\n      ...(!isEmpty(params) && !isEmpty(params.st) && { st: params.st }),\r\n      ...(!isEmpty(params) && !isEmpty(params.ct) && { city: params.ct }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.cat) && { categories: params.cat }),\r\n      ...(!isEmpty(params) && !isEmpty(params.et) && { eventType: params.et }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.tm) && { targetMarket: params.tm }),\r\n    };\r\n    if (params && params.co) mappingObject.acountry = params.co;\r\n    else mappingObject.acountry = \"\";\r\n    if (params && params.st) mappingObject.st = params.st;\r\n    else mappingObject.st = \"\";\r\n    if (params && params.ct) mappingObject.city = params.ct;\r\n    else mappingObject.city = \"\";\r\n    if (params && params.cat) mappingObject.categories = params.cat;\r\n    else mappingObject.categories = \"\";\r\n    if (params && params.et) mappingObject.eventType = params.et;\r\n    else mappingObject.eventType = \"\";\r\n    if (params && params.tm) mappingObject.targetMarket = params.tm;\r\n    else mappingObject.targetMarket = \"\";\r\n\r\n    this.setState(mappingObject, () => {\r\n      if (method === \"initial\") {\r\n        if (this.state.acountry || this.state.country) {\r\n          if (this.state.acountry) {\r\n            this.props.getStatesOptions({\r\n              code: this.state.acountry,\r\n              country: \"\",\r\n            });\r\n          }\r\n          if (this.state.country) {\r\n            this.props.getStatesOptions({\r\n              code: this.state.country,\r\n              acountry: \"\",\r\n            });\r\n          }\r\n\r\n          if (this.state.st) this.props.getCityOptions({ code: this.state.st });\r\n        }\r\n        const { pathname } = this.props.location;\r\n        const { search } = this.props.location;\r\n        const url = search;\r\n        if (pathname === \"/planners\") this.props.getPlanners({ url });\r\n        else if (pathname === \"/vendors\") this.props.getVendors({ url });\r\n      } else {\r\n        const { pathname } = this.props.location;\r\n        const { search } = this.props.location;\r\n        const url = search;\r\n        if (pathname === \"/planners\") this.props.getPlanners({ url });\r\n        else if (pathname === \"/vendors\") this.props.getVendors({ url });\r\n      }\r\n    });\r\n  };\r\n  onChange = async (e) => {\r\n    e.persist();\r\n\r\n    const cityValue = e.target.value;\r\n    console.log(e.target.name, \"eeee\");\r\n    if (e.target.name == \"city\") {\r\n      this.setState({ city: cityValue, filterFound: \"city\" }, () => {\r\n        this.handleFilters();\r\n      });\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value }, () => {\r\n        this.handleFilters();\r\n      });\r\n    }\r\n  };\r\n\r\n  onSelectCountry = async (e) => {\r\n    const countryCode = e.target.value;\r\n    const label = {\r\n      code: countryCode,\r\n    };\r\n    this.setState({ isLoading: true });\r\n    let states;\r\n\r\n    const { pathname } = this.props.location;\r\n    if (pathname == \"/planners\") {\r\n      this.setState(\r\n        {\r\n          acountry: countryCode,\r\n          st: \"\",\r\n          country: \"\",\r\n          city: \"\",\r\n          filterFound: \"country\",\r\n        },\r\n        () => this.handleFilters()\r\n      );\r\n\r\n      if (this.state.acountry) {\r\n        this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n    }\r\n    if (pathname == \"/vendors\") {\r\n      console.log(\"vendors state set\");\r\n      this.setState(\r\n        {\r\n          country: countryCode,\r\n          st: \"\",\r\n          acountry: \"\",\r\n          city: \"\",\r\n          filterFound: \"country\",\r\n        },\r\n        () => {\r\n          this.handleFilters();\r\n        }\r\n      );\r\n\r\n      if (this.state.country) {\r\n        this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSelectState = async (e) => {\r\n    let stateValue = e.target.value;\r\n    const data = {\r\n      code: stateValue,\r\n    };\r\n    await this.setState({ isLoading: true });\r\n    await this.props.getCityOptions(data);\r\n    await this.setState(\r\n      { st: stateValue, city: \"\", filterFound: \"state\" },\r\n      () => {\r\n        this.handleFilters();\r\n      }\r\n    );\r\n  };\r\n\r\n  handlePagination = (page) => {\r\n    let { search } = this.props.location;\r\n    const { pathname } = this.props.location;\r\n    let params = queryString.parse(search) || \"\";\r\n    params.pageNo = page;\r\n\r\n    const newHistory = queryString.stringify(params);\r\n    search = \"?\" + newHistory;\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners({ url: search });\r\n    } else {\r\n      this.props.getVendors({ url: search });\r\n    }\r\n\r\n    //  let url = pathname.concat(search);\r\n    //  this.props.history.push(url);\r\n\r\n    // let s = !isEmpty(search) ? search : \"\";\r\n    // let newUrl = s.substring(0, s.indexOf(\"&\"));\r\n    // let pageNo = !isEmpty(newUrl) ? newUrl : \"\";\r\n    // this.setState({ pageNo });\r\n  };\r\n\r\n  handleFilters = async () => {\r\n    console.log(\"hhandle filters call\");\r\n\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      categories,\r\n      city,\r\n      eventType,\r\n      targetMarket,\r\n    } = this.state;\r\n\r\n    const { pathname } = this.props.location;\r\n    this.setState({ isLoading: true });\r\n    let { search } = this.props.location;\r\n    console.log(\"search at top\", search);\r\n    const temp = await this.state.filterFound;\r\n    let url;\r\n    let params = queryString.parse(search) || \"\";\r\n\r\n    if (temp == \"country\") {\r\n      if (params.st) delete params[\"st\"];\r\n      if (params.ct) delete params[\"ct\"];\r\n      if (pathname == \"/planners\") params.co = acountry;\r\n      if (pathname == \"/vendors\") params.co = country;\r\n      const newHistory = queryString.stringify(params);\r\n      search = \"?\" + newHistory;\r\n      console.log(search, \"search country hit\");\r\n    }\r\n    if (temp == \"state\") {\r\n      if (params.co) {\r\n        if (params.ct) delete params[\"ct\"];\r\n        params.st = st;\r\n        const newHistory = queryString.stringify(params);\r\n\r\n        search = \"?\" + newHistory;\r\n      } else await this.setState({ st: \"\" });\r\n      //  console.log(search,'search state hit')\r\n      //   url = pathname.concat(search);\r\n      //   url = this.updateQueryStringParameter(url,'st',params.st)\r\n    }\r\n    if (temp == \"city\") {\r\n      params.ct = city;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n    }\r\n\r\n    // country filter\r\n\r\n    if (params.co && this.props.allCountriesOptions.length == 0) {\r\n      await this.props.getAllCountriesOptions();\r\n    }\r\n    if (params.co && this.props.allCountriesOptions.length > 0) {\r\n      console.log(\"handle filters in co\");\r\n      await this.props.getAllCountriesOptions();\r\n      const elementFound = await this.props.allCountriesOptions.filter(\r\n        (u) => u.value == params.co\r\n      );\r\n      console.log(\r\n        elementFound,\r\n        \"element fountd\",\r\n        params.co,\r\n        \"array\",\r\n        this.props.allCountriesOptions\r\n      );\r\n      if (elementFound.length == 0) {\r\n        console.log(\"country element no found in handle filters\");\r\n        delete params.co;\r\n        if (params.st) delete params.st;\r\n        if (params.ct) delete params.ct;\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"co\", \"Select Country...\");\r\n        if (pathname == \"/planners\") this.setState({ acountry: \"\" });\r\n        if (pathname == \"/vendors\") this.setState({ country: \"\" });\r\n      } else {\r\n        if (acountry !== params.co && pathname == \"/planners\")\r\n          await this.setState({ acountry: params.co });\r\n        if (country !== params.co && pathname == \"/vendors\")\r\n          await this.setState({ country: params.co });\r\n        console.log(\"matched countries\");\r\n        if (this.state.acountry && pathname == \"/planners\") {\r\n          this.props.getStatesOptions({\r\n            code: this.state.acountry,\r\n          });\r\n        }\r\n        if (this.state.country && pathname == \"/vendors\") {\r\n          this.props.getStatesOptions({\r\n            code: this.state.country,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    // end contries filter\r\n\r\n    if (params.st && this.props.stateOptions.length == 0) {\r\n      if (this.state.acountry) {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n      if (this.state.country) {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n    }\r\n    if (params.st && params.co && this.props.stateOptions.length > 0) {\r\n      console.log(\"handle filters in state\");\r\n\r\n      if (pathname == \"/planners\") {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n      if (pathname == \"/vendors\") {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n\r\n      const elementFound = await this.props.stateOptions.filter(\r\n        (u) => u.value == params.st\r\n      );\r\n      // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n      if (elementFound.length == 0) {\r\n        console.log(\"state element no found in handle filters\");\r\n\r\n        if (params.st) delete params.st;\r\n        if (params.ct) delete params.ct;\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"st\", \"Select State...\");\r\n        await this.setState({ st: \"\" });\r\n      } else {\r\n        await this.setState({ st: params.st });\r\n        console.log(\"matched states\");\r\n        const data = {\r\n          code: params.st,\r\n        };\r\n        await this.props.getCityOptions(data);\r\n      }\r\n    }\r\n    // state end\r\n\r\n    if (params.ct && params.st && params.co) {\r\n      if (!this.props.cityOptions || this.props.cityOptions.length < 1) {\r\n        const data = {\r\n          code: params.st,\r\n        };\r\n        await this.props.getCityOptions(data);\r\n      }\r\n\r\n      const elementFound = await this.props.cityOptions.filter(\r\n        (u) => u.value == params.ct\r\n      );\r\n\r\n      if (elementFound.length == 0) {\r\n        console.log(\"country element no found\");\r\n        delete params.ct;\r\n\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"ct\", \"Select City\");\r\n        await this.setState({ city: \"\" });\r\n      } else {\r\n        const stFound = this.props.stateOptions.filter(\r\n          (u) => u.value == params.st\r\n        );\r\n        const coFound = this.props.cityOptions.filter(\r\n          (u) => u.value == params.co\r\n        );\r\n        if (stFound && coFound) {\r\n          this.setState({ st: params.st, city: params.ct });\r\n        } else {\r\n          console.log(\"country element no found\");\r\n\r\n          if (params.st) delete params.st;\r\n          if (params.ct) delete params.ct;\r\n          const newHistory = queryString.stringify(params);\r\n          search = \"?\" + newHistory;\r\n        }\r\n      }\r\n    }\r\n    if (params.ct && (!params.st || !params.co)) {\r\n      if (params.ct) delete params.ct;\r\n      const newHistory = queryString.stringify(params);\r\n      search = \"?\" + newHistory;\r\n    }\r\n\r\n    if (!isEmpty(categories)) {\r\n      params.cat = categories;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"cat\", categories);\r\n    } else if (isEmpty(categories) && search.cat) {\r\n      await this.setState({ categories: search.cat });\r\n    }\r\n\r\n    if (!isEmpty(eventType)) {\r\n      params.et = eventType;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"et\", eventType);\r\n    } else if (isEmpty(eventType) && search.et) {\r\n      await this.setState({ eventType: search.et });\r\n    }\r\n\r\n    if (!isEmpty(targetMarket)) {\r\n      params.tm = targetMarket;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"tm\", targetMarket);\r\n    } else if (isEmpty(targetMarket) && search.tm) {\r\n      await this.setState({ targetMarket: search.tm });\r\n    }\r\n\r\n    url = pathname.concat(search);\r\n    console.log(\"URL AFTER CHANGING\", url);\r\n\r\n    this.props.history.push(url);\r\n\r\n    let finalSearch = this.props.history.location.search;\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners({ url: finalSearch });\r\n    } else {\r\n      this.props.getVendors({ url: finalSearch });\r\n    }\r\n\r\n    await this.setState({ filterFound: \"\", isLoading: false });\r\n  };\r\n\r\n  filtersExist = () => {\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      categories,\r\n      city,\r\n      eventType,\r\n      targetMarket,\r\n    } = this.state;\r\n    if (\r\n      isEmpty(country) &&\r\n      isEmpty(acountry) &&\r\n      isEmpty(st) &&\r\n      isEmpty(categories) &&\r\n      isEmpty(city) &&\r\n      isEmpty(eventType) &&\r\n      isEmpty(targetMarket)\r\n    ) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  clearFilters = async () => {\r\n    this.setState({\r\n      country: \"\",\r\n      acountry: \"\",\r\n      st: \"\",\r\n      city: \"\",\r\n      eventType: \"\",\r\n      categories: \"\",\r\n      targetMarket: \"\",\r\n    });\r\n\r\n    const { pathname } = this.props.location;\r\n    let final_search = pathname.concat(\"?\");\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners();\r\n    } else {\r\n      this.props.getVendors();\r\n    }\r\n    this.props.history.push(final_search);\r\n  };\r\n\r\n  updateQueryStringParameter = (uri, key, value) => {\r\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n    var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\r\n    if (uri.match(re)) {\r\n      return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\r\n    } else {\r\n      return uri + separator + key + \"=\" + value;\r\n    }\r\n  };\r\n\r\n  seeAll = () => {\r\n    this.setState({ seeAll: !this.state.seeAll });\r\n    const { pathname } = this.props.location;\r\n    pathname === \"/planners\"\r\n      ? this.props.getPlanners()\r\n      : this.props.getVendors();\r\n  };\r\n\r\n  createImages = (images) => {\r\n    let imageValues = [];\r\n    for (let i = 0; i < images.length; i++) {\r\n      if (!isEmpty(images[i])) {\r\n        imageValues.push(images[i]);\r\n      }\r\n    }\r\n    return imageValues;\r\n  };\r\n  // onNext = async()=>{\r\n  //   console.log('hit')\r\n  // }\r\n  render() {\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      city,\r\n      eventType,\r\n      categories,\r\n      targetMarket,\r\n    } = this.state;\r\n\r\n    const { pathname } = this.props.location;\r\n\r\n    const {\r\n      allAfricanCountriesOptions,\r\n      allCountriesOptions,\r\n      stateOptions,\r\n      cityOptions,\r\n      eventTypeOptions,\r\n      targetMarketOptions,\r\n      categoriesOptions,\r\n      loading,\r\n      pager,\r\n      pageOfItems,\r\n      t,\r\n    } = this.props;\r\n    const { search } = this.props.location;\r\n\r\n    const params = queryString.parse(search) || \"\";\r\n    const disable = this.props.noResults;\r\n    let s = !isEmpty(search) ? search : \"\";\r\n    console.log(\"S\", s);\r\n\r\n    let tobeRendered = null;\r\n\r\n    if (this.props.loading || this.state.isLoading) tobeRendered = <Spinner />;\r\n    else if (pageOfItems && pageOfItems.length > 0) {\r\n      tobeRendered = pageOfItems.map((user) => (\r\n        <PlannerItem\r\n          key={user._id}\r\n          user={user}\r\n          imageValues={\r\n            user.images ? this.createImages(Object.values(user.images)) : []\r\n          }\r\n          pathname={pathname}\r\n          t={t}\r\n        />\r\n      ));\r\n    } else {\r\n      tobeRendered = <NoResults seeAll={this.seeAll} pathname={pathname} />;\r\n    }\r\n\r\n    let pagination =\r\n      !loading &&\r\n      !this.state.isLoading &&\r\n      pager &&\r\n      pager.pages &&\r\n      pager.pages.length > 0 ? (\r\n        <Pagination\r\n          pager={pager}\r\n          s={s}\r\n          handlePagination={this.handlePagination}\r\n        />\r\n      ) : null;\r\n\r\n    // Adding dynamic value for Label for Categories\r\n\r\n    return (\r\n      <section className=\"admin-section d-flex justify-content-center\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Filters\r\n                country={country}\r\n                acountry={acountry}\r\n                st={st}\r\n                city={city}\r\n                categories={categories}\r\n                eventType={eventType}\r\n                targetMarket={targetMarket}\r\n                africanCountriesOptions={allAfricanCountriesOptions}\r\n                countriesOptions={allCountriesOptions}\r\n                pathname={pathname}\r\n                eventTypeOptions={eventTypeOptions}\r\n                stateOptions={stateOptions}\r\n                cityOptions={cityOptions}\r\n                categoryOptions={categoriesOptions}\r\n                targetMarketOptions={targetMarketOptions}\r\n                onSelectCountry={this.onSelectCountry}\r\n                onSelectState={this.onSelectState}\r\n                clearFilters={this.clearFilters}\r\n                onChange={this.onChange}\r\n                filtersExist={this.filtersExist}\r\n                t={t}\r\n                disable={params.query ? disable : false}\r\n                // onNext = {()=>this.onNext()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <div className={pathname === \"/vendors\" ? \"vendor\" : \"\"}>\r\n                {tobeRendered}\r\n              </div>\r\n              <div className=\"packages-area\">{pagination}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allAfricanCountriesOptions: state.options.allAfricanCountriesOptions,\r\n  allCountriesOptions: state.options.allCountriesOptions,\r\n  cityOptions: state.options.cityOptions,\r\n  stateOptions: state.options.stateOptions,\r\n  categoriesOptions: state.options.webCatOptions,\r\n  eventTypeOptions: state.options.webEventOptions,\r\n  targetMarketOptions: state.options.targetMarketOptions,\r\n  filtersLoaded: state.options.filtersLoaded,\r\n  pager: state.common.pager,\r\n  pageOfItems: state.common.pageOfItems,\r\n  vendors: state.vendor.vendors,\r\n  loading: state.common.loading,\r\n  noResults: state.common.noResults,\r\n  t: state.common.translatedLabels,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  resetResults,\r\n  getPlanners,\r\n  getVendors,\r\n  getFilterOptions,\r\n  getStatesOptions,\r\n  getCityOptions,\r\n  getAllCountriesOptions,\r\n})(withRouter(Planners));\r\n","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Vendors.js",["745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Filters from \"../Filters/Filters\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlanners } from \"../../../../actions/plannerActions\";\r\nimport { getVendors } from \"../../../../actions/vendorActions\";\r\nimport PlannerItem from \"../PlannerItem/PlannerItem\";\r\n\r\nimport {\r\n  getFilterOptions,\r\n  getStatesOptions,\r\n  getCityOptions,\r\n  getAllCountriesOptions,\r\n} from \"../../../../actions/optionActions\";\r\nimport { resetResults } from \"../../../../actions/common\";\r\nimport Spinner from \"../../../common/Spinner/Spinner\";\r\nimport NoResults from \"../../NoResults\";\r\nimport queryString from \"query-string\";\r\nimport isEmpty from \"../../../../utils/is-empty\";\r\nimport Pagination from \"../../../../utils/Pagination\";\r\n\r\nclass Vendors extends Component {\r\n  state = {\r\n    pager: {},\r\n    pageOfItems: [],\r\n    pageNo: 1,\r\n    query: \"\",\r\n    acountry: \"\",\r\n    country: \"\",\r\n    st: \"\",\r\n    city: \"\",\r\n    eventType: \"\",\r\n    categories: \"\",\r\n    targetMarket: \"\",\r\n    seeAll: false,\r\n    filterFound: \"\",\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let params;\r\n    await this.props.getAllCountriesOptions();\r\n    if (this.props.vendorPageOfItems.length < 1) {\r\n      console.log(\"IN FUCKING CDM\");\r\n      // Getting Search Query Params and Mapping it to state\r\n      const { search } = this.props.location;\r\n      params = queryString.parse(search) || \"\";\r\n      this.urlMapper(params, \"initial\");\r\n    }\r\n    if (!this.props.filtersLoaded) this.props.getFilterOptions();\r\n    await this.props.getAllCountriesOptions();\r\n    if (params) {\r\n      await this.props.getAllCountriesOptions();\r\n      await this.handleFilters();\r\n    }\r\n  };\r\n\r\n  getPlanners = async () => {\r\n    await this.props.getPlanners();\r\n    this.setState({\r\n      pager: this.props.pager,\r\n      pageOfItems: this.props.pageOfItems,\r\n    });\r\n  };\r\n  componentWillReceiveProps = async (prevProps, prevState) => {\r\n    console.log(\"CWRCPRS HITS\");\r\n    if (prevProps.location.search != this.props.location.search) {\r\n      const {\r\n        country,\r\n        acountry,\r\n        st,\r\n        categories,\r\n        city,\r\n        eventType,\r\n        targetMarket,\r\n      } = this.state;\r\n      const previousSearch = prevProps.location.search;\r\n      let url;\r\n      let search;\r\n      //  await  this.setState({isLoading:true})\r\n      const { pathname } = this.props.location;\r\n      let currentSearch = this.props.location.search;\r\n      const currentPath = this.props.location.pathname;\r\n      const previousPath = prevProps.location.pathname;\r\n      let currentParams = queryString.parse(currentSearch) || \"\";\r\n      let previousParams = queryString.parse(previousSearch);\r\n      if (previousParams.co != currentParams.co) {\r\n        if (pathname == \"/planners\") {\r\n          if (currentParams.co == acountry) {\r\n            console.log(\"cwrp handle filter\");\r\n            await this.setState({ acountry: previousParams.co, country: \"\" });\r\n\r\n            if (\r\n              previousParams.co &&\r\n              this.props.allCountriesOptions.length > 0\r\n            ) {\r\n              await this.props.getAllCountriesOptions();\r\n              const elementFound = await this.props.allCountriesOptions.filter(\r\n                (u) => u.value == previousParams.co\r\n              );\r\n              // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n              if (elementFound.length == 0) {\r\n                console.log(\"country element no found\");\r\n                delete currentParams.co;\r\n                if (currentParams.st) delete currentParams.st;\r\n                if (currentParams.ct) delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  // this.props.getVendors({ url: currentSearch });\r\n                }\r\n              } else {\r\n                if (acountry !== previousParams.co)\r\n                  await this.setState({ acountry: previousParams.co });\r\n                console.log(\"matched countries\");\r\n                const newHistory = queryString.stringify(previousParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                if (this.state.acountry) {\r\n                  await this.props.getStatesOptions({\r\n                    code: this.state.acountry,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            if (!previousParams.co) {\r\n              if (currentParams.co) delete currentParams.co;\r\n              if (currentParams.st) delete currentParams.st;\r\n              if (currentParams.ct) delete currentParams.ct;\r\n              const newHistory = queryString.stringify(currentParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (pathname == \"/vendors\") {\r\n          if (currentParams.co == country) {\r\n            console.log(\"cwrp handle filter\");\r\n            await this.setState({ country: previousParams.co, acountry: \"\" });\r\n\r\n            if (\r\n              previousParams.co &&\r\n              this.props.allCountriesOptions.length > 0\r\n            ) {\r\n              await this.props.getAllCountriesOptions();\r\n              const elementFound = await this.props.allCountriesOptions.filter(\r\n                (u) => u.value == previousParams.co\r\n              );\r\n              // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n              if (elementFound.length == 0) {\r\n                console.log(\"country element no found\");\r\n                delete currentParams.co;\r\n                if (currentParams.st) delete currentParams.st;\r\n                if (currentParams.ct) delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n                if (pathname === \"/vendors\") {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                } else {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                }\r\n              } else {\r\n                if (country !== previousParams.co)\r\n                  await this.setState({ country: previousParams.co });\r\n                console.log(\"matched countries\");\r\n                const newHistory = queryString.stringify(previousParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                if (pathname === \"/vendors\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                if (this.state.country) {\r\n                  await this.props.getStatesOptions({\r\n                    code: this.state.country,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n            if (!previousParams.co) {\r\n              if (currentParams.co) delete currentParams.co;\r\n              if (currentParams.st) delete currentParams.st;\r\n              if (currentParams.ct) delete currentParams.ct;\r\n              const newHistory = queryString.stringify(currentParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(url, \"co\", \"\");\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // countries end\r\n      if (previousParams.st != currentParams.st) {\r\n        // console.log('cwrp handle filter 2 states', previousParams.st,currentParams,'state',this.state.st)\r\n\r\n        if (currentParams.st && !isEmpty(st) && currentParams.st == st) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.st) {\r\n            delete currentParams.st;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            // this.props.history.push(url);\r\n            await this.setState({ st: \"\" });\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n          if (previousParams.st && previousParams.co) {\r\n            if (\r\n              !this.props.stateOptions &&\r\n              this.props.stateOptions.length < 1\r\n            ) {\r\n              if (previousParams.co) {\r\n                await this.props.getStatesOptions({ code: previousParams.co });\r\n              }\r\n            }\r\n            const elementFound = await this.props.stateOptions.filter(\r\n              (u) => u.value == previousParams.st\r\n            );\r\n            if (elementFound.length == 0) {\r\n              delete previousParams.st;\r\n\r\n              if (previousParams.ct) delete previousParams.ct;\r\n\r\n              const newHistory = queryString.stringify(previousParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"st\",\r\n                \"Select State...\"\r\n              );\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"ct\",\r\n                \"Select City...\"\r\n              );\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n              // this.props.history.push(url);\r\n              console.log(currentSearch, \"current\");\r\n              await this.setState({ st: \"\", city: \"\" });\r\n            } else {\r\n              console.log(\"matched states element\", elementFound);\r\n\r\n              const data = {\r\n                code: previousParams.st,\r\n              };\r\n              await this.props.getCityOptions(data);\r\n              const newHistory = queryString.stringify(previousParams);\r\n              currentSearch = \"?\" + newHistory;\r\n              url = pathname.concat(currentSearch);\r\n              url = this.updateQueryStringParameter(\r\n                url,\r\n                \"st\",\r\n                previousParams.st\r\n              );\r\n              // this.props.history.push(url);\r\n              await this.setState({ st: previousParams.st });\r\n              if (pathname === \"/planners\") {\r\n                this.props.getPlanners({ url: currentSearch });\r\n              } else {\r\n                this.props.getVendors({ url: currentSearch });\r\n              }\r\n              console.log(\r\n                currentParams.st,\r\n                previousParams.st,\r\n                \"state set\",\r\n                this.state.st\r\n              );\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.st && previousParams.st) {\r\n          console.log(\"logic is here\");\r\n          if (previousParams.co) {\r\n            await this.props.getStatesOptions({ code: previousParams.co });\r\n          }\r\n          const elementFound = await this.props.stateOptions.filter(\r\n            (u) => u.value == previousParams.st\r\n          );\r\n          if (elementFound.length == 0) {\r\n            delete previousParams.st;\r\n\r\n            if (previousParams.ct) delete previousParams.ct;\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            // this.props.history.push(url);\r\n            url = this.updateQueryStringParameter(url, \"st\", \"Select State...\");\r\n            url = this.updateQueryStringParameter(url, \"ct\", \"Select City...\");\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            console.log(currentSearch, \"current\");\r\n            await this.setState({ st: \"\", city: \"\" });\r\n          } else {\r\n            console.log(\"matched states element logic in here\", elementFound);\r\n\r\n            const data = {\r\n              code: previousParams.st,\r\n            };\r\n            await this.props.getCityOptions(data);\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            // url = pathname.concat(currentSearch);\r\n            // url = this.updateQueryStringParameter(url,'st',previousParams.st)\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            // this.props.history.push(url);\r\n            await this.setState({ st: previousParams.st });\r\n          }\r\n        }\r\n      }\r\n\r\n      // state end\r\n      if (\r\n        previousParams.ct != currentParams.ct &&\r\n        previousParams.st &&\r\n        previousParams.co\r\n      ) {\r\n        if (currentParams.ct && !isEmpty(city) && currentParams.ct == city) {\r\n          console.log(currentParams.ct, \"city\", previousParams.ct);\r\n\r\n          if (!previousParams.ct) {\r\n            delete currentParams.ct;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            //this.props.history.push(url);\r\n\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            await this.setState({ city: \"\" });\r\n          }\r\n\r\n          if (previousParams.ct != currentParams.ct) {\r\n            if (\r\n              currentParams.ct &&\r\n              !isEmpty(city) &&\r\n              currentParams.ct == city\r\n            ) {\r\n              console.log(currentParams.ct, \"city\", previousParams.ct);\r\n\r\n              if (!previousParams.ct) {\r\n                delete currentParams.ct;\r\n                const newHistory = queryString.stringify(currentParams);\r\n                currentSearch = \"?\" + newHistory;\r\n                url = pathname.concat(currentSearch);\r\n                if (pathname === \"/planners\") {\r\n                  this.props.getPlanners({ url: currentSearch });\r\n                } else {\r\n                  this.props.getVendors({ url: currentSearch });\r\n                }\r\n                // this.props.history.push(url);\r\n                await this.setState({ city: \"\" });\r\n              }\r\n\r\n              if (previousParams.st && previousParams.co && previousParams.ct) {\r\n                if (\r\n                  !this.props.cityOptions &&\r\n                  this.props.cityOptions.length < 1\r\n                ) {\r\n                  if (previousParams.st) {\r\n                    const data = {\r\n                      code: previousParams.st,\r\n                    };\r\n                    await this.props.getCityOptions(data);\r\n                  }\r\n                }\r\n                const elementFound = await this.props.cityOptions.filter(\r\n                  (u) => u.value == previousParams.ct\r\n                );\r\n                if (elementFound.length == 0) {\r\n                  console.log(\"not matched\");\r\n                  delete previousParams.ct;\r\n                  const newHistory = queryString.stringify(previousParams);\r\n                  currentSearch = \"?\" + newHistory;\r\n                  url = pathname.concat(currentSearch);\r\n                  if (pathname === \"/planners\") {\r\n                    this.props.getPlanners({ url: currentSearch });\r\n                  } else {\r\n                    this.props.getVendors({ url: currentSearch });\r\n                  }\r\n                  //   this.props.history.push(url);\r\n                  console.log(currentSearch, \"current\");\r\n                  await this.setState({ city: \"\" });\r\n                } else {\r\n                  console.log(\"matched states element\", elementFound);\r\n\r\n                  const newHistory = queryString.stringify(previousParams);\r\n                  currentSearch = \"?\" + newHistory;\r\n                  url = pathname.concat(currentSearch);\r\n                  url = this.updateQueryStringParameter(\r\n                    url,\r\n                    \"ct\",\r\n                    previousParams.ct\r\n                  );\r\n                  //  this.props.history.push(url);\r\n                  await this.setState({ city: previousParams.ct });\r\n                  if (pathname === \"/planners\") {\r\n                    this.props.getPlanners({ url: currentSearch });\r\n                  } else {\r\n                    this.props.getVendors({ url: currentSearch });\r\n                  }\r\n                  // console.log(currentParams.st,previousParams.st,'state set',this.state.st);\r\n                }\r\n              }\r\n\r\n              // await this.handleFilters()\r\n            }\r\n          }\r\n          // await this.handleFilters()\r\n        }\r\n        if (!this.state.city && previousParams.st && previousParams.co) {\r\n          console.log(\"logic is here\");\r\n          if (previousParams.st) {\r\n            const data = {\r\n              code: previousParams.st,\r\n            };\r\n            await this.props.getCityOptions(data);\r\n          }\r\n          const elementFound = await this.props.cityOptions.filter(\r\n            (u) => u.value == previousParams.ct\r\n          );\r\n          if (elementFound.length == 0) {\r\n            delete previousParams.ct;\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n\r\n            //     this.props.history.push(url);\r\n            console.log(currentSearch, \"current\");\r\n            await this.setState({ city: \"\" });\r\n          } else {\r\n            console.log(\"matched states element logic in here\", elementFound);\r\n\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n\r\n            // url = pathname.concat(currentSearch);\r\n            // url = this.updateQueryStringParameter(url,'st',previousParams.st)\r\n            // this.props.history.push(url);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n            await this.setState({ city: previousParams.ct });\r\n          }\r\n        }\r\n      }\r\n\r\n      // city end\r\n      if (previousParams.cat != currentParams.cat) {\r\n        if (\r\n          currentParams.cat &&\r\n          !isEmpty(categories) &&\r\n          currentParams.cat == categories\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.cat) {\r\n            delete currentParams.cat;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ categories: \"\" });\r\n          }\r\n          if (previousParams.cat) {\r\n            await this.setState({ categories: previousParams.cat });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"cat\", categories);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.categories && previousParams.cat) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"cat\",\r\n            previousParams.cat\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ categories: previousParams.cat });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // categories end   11\r\n      if (previousParams.tm != currentParams.tm) {\r\n        if (\r\n          currentParams.tm &&\r\n          !isEmpty(targetMarket) &&\r\n          currentParams.tm == targetMarket\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.tm) {\r\n            delete currentParams.tm;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ targetMarket: \"\" });\r\n          }\r\n          if (previousParams.tm) {\r\n            await this.setState({ categories: previousParams.tm });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"tm\", targetMarket);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.targetMarket && previousParams.tm) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"tm\",\r\n            previousParams.tm\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ targetMarket: previousParams.tm });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // target market end\r\n      if (previousParams.et != currentParams.et) {\r\n        if (\r\n          currentParams.et &&\r\n          !isEmpty(eventType) &&\r\n          currentParams.et == eventType\r\n        ) {\r\n          // console.log('cwrp handle filter 2 states', previousParams.st,currentParams)\r\n\r\n          if (!previousParams.et) {\r\n            delete currentParams.et;\r\n            const newHistory = queryString.stringify(currentParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n\r\n            await this.setState({ eventType: \"\" });\r\n          }\r\n          if (previousParams.et) {\r\n            await this.setState({ eventType: previousParams.et });\r\n            const newHistory = queryString.stringify(previousParams);\r\n            currentSearch = \"?\" + newHistory;\r\n            url = pathname.concat(currentSearch);\r\n            url = this.updateQueryStringParameter(url, \"et\", eventType);\r\n            if (pathname === \"/planners\") {\r\n              this.props.getPlanners({ url: currentSearch });\r\n            } else {\r\n              this.props.getVendors({ url: currentSearch });\r\n            }\r\n          }\r\n\r\n          //  await this.handleFilters()\r\n        }\r\n        //\r\n        if (!this.state.eventType && previousParams.et) {\r\n          console.log(\"logic is here\");\r\n\r\n          const newHistory = queryString.stringify(previousParams);\r\n          currentSearch = \"?\" + newHistory;\r\n\r\n          url = pathname.concat(currentSearch);\r\n          url = await this.updateQueryStringParameter(\r\n            url,\r\n            \"et\",\r\n            previousParams.et\r\n          );\r\n          // this.props.history.push(url);\r\n          await this.setState({ eventType: previousParams.et });\r\n          if (pathname === \"/planners\") {\r\n            this.props.getPlanners({ url: currentSearch });\r\n          } else {\r\n            this.props.getVendors({ url: currentSearch });\r\n          }\r\n        }\r\n      }\r\n      // event type end\r\n    }\r\n\r\n    // if (!this.props.location.search && prevProps.location.search) {\r\n    //   this.clearFilters();\r\n    // }\r\n\r\n    // await  this.setState({isLoading:false})\r\n  };\r\n\r\n  componentDidUpdate = async (prevProps, prevState) => {\r\n    const previousSearch = prevProps.location.search;\r\n    const currentSearch = this.props.location.search;\r\n    const currentPath = this.props.location.pathname;\r\n    const previousPath = prevProps.location.pathname;\r\n    let currentParams = queryString.parse(currentSearch) || \"\";\r\n    let previousParams = queryString.parse(previousSearch);\r\n    if (prevState.acountry != this.state.acountry) {\r\n      console.log(\"cdu handle filter\");\r\n    }\r\n    //  console.log(prevState.acountry,'prevst',this.state.acountry,'current',currentParams.co,'currentpar',previousParams.co,'prevparam','co history2')\r\n\r\n    //  if(currentParams.co == this.state.acountry){\r\n    //    this.handleFilters();\r\n    //  }\r\n    // if (previousSearch !== currentSearch) {\r\n\r\n    //   await this.handleFilters();\r\n\r\n    // }\r\n\r\n    if (currentPath !== previousPath) {\r\n      console.log(\"in cdu condition\");\r\n      const { search } = this.props.history.location;\r\n      if (currentPath === \"/planners\") {\r\n        this.props.getPlanners({ url: search });\r\n        this.setState({ country: \"\" });\r\n      } else {\r\n        this.props.getVendors({ url: search });\r\n        this.setState({ acountry: \"\" });\r\n      }\r\n\r\n      // await this.handleFilters();\r\n    }\r\n  };\r\n\r\n  /* This Mehtod will map url params to component state on intial and \r\n     updates */\r\n  urlMapper = (params, method) => {\r\n    let mappingObject = {};\r\n    const stateMappingObject = {\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.query) && { query: params.query }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.pageNo) && { pageNo: params.pageNo }),\r\n      ...(!isEmpty(params) && !isEmpty(params.co) && { acountry: params.co }),\r\n      ...(!isEmpty(params) && !isEmpty(params.st) && { st: params.st }),\r\n      ...(!isEmpty(params) && !isEmpty(params.ct) && { city: params.ct }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.cat) && { categories: params.cat }),\r\n      ...(!isEmpty(params) && !isEmpty(params.et) && { eventType: params.et }),\r\n      ...(!isEmpty(params) &&\r\n        !isEmpty(params.tm) && { targetMarket: params.tm }),\r\n    };\r\n    if (params && params.co) mappingObject.acountry = params.co;\r\n    else mappingObject.acountry = \"\";\r\n    if (params && params.st) mappingObject.st = params.st;\r\n    else mappingObject.st = \"\";\r\n    if (params && params.ct) mappingObject.city = params.ct;\r\n    else mappingObject.city = \"\";\r\n    if (params && params.cat) mappingObject.categories = params.cat;\r\n    else mappingObject.categories = \"\";\r\n    if (params && params.et) mappingObject.eventType = params.et;\r\n    else mappingObject.eventType = \"\";\r\n    if (params && params.tm) mappingObject.targetMarket = params.tm;\r\n    else mappingObject.targetMarket = \"\";\r\n\r\n    this.setState(mappingObject, () => {\r\n      if (method === \"initial\") {\r\n        if (this.state.acountry || this.state.country) {\r\n          if (this.state.acountry) {\r\n            this.props.getStatesOptions({\r\n              code: this.state.acountry,\r\n              country: \"\",\r\n            });\r\n          }\r\n          if (this.state.country) {\r\n            this.props.getStatesOptions({\r\n              code: this.state.country,\r\n              acountry: \"\",\r\n            });\r\n          }\r\n\r\n          if (this.state.st) this.props.getCityOptions({ code: this.state.st });\r\n        }\r\n        const { pathname } = this.props.location;\r\n        const { search } = this.props.location;\r\n        const url = search;\r\n        if (pathname === \"/planners\") this.props.getPlanners({ url });\r\n        else if (pathname === \"/vendors\") this.props.getVendors({ url });\r\n      } else {\r\n        const { pathname } = this.props.location;\r\n        const { search } = this.props.location;\r\n        const url = search;\r\n        if (pathname === \"/planners\") this.props.getPlanners({ url });\r\n        else if (pathname === \"/vendors\") this.props.getVendors({ url });\r\n      }\r\n    });\r\n  };\r\n  onChange = async (e) => {\r\n    e.persist();\r\n\r\n    const cityValue = e.target.value;\r\n    console.log(e.target.name, \"eeee\");\r\n    if (e.target.name == \"city\") {\r\n      this.setState({ city: cityValue, filterFound: \"city\" }, () => {\r\n        this.handleFilters();\r\n      });\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value }, () => {\r\n        this.handleFilters();\r\n      });\r\n    }\r\n  };\r\n\r\n  onSelectCountry = async (e) => {\r\n    const countryCode = e.target.value;\r\n    const label = {\r\n      code: countryCode,\r\n    };\r\n    this.setState({ isLoading: true });\r\n    let states;\r\n\r\n    const { pathname } = this.props.location;\r\n    if (pathname == \"/planners\") {\r\n      this.setState(\r\n        {\r\n          acountry: countryCode,\r\n          st: \"\",\r\n          country: \"\",\r\n          city: \"\",\r\n          filterFound: \"country\",\r\n        },\r\n        () => this.handleFilters()\r\n      );\r\n\r\n      if (this.state.acountry) {\r\n        this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n    }\r\n    if (pathname == \"/vendors\") {\r\n      console.log(\"vendors state set\");\r\n      this.setState(\r\n        {\r\n          country: countryCode,\r\n          st: \"\",\r\n          acountry: \"\",\r\n          city: \"\",\r\n          filterFound: \"country\",\r\n        },\r\n        () => {\r\n          this.handleFilters();\r\n        }\r\n      );\r\n\r\n      if (this.state.country) {\r\n        this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSelectState = async (e) => {\r\n    let stateValue = e.target.value;\r\n    const data = {\r\n      code: stateValue,\r\n    };\r\n    await this.setState({ isLoading: true });\r\n    await this.props.getCityOptions(data);\r\n    await this.setState(\r\n      { st: stateValue, city: \"\", filterFound: \"state\" },\r\n      () => {\r\n        this.handleFilters();\r\n      }\r\n    );\r\n  };\r\n\r\n  handlePagination = (page) => {\r\n    let { search } = this.props.location;\r\n    const { pathname } = this.props.location;\r\n    let params = queryString.parse(search) || \"\";\r\n    params.pageNo = page;\r\n\r\n    const newHistory = queryString.stringify(params);\r\n    search = \"?\" + newHistory;\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners({ url: search });\r\n    } else {\r\n      this.props.getVendors({ url: search });\r\n    }\r\n\r\n    //  let url = pathname.concat(search);\r\n    //  this.props.history.push(url);\r\n\r\n    // let s = !isEmpty(search) ? search : \"\";\r\n    // let newUrl = s.substring(0, s.indexOf(\"&\"));\r\n    // let pageNo = !isEmpty(newUrl) ? newUrl : \"\";\r\n    // this.setState({ pageNo });\r\n  };\r\n\r\n  handleFilters = async () => {\r\n    console.log(\"hhandle filters call\");\r\n\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      categories,\r\n      city,\r\n      eventType,\r\n      targetMarket,\r\n    } = this.state;\r\n\r\n    const { pathname } = this.props.location;\r\n    this.setState({ isLoading: true });\r\n    let { search } = this.props.location;\r\n    console.log(\"search at top\", search);\r\n    const temp = await this.state.filterFound;\r\n    let url;\r\n    let params = queryString.parse(search) || \"\";\r\n\r\n    if (temp == \"country\") {\r\n      if (params.st) delete params[\"st\"];\r\n      if (params.ct) delete params[\"ct\"];\r\n      if (pathname == \"/planners\") params.co = acountry;\r\n      if (pathname == \"/vendors\") params.co = country;\r\n      const newHistory = queryString.stringify(params);\r\n      search = \"?\" + newHistory;\r\n      console.log(search, \"search country hit\");\r\n    }\r\n    if (temp == \"state\") {\r\n      if (params.co) {\r\n        if (params.ct) delete params[\"ct\"];\r\n        params.st = st;\r\n        const newHistory = queryString.stringify(params);\r\n\r\n        search = \"?\" + newHistory;\r\n      } else await this.setState({ st: \"\" });\r\n      //  console.log(search,'search state hit')\r\n      //   url = pathname.concat(search);\r\n      //   url = this.updateQueryStringParameter(url,'st',params.st)\r\n    }\r\n    if (temp == \"city\") {\r\n      params.ct = city;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n    }\r\n\r\n    // country filter\r\n\r\n    if (params.co && this.props.allCountriesOptions.length == 0) {\r\n      await this.props.getAllCountriesOptions();\r\n    }\r\n    if (params.co && this.props.allCountriesOptions.length > 0) {\r\n      console.log(\"handle filters in co\");\r\n      await this.props.getAllCountriesOptions();\r\n      const elementFound = await this.props.allCountriesOptions.filter(\r\n        (u) => u.value == params.co\r\n      );\r\n      console.log(\r\n        elementFound,\r\n        \"element fountd\",\r\n        params.co,\r\n        \"array\",\r\n        this.props.allCountriesOptions\r\n      );\r\n      if (elementFound.length == 0) {\r\n        console.log(\"country element no found in handle filters\");\r\n        delete params.co;\r\n        if (params.st) delete params.st;\r\n        if (params.ct) delete params.ct;\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"co\", \"Select Country...\");\r\n        if (pathname == \"/planners\") this.setState({ acountry: \"\" });\r\n        if (pathname == \"/vendors\") this.setState({ country: \"\" });\r\n      } else {\r\n        if (acountry !== params.co && pathname == \"/planners\")\r\n          await this.setState({ acountry: params.co });\r\n        if (country !== params.co && pathname == \"/vendors\")\r\n          await this.setState({ country: params.co });\r\n        console.log(\"matched countries\");\r\n        if (this.state.acountry && pathname == \"/planners\") {\r\n          this.props.getStatesOptions({\r\n            code: this.state.acountry,\r\n          });\r\n        }\r\n        if (this.state.country && pathname == \"/vendors\") {\r\n          this.props.getStatesOptions({\r\n            code: this.state.country,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    // end contries filter\r\n\r\n    if (params.st && this.props.stateOptions.length == 0) {\r\n      if (this.state.acountry) {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n      if (this.state.country) {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n    }\r\n    if (params.st && params.co && this.props.stateOptions.length > 0) {\r\n      console.log(\"handle filters in state\");\r\n\r\n      if (pathname == \"/planners\") {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.acountry,\r\n        });\r\n      }\r\n      if (pathname == \"/vendors\") {\r\n        await this.props.getStatesOptions({\r\n          code: this.state.country,\r\n        });\r\n      }\r\n\r\n      const elementFound = await this.props.stateOptions.filter(\r\n        (u) => u.value == params.st\r\n      );\r\n      // console.log(elementFound, 'element fountd',params.co,'array',this.props.allCountriesOptions);\r\n      if (elementFound.length == 0) {\r\n        console.log(\"state element no found in handle filters\");\r\n\r\n        if (params.st) delete params.st;\r\n        if (params.ct) delete params.ct;\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"st\", \"Select State...\");\r\n        await this.setState({ st: \"\" });\r\n      } else {\r\n        await this.setState({ st: params.st });\r\n        console.log(\"matched states\");\r\n        const data = {\r\n          code: params.st,\r\n        };\r\n        await this.props.getCityOptions(data);\r\n      }\r\n    }\r\n    // state end\r\n\r\n    if (params.ct && params.st && params.co) {\r\n      if (!this.props.cityOptions || this.props.cityOptions.length < 1) {\r\n        const data = {\r\n          code: params.st,\r\n        };\r\n        await this.props.getCityOptions(data);\r\n      }\r\n\r\n      const elementFound = await this.props.cityOptions.filter(\r\n        (u) => u.value == params.ct\r\n      );\r\n\r\n      if (elementFound.length == 0) {\r\n        console.log(\"country element no found\");\r\n        delete params.ct;\r\n\r\n        const newHistory = queryString.stringify(params);\r\n        search = \"?\" + newHistory;\r\n        url = pathname.concat(search);\r\n        url = this.updateQueryStringParameter(url, \"ct\", \"Select City\");\r\n        await this.setState({ city: \"\" });\r\n      } else {\r\n        const stFound = this.props.stateOptions.filter(\r\n          (u) => u.value == params.st\r\n        );\r\n        const coFound = this.props.cityOptions.filter(\r\n          (u) => u.value == params.co\r\n        );\r\n        if (stFound && coFound) {\r\n          this.setState({ st: params.st, city: params.ct });\r\n        } else {\r\n          console.log(\"country element no found\");\r\n\r\n          if (params.st) delete params.st;\r\n          if (params.ct) delete params.ct;\r\n          const newHistory = queryString.stringify(params);\r\n          search = \"?\" + newHistory;\r\n        }\r\n      }\r\n    }\r\n    if (params.ct && (!params.st || !params.co)) {\r\n      if (params.ct) delete params.ct;\r\n      const newHistory = queryString.stringify(params);\r\n      search = \"?\" + newHistory;\r\n    }\r\n\r\n    if (!isEmpty(categories)) {\r\n      params.cat = categories;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"cat\", categories);\r\n    } else if (isEmpty(categories) && search.cat) {\r\n      await this.setState({ categories: search.cat });\r\n    }\r\n\r\n    if (!isEmpty(eventType)) {\r\n      params.et = eventType;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"et\", eventType);\r\n    } else if (isEmpty(eventType) && search.et) {\r\n      await this.setState({ eventType: search.et });\r\n    }\r\n\r\n    if (!isEmpty(targetMarket)) {\r\n      params.tm = targetMarket;\r\n      const newHistory = queryString.stringify(params);\r\n\r\n      search = \"?\" + newHistory;\r\n      url = pathname.concat(search);\r\n      url = this.updateQueryStringParameter(url, \"tm\", targetMarket);\r\n    } else if (isEmpty(targetMarket) && search.tm) {\r\n      await this.setState({ targetMarket: search.tm });\r\n    }\r\n\r\n    url = pathname.concat(search);\r\n    console.log(\"URL AFTER CHANGING\", url);\r\n\r\n    this.props.history.push(url);\r\n\r\n    let finalSearch = this.props.history.location.search;\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners({ url: finalSearch });\r\n    } else {\r\n      this.props.getVendors({ url: finalSearch });\r\n    }\r\n\r\n    await this.setState({ filterFound: \"\", isLoading: false });\r\n  };\r\n\r\n  filtersExist = () => {\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      categories,\r\n      city,\r\n      eventType,\r\n      targetMarket,\r\n    } = this.state;\r\n    if (\r\n      isEmpty(country) &&\r\n      isEmpty(acountry) &&\r\n      isEmpty(st) &&\r\n      isEmpty(categories) &&\r\n      isEmpty(city) &&\r\n      isEmpty(eventType) &&\r\n      isEmpty(targetMarket)\r\n    ) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  clearFilters = async () => {\r\n    this.setState({\r\n      country: \"\",\r\n      acountry: \"\",\r\n      st: \"\",\r\n      city: \"\",\r\n      eventType: \"\",\r\n      categories: \"\",\r\n      targetMarket: \"\",\r\n    });\r\n\r\n    const { pathname } = this.props.location;\r\n    let final_search = pathname.concat(\"?\");\r\n    if (pathname === \"/planners\") {\r\n      this.props.getPlanners();\r\n    } else {\r\n      this.props.getVendors();\r\n    }\r\n    this.props.history.push(final_search);\r\n  };\r\n\r\n  updateQueryStringParameter = (uri, key, value) => {\r\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n    var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\r\n    if (uri.match(re)) {\r\n      return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\r\n    } else {\r\n      return uri + separator + key + \"=\" + value;\r\n    }\r\n  };\r\n\r\n  seeAll = () => {\r\n    this.setState({ seeAll: !this.state.seeAll });\r\n    const { pathname } = this.props.location;\r\n    pathname === \"/planners\"\r\n      ? this.props.getPlanners()\r\n      : this.props.getVendors();\r\n  };\r\n\r\n  createImages = (images) => {\r\n    let imageValues = [];\r\n    for (let i = 0; i < images.length; i++) {\r\n      if (!isEmpty(images[i])) {\r\n        imageValues.push(images[i]);\r\n      }\r\n    }\r\n    return imageValues;\r\n  };\r\n  // onNext = async()=>{\r\n  //   console.log('hit')\r\n  // }\r\n  render() {\r\n    const {\r\n      country,\r\n      acountry,\r\n      st,\r\n      city,\r\n      eventType,\r\n      categories,\r\n      targetMarket,\r\n    } = this.state;\r\n\r\n    const { pathname } = this.props.location;\r\n\r\n    const {\r\n      allAfricanCountriesOptions,\r\n      allCountriesOptions,\r\n      stateOptions,\r\n      cityOptions,\r\n      eventTypeOptions,\r\n      targetMarketOptions,\r\n      categoriesOptions,\r\n      loading,\r\n      pager,\r\n      pageOfItems,\r\n      vendorPager,\r\n      vendorPageOfItems,\r\n      t,\r\n    } = this.props;\r\n    const { search } = this.props.location;\r\n\r\n    const params = queryString.parse(search) || \"\";\r\n    const disable = this.props.noResults;\r\n    console.log(\"NO RESUTLTS\", disable);\r\n    let s = !isEmpty(search) ? search : \"\";\r\n    console.log(\"S\", s);\r\n\r\n    let tobeRendered = null;\r\n    if (disable)\r\n      tobeRendered = <NoResults seeAll={this.seeAll} pathname={pathname} />;\r\n    if (this.props.loading || this.state.isLoading) tobeRendered = <Spinner />;\r\n    else if (vendorPageOfItems && vendorPageOfItems.length > 0) {\r\n      tobeRendered = vendorPageOfItems.map((user) => (\r\n        <PlannerItem\r\n          key={user._id}\r\n          user={user}\r\n          imageValues={\r\n            user.images ? this.createImages(Object.values(user.images)) : []\r\n          }\r\n          pathname={pathname}\r\n          t={t}\r\n        />\r\n      ));\r\n    } else {\r\n      tobeRendered = <Spinner />;\r\n    }\r\n\r\n    let pagination =\r\n      !loading &&\r\n      !this.state.isLoading &&\r\n      vendorPager &&\r\n      vendorPager.pages &&\r\n      vendorPager.pages.length > 0 ? (\r\n        <Pagination\r\n          pager={vendorPager}\r\n          s={s}\r\n          handlePagination={this.handlePagination}\r\n        />\r\n      ) : null;\r\n\r\n    // Adding dynamic value for Label for Categories\r\n\r\n    return (\r\n      <section className=\"admin-section d-flex justify-content-center\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Filters\r\n                country={country}\r\n                acountry={acountry}\r\n                st={st}\r\n                city={city}\r\n                categories={categories}\r\n                eventType={eventType}\r\n                targetMarket={targetMarket}\r\n                africanCountriesOptions={allAfricanCountriesOptions}\r\n                countriesOptions={allCountriesOptions}\r\n                pathname={pathname}\r\n                eventTypeOptions={eventTypeOptions}\r\n                stateOptions={stateOptions}\r\n                cityOptions={cityOptions}\r\n                categoryOptions={categoriesOptions}\r\n                targetMarketOptions={targetMarketOptions}\r\n                onSelectCountry={this.onSelectCountry}\r\n                onSelectState={this.onSelectState}\r\n                clearFilters={this.clearFilters}\r\n                onChange={this.onChange}\r\n                filtersExist={this.filtersExist}\r\n                t={t}\r\n                disable={params.query ? disable : false}\r\n                // onNext = {()=>this.onNext()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <div className={pathname === \"/vendors\" ? \"vendor\" : \"\"}>\r\n                {tobeRendered}\r\n              </div>\r\n              <div className=\"packages-area\">{pagination}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allAfricanCountriesOptions: state.options.allAfricanCountriesOptions,\r\n  allCountriesOptions: state.options.allCountriesOptions,\r\n  cityOptions: state.options.cityOptions,\r\n  stateOptions: state.options.stateOptions,\r\n  categoriesOptions: state.options.webCatOptions,\r\n  eventTypeOptions: state.options.webEventOptions,\r\n  targetMarketOptions: state.options.targetMarketOptions,\r\n  filtersLoaded: state.options.filtersLoaded,\r\n  vendorPager: state.common.vendorPager,\r\n  vendorPageOfItems: state.common.vendorPageOfItems,\r\n  vendors: state.vendor.vendors,\r\n  loading: state.common.loading,\r\n  noResults: state.common.noResults,\r\n  t: state.common.translatedLabels,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  resetResults,\r\n  getPlanners,\r\n  getVendors,\r\n  getFilterOptions,\r\n  getStatesOptions,\r\n  getCityOptions,\r\n  getAllCountriesOptions,\r\n})(withRouter(Vendors));\r\n","D:\\website\\planners-directory\\src\\components\\website\\planners\\Planners\\Users.js",[],"D:\\website\\planners-directory\\src\\components\\website\\NoResults.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\HeadersArea2.js",["813"],"import React from \"react\";\nimport Packages from \"./Packages\";\nimport Reviews from \"./Reviews\";\nimport Office from \"./Office\";\nimport Services from \"./Services\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport Disqus from \"disqus-react\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nconst HeadersArea2 = ({ userItem, userItemOffer, userType, t }) => {\n  console.log(userItem);\n  const disqusShortname = \"plannerdirectory\"; //found in your Disqus.com dashboard\n  const disqusConfig = {\n    url: window.location.href, //this.props.pageUrl\n    identifier: userItem._id, //this.props.uniqueId\n    title: userItem.storeName //this.props.title\n  };\n  if (!userItemOffer) {\n    return <Spinner />;\n  }\n  const tabOptions = (\n    <Tabs style={{ backgroundColor: \"#26303d\" }} defaultIndex={0}>\n      <TabList className=\"nav nav-tabs\">\n        <Tab\n          style={{\n            paddingLeft: \"30px\",\n            paddingRight: \"27px\",\n            fontSize: \"20px\",\n            color: \"#686f77\"\n          }}\n        >\n          {userType === \"planner\" ? t.packages : t.services}\n        </Tab>\n\n        <Tab\n          style={{\n            paddingLeft: \"30px\",\n            paddingRight: \"27px\",\n            fontSize: \"20px\",\n            color: \"#686f77\"\n          }}\n          id={userItem.storeName}\n        >\n          {t.reviews}\n        </Tab>\n        <Tab\n          style={{\n            paddingLeft: \"40px\",\n            paddingRight: \"27px\",\n            fontSize: \"20px\",\n            color: \"#686f77\"\n          }}\n        >\n          {t.office}\n        </Tab>\n      </TabList>\n\n      <TabPanel>\n        {userType === \"planner\" ? (\n          <Packages t={t} plannerItemPackages={userItemOffer} />\n        ) : (\n          <Services vendorItemServices={userItemOffer} />\n        )}\n      </TabPanel>\n      <TabPanel forceRender={true}>\n        <div\n          className=\"tab-pane article-container\"\n          id=\"home\"\n          role=\"tabpanel\"\n          aria-labelledby=\"home-tab\"\n        >\n          {/* <div className=\"form-row\"> */}\n          <Disqus.DiscussionEmbed\n            shortname={disqusShortname}\n            config={disqusConfig}\n          />\n        </div>\n      </TabPanel>\n      <TabPanel>\n        <Office t={t} plannerItem={userItem} userType={userType} />\n      </TabPanel>\n    </Tabs>\n  );\n\n  return <div>{tabOptions}</div>;\n};\n\nexport default HeadersArea2;\n","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\SingleItem.js",["814"],"import React, { Component } from \"react\";\nimport ImageGallery from \"react-image-gallery\";\nimport Modal from \"react-modal\";\nimport isEmpty from \"../../../utils/is-empty\";\nimport Facebook from \"./icons/facebook.svg\";\nimport Instagram from \"./icons/instagram.svg\";\nimport LinkedIn from \"./icons/linkedin.svg\";\nimport Twitter from \"./icons/twitter.svg\";\nimport WWW from \"./icons/www.svg\";\nimport Youtube from \"./icons/youtube.svg\";\nimport PlaceHolderImage from \"../../../img/images/package-img.jpg\";\n\nclass SingleItem extends Component {\n  state = {\n    isOpen: false,\n    items: []\n  };\n\n  setModalOpen = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ isOpen: false });\n  };\n  render() {\n    if (!this.props.plannerItem) {\n      return <div>Loading</div>;\n    }\n\n    const { t } = this.props;\n    const {\n      cateringCapacity,\n      categories,\n      eventTypes,\n      description,\n      targetMarket,\n      phoneNo1,\n      phoneNo2,\n      mobileNo,\n      instaAdress,\n      youtubeAdress,\n      twitterAdress,\n      fbAdress,\n      website,\n      linkdnAdress,\n      images,\n      storeName\n    } = this.props.plannerItem;\n\n    const customStyles = {\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"1100px\",\n        height: \"650px\"\n      }\n    };\n\n    //React Hooks\n    // const [modalIsOpen, setPhotoIndex] = useState(0);\n\n    const imageValues = !isEmpty(images) ? Object.values(images) : \"\";\n    const renderModalImages = imageValues => {\n      let items = [];\n      for (let i = 0; i < imageValues.length; i++) {\n        if (imageValues[i]) {\n          items.push({\n            original: imageValues[i],\n            originalClass: \"react-img-gallery\"\n          });\n        }\n      }\n      this.setState({ items, isOpen: true });\n    };\n\n    const targetMarketStyling = tmarket => {\n      if (tmarket === \"up\") return t.upMarket;\n      if (tmarket === \"mix\") return t.marketMix;\n      if (tmarket === \"stream\") return t.mainStream;\n    };\n\n    return (\n      <div className=\"package-thumb-wrap \">\n        <div className=\"package-thumb-header row\">\n          <div className=\"col\">\n            <h6>\n              <strong>{storeName}</strong>\n              {t.canCater + \" \"}\n              <span className=\"nub-count\">\n                [{cateringCapacity ? cateringCapacity : null}]\n              </span>{\" \"}\n              {t.guest}\n            </h6>\n            <div className=\"rating_down\">\n              <div style={{ width: \"80%\" }} className=\"rating_up\" />\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"small-btn-wrap text-right\">\n              {categories\n                ? categories.map((category, key) => (\n                    <button type=\"submit\" className=\"badge\">\n                      {category.label}\n                    </button>\n                  ))\n                : null}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"package-thumb-caption\">\n              <h5>{t.description}</h5>\n              <p>{description ? description : null}</p>\n            </div>\n            {this.props.userType === \"planner\" ? (\n              <div className=\"post-meta\">\n                <h5>{t.eventTpye}</h5>\n                <ul>\n                  {eventTypes\n                    ? eventTypes.map((eventType, key) => (\n                        <li>\n                          <a>{eventType.label}</a>\n                        </li>\n                      ))\n                    : null}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n          {imageValues ? (\n            <div className=\"col-md-6\">\n              <button\n                type=\"button\"\n                className=\"package-img-thumb\"\n                onClick={() => renderModalImages(imageValues)}\n              >\n                <img src={imageValues[0]} alt=\"First\" />\n              </button>\n            </div>\n          ) : (\n            <div className=\"col-md-6\">\n              <img src={PlaceHolderImage} alt=\"planner-directory-placeholder\" />\n            </div>\n          )}\n        </div>\n        <div className=\"package-thumb-footer\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ul className=\"contact-list\">\n                {phoneNo1 && (\n                  <li>\n                    <span style={{ paddingRight: \"0.4rem\" }}>\n                      <i class=\"fa fa-phone\" />\n                    </span>\n                    {phoneNo1}\n                  </li>\n                )}\n\n                {phoneNo2 && (\n                  <li>\n                    <span style={{ paddingRight: \"0.4rem\" }}>\n                      <i class=\"fa fa-phone\" />\n                    </span>\n                    {phoneNo2}\n                  </li>\n                )}\n                {mobileNo && (\n                  <li>\n                    <span style={{ paddingRight: \"0.4rem\" }}>\n                      <i class=\"fa fa-phone\" />\n                    </span>\n                    {mobileNo}\n                  </li>\n                )}\n              </ul>\n              {/* <div className=\"small-btn-wrap text-left\">\n                <div className=\"badge\">Logos </div>\n                <div className=\"badge logo-badge\">\n                  <span\n                    className=\"flag-icon\"\n                    style={{ backgroundImage: \"url(images/flag-logo.png)\" }}\n                  />\n                </div>\n              </div> */}\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"text-right\">\n                <ul className=\"contact-list social-list\">\n                  {website ? (\n                    <li>\n                      <a\n                        href={website}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img src={WWW} alt=\"Website Adress\" />\n                      </a>\n                    </li>\n                  ) : null}\n                  {fbAdress ? (\n                    <li>\n                      <a\n                        href={fbAdress}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img\n                          className=\"\"\n                          src={Facebook}\n                          alt=\"Facebook Addres\"\n                        />\n                      </a>\n                    </li>\n                  ) : null}\n                  {twitterAdress ? (\n                    <li>\n                      <a\n                        href={twitterAdress}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img src={Twitter} alt=\"LinkedIn Adress\" />\n                      </a>\n                    </li>\n                  ) : null}\n                  {linkdnAdress ? (\n                    <li>\n                      <a\n                        href={linkdnAdress}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img src={LinkedIn} alt=\"LinkedIn Adress\" />\n                      </a>\n                    </li>\n                  ) : null}\n\n                  {instaAdress ? (\n                    <li>\n                      <a\n                        href={instaAdress}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img src={Instagram} alt=\"Instagram Adress\" />\n                      </a>\n                    </li>\n                  ) : null}\n                  {youtubeAdress ? (\n                    <li>\n                      <a\n                        href={youtubeAdress}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <img src={Youtube} alt=\"Instagram Adress\" />\n                      </a>\n                    </li>\n                  ) : null}\n                </ul>\n                <span className={targetMarket}>\n                  {targetMarketStyling(targetMarket)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Modal\n          isOpen={this.state.isOpen}\n          onRequestClose={() => this.closeModal()}\n          style={customStyles}\n          overlayClassName=\"react-modal-overlay\"\n        >\n          <ImageGallery\n            items={this.state.items}\n            showBullets={true}\n            showThumbnails={false}\n            showPlayButton={false}\n            showFullscreenButton={false}\n            autoPlay={true}\n            infinite={false}\n            slideDuration={100}\n            onImageError={PlaceHolderImage}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default SingleItem;\n","D:\\website\\planners-directory\\src\\utils\\Pagination.js",[],"D:\\website\\planners-directory\\src\\actions\\plannerActions.js",["815","816","817","818","819"],"import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_CURRENT_PLANNER,\n  GET_PLANNERS,\n  GET_PLANNER_ITEM,\n  GET_PACKAGES,\n  GET_OFFICE,\n  ON_SUCCESS,\n  ON_START,\n  GET_PLANNER_ITEM_PACKAGES,\n  SET_FILTERED_PLANNERS,\n  SET_FILTERED_PLANNERS_TO_NULL,\n  NO_RESULTS_FOUND,\n  GET_RESULTS,\n  GET_PROFILE,\n  PACKAGES_LOADED,\n  PROFILE_UNLOADED,\n} from \"../types/types\";\nimport { getCurrentProfile } from \"./profileActions\";\nimport {\n  setLoading,\n  setLoadingFalse,\n  clearNoResults,\n  clearErrors,\n  resetResults,\n} from \"./common\";\n\nimport isEmpty from \"../utils/is-empty\";\n\nexport const getPlanners = (searchQuery) => async (dispatch) => {\n  dispatch(resetResults());\n  dispatch(setLoading());\n  dispatch(clearNoResults());\n  let url = \"/api/planner\";\n  if (!isEmpty(searchQuery)) url = url.concat(searchQuery.url);\n  try {\n    const planners = await axios.get(url);\n    console.log(\"PLANNERS\", planners);\n    dispatch({ type: GET_RESULTS, payload: planners.data });\n    dispatch(setLoadingFalse());\n  } catch (e) {\n    dispatch({ type: NO_RESULTS_FOUND, payload: e.data });\n    dispatch(setLoadingFalse());\n  }\n};\n\n// Register About Planner\nexport const registerPlanner = (profile, history) => (dispatch) => {\n  dispatch(clearErrors());\n  axios\n    .post(\"/api/planner\", profile)\n    .then(() => history.push(\"/dashboard-toggler\"))\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//Register Planner Profile\nexport const registerPlannerProfile = (profile, profileCompleted, history) => (\n  dispatch\n) => {\n  dispatch(setLoading());\n  if (!profileCompleted) {\n    axios\n      .post(\"/api/planner/profile/new\", profile)\n      .then((profile) =>\n        dispatch({\n          type: GET_PROFILE,\n          payload: profile.data,\n        })\n      )\n      .then(() => history.push(\"/dashboard\"))\n      .then(() => history.push(\"/dashboard/packages\"))\n      .catch((err) => {\n        dispatch(setLoadingFalse());\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  } else {\n    axios\n      .post(\"/api/planner/profile\", profile)\n      .then((profile) =>\n        dispatch({\n          type: GET_PROFILE,\n          payload: profile.data,\n        })\n      )\n      .then(() => dispatch(setLoadingFalse()))\n      // .then(res => history.push(\"/dashboard\"))\n      .catch((err) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  }\n};\n\n//Get Planner by ID\nexport const getPlannerbyId = (id) => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .get(`/api/planner/${id}`)\n    .then((res) =>\n      dispatch({\n        type: GET_PLANNER_ITEM,\n        payload: res.data,\n      })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      })\n    );\n};\n\n//Adding Packages\nexport const addPackages = (packageFields, featureCompleted, history) => (\n  dispatch\n) => {\n  if (!featureCompleted) {\n    history.push(\"/dashboard/office\");\n    axios\n      .post(\"/api/planner/packages/new\", packageFields)\n      .then((packages) => {\n        console.log(packages);\n        dispatch({ type: GET_PACKAGES, payload: packages.data });\n      })\n      .then(() => dispatch(getCurrentProfile()));\n  } else {\n    dispatch(setLoading());\n    axios\n      .post(\"/api/planner/packages\", packageFields)\n      .then((packages) =>\n        dispatch({\n          type: GET_PACKAGES,\n          payload: packages.data,\n        })\n      )\n      .then(() => dispatch(setLoadingFalse()))\n      .catch((err) =>\n        dispatch({ type: GET_ERRORS, payload: err.response.data })\n      );\n  }\n};\n\n//Getting Packages\nexport const getPackages = () => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .get(\"/api/planner/packages\")\n    .then((res) =>\n      dispatch({\n        type: GET_PACKAGES,\n        payload: res.data,\n      })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .then(() =>\n      dispatch({\n        type: PACKAGES_LOADED,\n        payload: true,\n      })\n    )\n    .catch((err) => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\n//Getting Specific Planner Packages by ID\nexport const getPlannerItemPackages = (user) => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .get(`/api/planner/packages/${user}`)\n    .then((packages) =>\n      dispatch({ type: GET_PLANNER_ITEM_PACKAGES, payload: packages.data })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((err) => console.log(err));\n};\n\n//Adding Office\nexport const addPlannerOffice = (officeFields) => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .post(\"/api/planner/office\", officeFields)\n    .then((office) =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: office.data,\n      })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((err) => console.log(err));\n};\n\n//Adding Planner Images\nexport const addPlannerImages = (uploaded) => (dispatch) => {\n  axios\n    .post(\"/api/planner/images\", uploaded)\n    .then((res) => console.log(res.status))\n    .catch((err) => console.log(err));\n};\n\n//Adding Keywords for Planner\nexport const addPlannerKeywords = (keywords) => (dispatch) => {\n  axios\n    .post(\"/api/planner/keywords\", keywords)\n    .then((profile) =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: profile.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const onStartFormSubmission = () => {\n  return {\n    type: ON_START,\n  };\n};\n\n//Successfully Form Submissions\nexport const onSuccess = () => {\n  return {\n    type: ON_SUCCESS,\n  };\n};\n\nexport const setFilteredPlannersToNull = () => {\n  return {\n    type: SET_FILTERED_PLANNERS_TO_NULL,\n  };\n};\n//Loading\n","D:\\website\\planners-directory\\src\\actions\\vendorActions.js",["820","821","822","823"],"import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  NO_RESULTS_FOUND,\n  GET_VENDOR_ITEM,\n  GET_VENDOR_ITEM_SERVICES,\n  GET_VENDOR_SERVICES,\n  CLEAR_ERRORS,\n  ON_SUCCESS_VENDOR_PROFILE,\n  ON_FAIL_VENDOR_PROFILE,\n  CLEAR_SUCCESS_MESSAGES,\n  CLEAR_LOCATION_OPTIONS,\n  GET_VENDORS,\n  SET_FILTERED_VENDORS,\n  SET_FILTERED_VENDORS_TO_NULL,\n  GET_RESULTS,\n  GET_VENDOR_RESULTS,\n  GET_PROFILE,\n} from \"../types/types\";\nimport { getCurrentProfile } from \"./profileActions\";\nimport isEmpty from \"../utils/is-empty\";\nimport {\n  setLoading,\n  setLoadingFalse,\n  clearNoResults,\n  clearErrors,\n  resetResults,\n} from \"./common\";\n\n// Getting List of All Vendors\n\nexport const getVendors = (searchQuery) => (dispatch) => {\n  dispatch(resetResults());\n  dispatch(setLoading());\n  dispatch(clearNoResults());\n  let url = \"/api/vendor\";\n  if (!isEmpty(searchQuery)) url = url.concat(searchQuery.url);\n  axios\n    .get(url)\n    .then((vendors) =>\n      dispatch({ type: GET_VENDOR_RESULTS, payload: vendors.data })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((message) =>\n      dispatch({ type: NO_RESULTS_FOUND, payload: message.data })\n    );\n};\n\n//Getting Vendor Services\nexport const getVendorServices = () => (dispatch) => {\n  axios\n    .get(\"/api/vendor/services/dashboard/all\")\n    .then((services) => {\n      dispatch({ type: GET_VENDOR_SERVICES, payload: services.data });\n    })\n    .catch((err) => console.log(err));\n};\n\n//Getting Vendor by ID\nexport const getVendorbyId = (id) => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .get(`/api/vendor/${id}`)\n    .then((res) =>\n      dispatch({\n        type: GET_VENDOR_ITEM,\n        payload: res.data,\n      })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      })\n    );\n};\n\n//Getting Specific Planner Packages by ID\nexport const getVendorItemServices = (user) => (dispatch) => {\n  dispatch(setLoading());\n  axios\n    .get(`/api/vendor/services/${user}`)\n    .then((services) =>\n      dispatch({ type: GET_VENDOR_ITEM_SERVICES, payload: services.data })\n    )\n    .then(() => dispatch(setLoadingFalse()))\n    .catch((err) => console.log(err));\n};\n\n//Set filtered Vendors\nexport const setFilteredVendors = (vendors) => {\n  return {\n    type: SET_FILTERED_VENDORS,\n    payload: vendors,\n  };\n};\n\nexport const registerVendor = (profile, history) => (dispatch) => {\n  dispatch(clearErrors());\n  axios\n    .post(\"/api/vendor\", profile)\n    .then(() => history.push(\"/dashboard-toggler\"))\n\n    .catch((err) => {\n      console.log(err);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\n//Registe Vendor Profile\nexport const registerVendorProfile = (profile, profileCompleted, history) => (\n  dispatch\n) => {\n  dispatch(setLoading());\n  if (!profileCompleted) {\n    axios\n      .post(\"/api/vendor/profile/new\", profile)\n      .then((profile) => dispatch({ type: GET_PROFILE, payload: profile.data }))\n      .then(() => history.push(\"/dashboard\"))\n      .then(() => {\n        history.push(\"/dashboard/services\");\n      })\n      .then(() => dispatch(setLoadingFalse()))\n      .catch((err) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  } else {\n    axios\n      .post(\"/api/vendor/profile\", profile)\n      .then((profile) =>\n        dispatch({\n          type: GET_PROFILE,\n          payload: profile.data,\n        })\n      )\n      .then(() => dispatch(setLoadingFalse()))\n      .catch((err) => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  }\n};\n\n//Adding Office\nexport const addVendorOffice = (officeFields) => (dispatch) => {\n  dispatch(clearLocationOptions());\n  axios\n    .post(\"/api/vendor/office\", officeFields)\n    .then((vendor) => dispatch({ type: GET_PROFILE, payload: vendor.data }))\n    .catch((err) => console.log(err));\n};\n\n//Adding Vendor Images\nexport const addVendorImages = (uploaded) => (dispatch) => {\n  axios\n    .post(\"/api/vendor/images\", uploaded)\n    .then((res) => console.log(res.status))\n    .catch((err) => console.log(err));\n};\n\n//Adding Keywords for Planner and Vendor\nexport const addVendorKeywords = (keywords) => (dispatch) => {\n  axios\n    .post(\"/api/vendor/keywords\", keywords)\n    .then((keywords) => console.log(keywords))\n    .catch((err) => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\n//Add Vendor Services\nexport const addVendorServices = (services, featureCompleted, history) => (\n  dispatch\n) => {\n  console.log(services);\n  console.log(\"ADD VENDOR SERVICES\");\n  if (!featureCompleted) {\n    history.push(\"/dashboard/office\");\n    axios.post(\"/api/vendor/services/new\", services).then((response) => {\n      dispatch({\n        type: GET_PROFILE,\n        payload: response.data.vendor,\n      });\n      dispatch({\n        type: GET_VENDOR_SERVICES,\n        payload: response.data.services,\n      });\n    });\n  } else {\n    dispatch(setLoading());\n    axios\n      .post(\"/api/vendor/services\", services)\n      .then((services) =>\n        dispatch({\n          type: GET_VENDOR_SERVICES,\n          payload: services.data,\n        })\n      )\n      .then(() => dispatch(setLoadingFalse()))\n      .catch((err) => console.log(err));\n  }\n};\n\nexport const onSuccessVendorProfile = () => {\n  return {\n    type: ON_SUCCESS_VENDOR_PROFILE,\n  };\n};\n\nexport const onFailVendorProfile = () => {\n  return {\n    type: ON_FAIL_VENDOR_PROFILE,\n  };\n};\n\nexport const clearSuccessMessages = () => {\n  return {\n    type: CLEAR_SUCCESS_MESSAGES,\n  };\n};\n\nexport const clearLocationOptions = () => {\n  return {\n    type: CLEAR_LOCATION_OPTIONS,\n  };\n};\n\nexport const setFilteredVendorsToNull = () => {\n  return {\n    type: SET_FILTERED_VENDORS_TO_NULL,\n  };\n};\n","D:\\website\\planners-directory\\src\\components\\website\\home\\search\\Search.js",[],"D:\\website\\planners-directory\\src\\components\\website\\planners\\PlannerItem\\PlannerItem.js",["824","825"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport Modal from \"react-modal\";\r\nimport Worldwide from \"../icons/worldwide.svg\";\r\nimport Facebook from \"../icons/facebook.svg\";\r\nimport LinkedIn from \"../icons/linkedin.svg\";\r\nimport Instagram from \"../icons/instagram.svg\";\r\nimport PlaceHolderImage from \"../../../../img/images/package-img.jpg\";\r\n\r\nimport isEmpty from \"../../../../utils/is-empty\";\r\n\r\nconst PlannerItem = ({ user, pathname, t, imageValues }) => {\r\n  const {\r\n    categories,\r\n    eventTypes,\r\n    description,\r\n    targetMarket,\r\n    phoneNo1,\r\n    phoneNo2,\r\n    phoneNo3,\r\n    instaAdress,\r\n    website,\r\n    storeName,\r\n    twitterAdress,\r\n    linkdnAdress,\r\n    fbAdress,\r\n    images\r\n  } = user;\r\n\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: \"1100px\",\r\n      height: \"650px\"\r\n    }\r\n  };\r\n\r\n  //React Hooks\r\n  // const [modalIsOpen, setPhotoIndex] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  // const imageValues = !isEmpty(images) ? Object.values(images) : \"\";\r\n  const renderModalImages = imageValues => {\r\n    let items = [];\r\n    for (let i = 0; i < imageValues.length; i++) {\r\n      items.push({\r\n        original: imageValues[i],\r\n        originalClass: \"react-img-gallery\"\r\n      });\r\n    }\r\n    setItems(items);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const targetMarketStyling = tmarket => {\r\n    if (tmarket === \"up\") return t.upMarket;\r\n    if (tmarket === \"mix\") return t.marketMix;\r\n    if (tmarket === \"stream\") return t.mainStream;\r\n  };\r\n\r\n  return (\r\n    <div className=\"package-thumb-wrap list-style\">\r\n      <div className=\"package-thumb-header\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-5\" style={{ paddingRight: \"0px\" }}>\r\n                <h6>\r\n                  <strong>{storeName}</strong>\r\n                </h6>\r\n                <div className=\"rating_down\">\r\n                  <div style={{ width: \"80%\" }} className=\"rating_up\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-7\" style={{ padding: 0 }}>\r\n                <div className=\"\" style={{ display: \"inline-block\" }}>\r\n                  {categories.map(category => (\r\n                    <div key={category._id} className=\"badge\">\r\n                      {category.label}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {pathname === \"/planners\" ? (\r\n            <div className=\"col-md-6\">\r\n              {!isEmpty(eventTypes) ? (\r\n                <div className=\"post-meta mb-0\">\r\n                  {\" \"}\r\n                  <h5>{t.eventType + \":\"}</h5>\r\n                  <ul>\r\n                    {eventTypes.map(event => (\r\n                      <li>{event.label}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"package-thumb-caption border-0\">\r\n            <p>{description}</p>\r\n          </div>\r\n        </div>\r\n        {!isEmpty(imageValues) ? (\r\n          <div className=\"col-md-6\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"package-img-thumb\"\r\n              // data-toggle=\"modal\"\r\n              // data-target=\".bd-example-modal-lg\"\r\n              onClick={() => renderModalImages(imageValues)}\r\n            >\r\n              <img src={imageValues[0]} alt=\"First\" />\r\n            </button>\r\n            {/* {isOpen && (\r\n              <Lightbox\r\n                mainSrc={imageValues[photoIndex]}\r\n                nextSrc={imageValues[(photoIndex + 1) % imageValues.length]}\r\n                prevSrc={\r\n                  imageValues[\r\n                    (photoIndex + imageValues.length - 1) % imageValues.length\r\n                  ]\r\n                }\r\n                mainSrcThumbnail={null}\r\n                prevSrcThumbnail={null}\r\n                nextSrcThumbnail={null}\r\n                onCloseRequest={() => setIsOpen(false)}\r\n                onMovePrevRequest={() =>\r\n                  setPhotoIndex(\r\n                    (photoIndex + imageValues.length - 1) % imageValues.length\r\n                  )\r\n                }\r\n                onMoveNextRequest={() =>\r\n                  setPhotoIndex((photoIndex + 1) % imageValues.length)\r\n                }\r\n              />\r\n            )} */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-md-6\">\r\n            <img src={PlaceHolderImage} alt=\"planner-directory-placeholder\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"package-thumb-footer border-0 pt-3\">\r\n        <div className=\"d-flex justify-content-between pb-2\">\r\n          <div className=\"d-flex flex-wrap\">\r\n              {\r\n                (website || fbAdress || linkdnAdress || instaAdress) &&\r\n                <div className=\"text-left pr-5\">\r\n                  <ul className=\"contact-list social-list\">\r\n                      {website ? (\r\n                          <li>\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                              <img src={Worldwide} alt=\"Website Adress\" />\r\n                            </a>\r\n                          </li>\r\n                      ) : null}\r\n                      {fbAdress ? (\r\n                          <li>\r\n                            <a href={fbAdress} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                              <img className=\"\" src={Facebook} alt=\"Facebook Addres\" />\r\n                            </a>\r\n                          </li>\r\n                      ) : null}\r\n                      {linkdnAdress ? (\r\n                          <li>\r\n                            <a\r\n                                href={linkdnAdress}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                              <img src={LinkedIn} alt=\"LinkedIn Adress\" />\r\n                            </a>\r\n                          </li>\r\n                      ) : null}\r\n\r\n                      {instaAdress ? (\r\n                          <li>\r\n                            <a\r\n                                href={instaAdress}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                              <img src={Instagram} alt=\"Instagram Adress\" />\r\n                            </a>\r\n                          </li>\r\n                      ) : null}\r\n                  </ul>\r\n                </div>\r\n              }\r\n            <div className>\r\n              <ul className=\"contact-list\">\r\n                  {phoneNo1 && (\r\n                      <li style={{ paddingRight: \"4px\" }}>\r\n                  <span style={{ paddingRight: \"0.4rem\" }}>\r\n                    <i className=\"fa fa-phone\" />\r\n                  </span>\r\n                          {phoneNo1}\r\n                      </li>\r\n                  )}\r\n                  {phoneNo2 && (\r\n                      <li style={{ paddingRight: \"4px\" }}>\r\n                  <span style={{ paddingRight: \"0.4rem\" }}>\r\n                    <i className=\"fa fa-phone\" />\r\n                  </span>\r\n                          {phoneNo2}\r\n                      </li>\r\n                  )}\r\n                  {phoneNo3 && (\r\n                      <li style={{ paddingRight: \"4px\" }}>\r\n                  <span style={{ paddingRight: \"0.4rem\" }}>\r\n                    <i className=\"fa fa-phone\" />\r\n                  </span>\r\n                          {phoneNo3}\r\n                      </li>\r\n                  )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"small-btn-wrap d-flex justify-content-end align-items-center\">\r\n            <span className={targetMarket}>\r\n              {targetMarketStyling(targetMarket)}\r\n            </span>\r\n            {pathname === \"/planners\" ? (\r\n              <Link\r\n                className={`btn th-bg badge`}\r\n                to={{\r\n                  pathname: `/planners/${storeName}`,\r\n                  state: { userId: user.user }\r\n                }}\r\n              >\r\n                {t.viewDetails}\r\n              </Link>\r\n            ) : (\r\n              <Link\r\n                className={`btn th-bg badge`}\r\n                to={{\r\n                  pathname: `/vendors/${storeName}`,\r\n                  state: { userId: user.user }\r\n                }}\r\n              >\r\n                {t.viewDetails}\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={() => setIsOpen(false)}\r\n        style={customStyles}\r\n        overlayClassName=\"react-modal-overlay\"\r\n      >\r\n        <ImageGallery\r\n          items={items}\r\n          showBullets={true}\r\n          showThumbnails={false}\r\n          showPlayButton={false}\r\n          showFullscreenButton={false}\r\n          autoPlay={true}\r\n          infinite={false}\r\n          slideDuration={100}\r\n          onImageError={PlaceHolderImage}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlannerItem;\r\n","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Reviews.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Packages.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Office.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\Services.js",[],"D:\\website\\planners-directory\\src\\actions\\profileActions.js",["826","827","828","829","830","831"],"import {\n  GET_PROFILE,\n  GET_ERRORS,\n  SEARCH_RESULTS,\n  PROFILE_LOADED,\n  GET_PLANNERS,\n  GET_VENDORS,\n  GET_PLANNER_ITEM,\n  PROFILES_LOADING,\n  GET_PACKAGES,\n  GET_PLANNER_ITEM_PACKAGES,\n  GET_KEYWORDS,\n  SUCCESSFULLY_RESET_PASSWORD,\n  GET_RESET_PASSWORD_ERRORS,\n  CLEAR_ERRORS,\n  GET_CURRENT_PROFILE,\n  GET_DASHBOARD_LANG\n} from \"../types/types\";\nimport axios from \"axios\";\nimport getLables from \"../utils/getLabels\";\n\nimport { setLoading, setLoadingFalse } from \"./common\";\n\nexport const getLoginToggler = (history, user) => dispatch => {\n  dispatch(clearErrors());\n  dispatch(setLoading());\n  axios\n    .get(\"/api/profile\")\n    .then(res => {\n      if (!res.data) {\n        const userType =\n          user.type === \"planner\" ? \"/about-planner\" : \"/about-vendor\";\n        history.push(userType);\n      } else {\n        const labels = getLables(res.data.lang);\n        dispatch({ type: GET_DASHBOARD_LANG, payload: labels });\n        dispatch({ type: GET_PROFILE, payload: res.data });\n      }\n\n      if (!res.data.user.profileCompleted) {\n        history.push(\"/dashboard/profile\");\n      } else if (res.data.user.profileCompleted && user.type === \"planner\") {\n        history.push(\"/dashboard/packages\");\n      } else if (res.data.user.profileCompleted && user.type === \"vendor\") {\n        history.push(\"/dashboard/services\");\n      }\n    })\n    .then(() => dispatch(setLoadingFalse()))\n    .then(() =>\n      dispatch({\n        type: PROFILE_LOADED,\n        payload: true\n      })\n    )\n    .catch(() => dispatch(setLoadingFalse()));\n};\n\nexport const getCurrentProfile = () => dispatch => {\n  dispatch(setLoading());\n  axios\n    .get(\"/api/profile\")\n    .then(profile => {\n      const labels = getLables(profile.data.lang);\n      dispatch({ type: GET_DASHBOARD_LANG, payload: labels });\n      dispatch({\n        type: GET_PROFILE,\n        payload: profile.data\n      });\n    })\n    .then(() => dispatch(setLoadingFalse()))\n    .catch(() => dispatch(setLoadingFalse()));\n};\n\n// export const getDashboardLanguage = (lang) => {\n//   dispatch({\n//     type: GET_DASHBOARD_LANGUAGE,\n\n//   })\n// }\n\nexport const addVendorProfile = profileFields => dispatch => {\n  axios\n    .post(\"/api/profile/vendor\", profileFields)\n    .then(profile => console.log(profile))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\nexport const addVendorServices = serviceFields => dispatch => {\n  axios\n    .post(\"/api/profile/vendor\", serviceFields)\n    .then(profile => console.log(profile))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\n//Adding Keywords for Planner and Vendor\nexport const addKeywords = keywords => dispatch => {\n  axios\n    .post(\"/api/profile/keywords\", keywords)\n    .then(keywords => console.log(keywords))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\n//Getting Keywords for Current Planner/Vendor\nexport const getKeywords = () => dispatch => {\n  axios\n    .get(\"/api/profile/keywords\")\n    .then(res => dispatch({ type: GET_KEYWORDS, payload: res.data }))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err }));\n};\n\nexport const searchProfiles = (searchFields, history) => dispatch => {\n  dispatch(setProfilesLoading());\n  axios\n    .post(\"/api/profile/search\", searchFields)\n    .then(results => dispatch({ type: SEARCH_RESULTS, payload: results.data }))\n    .then(history.push(\"/search\"))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\nexport const getPlannerItem = id => dispatch => {\n  dispatch(setProfilesLoading());\n  axios\n    .get(`/api/profile/planner/${id}`)\n    .then(plannerItem =>\n      dispatch({ type: GET_PLANNER_ITEM, payload: plannerItem.data })\n    )\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\n\nexport const setProfilesLoading = () => {\n  return {\n    type: PROFILES_LOADING\n  };\n};\n\nconst httpClient = axios.create();\nhttpClient.defaults.timeout = 5000;\n\nexport const uploadImage = image => dispatch => {\n  const formData = new FormData();\n  formData.append(\"image\", image);\n\n  httpClient\n    .post(\"/api/image-upload\", formData)\n    .then(res => console.log(res))\n    .catch(err => console.log(err));\n};\n\nexport const resetPassword = passwordFields => dispatch => {\n  axios\n    .post(\"/api/profile/reset\", passwordFields)\n\n    .then(response =>\n      dispatch({ type: SUCCESSFULLY_RESET_PASSWORD, payload: response.data })\n    )\n    .then(() => dispatch(clearErrors()))\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\n};\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\ServiceItem.js",["832"],"import React from \"react\";\n\nconst handleEnvelope = (title) => {\n  window.location.href = `mailto:address@dmail.com?subject=Inquiry on ${title} services`;\n};\n\nconst ServiceItem = ({ desc, title }) => {\n  const [enter, setEnter] = React.useState(false);\n  const mouseEnter = () => {\n    setEnter(true);\n  };\n\n  const mouseLeave = () => {\n    setEnter(false);\n  };\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"text-block\">\n        <div className=\"text-caption\">\n          <h5 style={{ textDecoration: \"underline\" }} className=\"title\">\n            {title.toUpperCase()}\n          </h5>\n\n          {/* <h6 className=\"title\">Description:</h6> */}\n          <p>{desc}</p>\n        </div>\n        <a className=\"msg-btn\" href=\"#\" style={{cursor:\"default\"}}>\n          <button\n            style={{ backgroundColor: \"white\", border: \"none\" }}\n            onClick={() => handleEnvelope(title)}\n          >\n            <span\n              style={{ boxShadow: enter ? \"5px 5px 5px black\" : \"\" , cursor:'pointer' }}\n              onMouseEnter={mouseEnter}\n              onMouseLeave={mouseLeave}\n              className=\"envelope-icon\"\n            />\n          </button>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceItem;\n\n//1 - 12\n//2 - 6\n//3 - 4\n//4 - 6\n//5 - 4\n//6 - 4\n//7 - 4\n//8\n","D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PackageItem.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\BranchOffice.js",[],"D:\\website\\planners-directory\\src\\components\\website\\PlannerItem\\PackageListItem.js",[],"D:\\website\\planners-directory\\src\\components\\auth\\index.js",[],"D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlanner2.js",["833"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerPlanner } from \"../../../actions/plannerActions\";\nimport {\n  getUnBlockedAfricanCountries,\n  getStatesOptions,\n  getCityOptions,\n  getRevenueOptions,\n} from \"../../../actions/optionActions\";\nimport Form from \"../../common/form\";\n\nimport Joi from \"joi-browser\";\nimport { withRouter } from \"react-router-dom\";\nimport AboutPlannerView from \"./AboutPlannerView\";\n\nclass AboutPlanner2 extends Form {\n  state = {\n    data: {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNo1: \"\",\n      streetAdress1: \"\",\n      city: \"\",\n      st: \"\",\n      country: \"\",\n      currentRevenue: \"$0 (Beginner)\",\n      cateringCapacity: \"200\",\n    },\n    optional: {\n      streetAdress2: \"\",\n      apiSuite: \"\",\n      zipCode: \"\",\n      website: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    firstName: Joi.string().alphanum().min(3).required().label(\"First Name\"),\n    lastName: Joi.string().required().label(\"Last Name\"),\n    streetAdress1: Joi.string().min(8).required().label(\"Street Adress 1\"),\n    currentRevenue: Joi.string().label(\"Current Revenue\"),\n    cateringCapacity: Joi.string().label(\"Catering\"),\n    phoneNo1: Joi.string().min(6).required().label(\"PhoneNo1\"),\n    country: Joi.string().required().label(\"Country\"),\n    st: Joi.string().required().label(\"State\"),\n    city: Joi.string().required().label(\"City\"),\n  };\n\n  componentDidMount() {\n    this.props.getUnBlockedAfricanCountries();\n    this.props.getRevenueOptions();\n  }\n\n  onSelectCountry = (countryCode) => {\n    let code = countryCode;\n    const label = {\n      code: code,\n    };\n    this.setState(\n      { data: { ...this.state.data, country: countryCode, st: \"\", city: \"\" } },\n      () => {\n        this.props.getStatesOptions(label);\n      }\n    );\n  };\n\n  onSelectState = (e) => {\n    e.preventDefault();\n    let index = e.nativeEvent.target.selectedIndex;\n    let label = e.nativeEvent.target[index].text;\n\n    this.setState({ data: { ...this.state.data, st: label } });\n\n    let stateValue = e.target.value;\n    const data = {\n      code: stateValue,\n    };\n\n    this.props.getCityOptions(data);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  doSubmit = () => {\n    console.log(\"I am in submit\");\n    const aboutPlanner = {\n      lang: this.props.lang,\n      firstName: this.state.data.firstName,\n      lastName: this.state.data.lastName,\n      phoneNo1: this.state.data.phoneNo1,\n      streetAdress1: this.state.data.streetAdress1,\n      streetAdress2: this.state.optional.streetAdress2,\n      apiSuite: this.state.optional.apiSuite,\n      st: this.state.data.st,\n      city: this.state.data.city,\n      zipCode: this.state.optional.zipCode,\n      country: this.state.data.country,\n      website: this.state.optional.website,\n      currentRevenue: this.state.data.currentRevenue,\n      cateringCapacity: this.state.data.cateringCapacity,\n    };\n    console.log(aboutPlanner);\n    this.props.registerPlanner(aboutPlanner, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    const { data, optional } = this.state;\n    const {\n      unBlockedAfricanCountriesOptions,\n      stateOptions,\n      cityOptions,\n      cateringOptions,\n      revenueOptions,\n      t,\n    } = this.props;\n\n    return (\n      <AboutPlannerView\n        t={t}\n        data={data}\n        optional={optional}\n        onChange={this.handleChange}\n        handleOptional={this.handleOptional}\n        onSubmit={this.handleSubmit}\n        errors={errors}\n        unBlockedAfricanCountriesOptions={unBlockedAfricanCountriesOptions}\n        stateOptions={stateOptions}\n        cityOptions={cityOptions}\n        cateringOptions={cateringOptions}\n        revenueOptions={revenueOptions}\n        onSelectCountry={this.onSelectCountry}\n        onSelectState={this.onSelectState}\n        validate={this.validate}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  errors: state.errors.errors,\n  auth: state.auth,\n  unBlockedAfricanCountriesOptions:\n    state.options.unBlockedAfricanCountriesOptions,\n  cityOptions: state.options.cityOptions,\n  stateOptions: state.options.stateOptions,\n  cateringOptions: state.options.cateringOptions,\n  revenueOptions: state.options.revenueOptions,\n  lang: state.common.language,\n});\n\nexport default connect(mapStateToProps, {\n  registerPlanner,\n  getUnBlockedAfricanCountries,\n  getStatesOptions,\n  getCityOptions,\n  getRevenueOptions,\n})(withRouter(AboutPlanner2));\n","D:\\website\\planners-directory\\src\\components\\auth\\about-vendor\\AboutVendor.js",[],"D:\\website\\planners-directory\\src\\components\\auth\\login\\Login.js",["834","835"],"import React, { Component } from \"react\";\r\nimport { loginUser } from \"../../../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { resetResults } from \"../../../actions/common\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"../../common/form\";\r\nimport isEmpty from \"../../../utils/is-empty\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport Background from \"../bg.jpg\";\r\n\r\nvar BackgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\"\r\n};\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    backgroundImage: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!isEmpty(this.props.authBg)) {\r\n      this.setState({ backgroundImage: this.props.authBg });\r\n    }\r\n    this.props.resetResults();\r\n  }\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .email({\r\n        minDomainSegments: 2,\r\n        tlds: { allow: [\"com\", \"net\"] }\r\n      })\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(8)\r\n      .label(\"Password\")\r\n  };\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  };\r\n\r\n  doSubmit = () => {\r\n    const { data } = this.state;\r\n    this.props.loginUser(data, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors, data } = this.state;\r\n    const { t, loading } = this.props;\r\n    console.log(loading);\r\n    return (\r\n      <section\r\n        className=\"d-flex align-items-center flex-column justify-content-center h-100\"\r\n        style={{\r\n          backgroundImage: \"url(\" + this.props.authBg + \")\",\r\n          backgroundPosition: \"center\",\r\n          opacity: 0.9\r\n        }}\r\n      >\r\n        <div className=\"regis-form login-form radius-5\">\r\n          <div className=\"d-flex regis-form-head\">\r\n            <h4>{t.login}</h4>\r\n            <Link className=\"btn-link btn ml-auto\" to=\"/register\">\r\n              {t.registerNow}\r\n            </Link>\r\n          </div>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.email\r\n                })}\r\n                name=\"email\"\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={data.email}\r\n              />\r\n              {errors.email || errors.password ? (\r\n                <div className=\"invalid-feedback\">\r\n                  Invalid Email or Password\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.password\r\n                })}\r\n                id=\"Alphanumericpassword\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={data.password}\r\n              />\r\n              {errors.email || errors.password ? (\r\n                <div className=\"invalid-feedback\">\r\n                  Invalid Email or Password\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Link className=\"btn-link btn white forgot-link\" to=\"#\">\r\n              {t.forgetPassword}\r\n            </Link>\r\n            <div className=\"btn-wrap text-center\">\r\n              <button\r\n                type=\"auth\"\r\n                disabled={this.validate() || loading}\r\n                onClick={this.onSubmit}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {loading && (\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={40}\r\n                    width={40}\r\n                    //3 secs\r\n                  />\r\n                )}\r\n                {loading && \"Logging in\"}\r\n                {!loading && t.login}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n// Login.propTypes = {\r\n//   loginUser: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   errors: PropTypes.object.isRequired\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors.loginErrors,\r\n  authBg: state.admin.admin.authBg,\r\n  loading: state.common.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser, resetResults })(\r\n  withRouter(Login)\r\n);\r\n","D:\\website\\planners-directory\\src\\components\\auth\\register\\Register.js",["836"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { resetResults } from \"../../../actions/common\";\r\nimport Background from \"../bg.jpg\";\r\n\r\nvar BackgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\"\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      selectedOption: \"planner\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      store: \"\",\r\n      isdisable: true,\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // if (this.props.auth.isAuthenticated) {\r\n    //   this.props.history.push(\"/dashboard/profile\");\r\n    // }\r\n\r\n    this.props.resetResults();\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n      console.log(nextProps.errors);\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  canBeSubmitted() {\r\n    const { email, password, password2, store } = this.state;\r\n    return (\r\n      email.length > 8 &&\r\n      password.length > 0 &&\r\n      password2.length > 0 &&\r\n      store.length > 0\r\n    );\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (!this.canBeSubmitted()) {\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      type: this.state.selectedOption,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n      store: this.state.store\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  handleOptionChange = changeEvent => {\r\n    // this.setState({\r\n    //   selectedOption: changeEvent.target.value\r\n    // });\r\n    const selectedOption = changeEvent.target.value;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      selectedOption\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const { errors } = this.state;\r\n    const isEnabled = this.canBeSubmitted();\r\n\r\n    return (\r\n      <section\r\n        className=\"d-flex align-items-center flex-column justify-content-center h-100\"\r\n        style={{\r\n          backgroundImage: \"url(\" + this.props.authBg + \")\",\r\n          backgroundPosition: \"center\",\r\n          opacity: 0.9\r\n        }}\r\n      >\r\n        <div className=\"regis-form radius-5\">\r\n          <div className=\"d-flex regis-form-head\">\r\n            <h4>{t.register}</h4>\r\n            <Link className=\"btn-link btn ml-auto\" to=\"/login\">\r\n              {t.login}\r\n            </Link>\r\n          </div>\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <div className=\"d-flex input-radio\">\r\n              <div className=\"input-container\">\r\n                <label>\r\n                  <span className=\"radio\">\r\n                    <input\r\n                      name=\"type\"\r\n                      value=\"planner\"\r\n                      checked={this.state.selectedOption === \"planner\"}\r\n                      type=\"radio\"\r\n                      onChange={this.handleOptionChange}\r\n                    />\r\n                    <span className=\"radio-value\" aria-hidden=\"true\" />\r\n                  </span>\r\n                  <span>{t.planner} </span>\r\n                </label>\r\n              </div>\r\n              <div className=\"input-container\">\r\n                <label>\r\n                  <span className=\"radio\">\r\n                    <input\r\n                      name=\"type\"\r\n                      value=\"vendor\"\r\n                      checked={this.state.selectedOption === \"vendor\"}\r\n                      type=\"radio\"\r\n                      onChange={this.handleOptionChange}\r\n                    />\r\n                    <span className=\"radio-value\" aria-hidden=\"true\" />\r\n                  </span>\r\n                  <span>{t.vendor}</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.email\r\n                })}\r\n                name=\"email\"\r\n                placeholder={t.emailAddress}\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n              />\r\n              {errors.email && (\r\n                <div className=\"invalid-feedback\">{errors.email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.password\r\n                })}\r\n                name=\"password\"\r\n                placeholder={t.alphanumeric}\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n              />\r\n              {errors.password && (\r\n                <div className=\"invalid-feedback\">{errors.password}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.password2\r\n                })}\r\n                name=\"password2\"\r\n                placeholder={t.alphanumeric}\r\n                onChange={this.onChange}\r\n                value={this.state.password2}\r\n              />\r\n              {errors.password2 && (\r\n                <div className=\"invalid-feedback\">{errors.password2}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  \"is-invalid\": errors.store || errors.storeDuplicate\r\n                })}\r\n                name=\"store\"\r\n                placeholder={t.storeName}\r\n                onChange={this.onChange}\r\n                value={this.state.store}\r\n              />\r\n              {errors.store && (\r\n                <div className=\"invalid-feedback\">{errors.store}</div>\r\n              )}\r\n              {errors.storeDuplicate && (\r\n                <div className=\"invalid-feedback\">{errors.storeDuplicate}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"btn-wrap d-flex\">\r\n              <button\r\n                type=\"auth\"\r\n                disabled={!isEnabled}\r\n                onClick={this.onSubmit}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {t.continue}\r\n              </button>\r\n              <button type=\"button\" className=\"btn ml-auto btn-link\">\r\n                {t.cancel}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  errors: PropTypes.object,\r\n  auth: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  authBg: state.admin.admin.authBg,\r\n  errors: state.errors.registerErrors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser, resetResults }\r\n)(withRouter(Register));\r\n","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerView.js",["837"],"import React from \"react\";\nimport AboutPlannerForm from \"./AboutPlannerForm\";\nimport AboutPlannerPopUp from \"./AboutPlannerPopUp\";\nimport Modal from \"react-modal\";\nimport SaveButton from \"../../ui/Buttons/SaveButton\";\nimport CancelButton from \"../../ui/Buttons/CancelButton\";\n\nimport Popup from \"reactjs-popup\";\nimport Spinner from \"../../common/Spinner/Spinner\";\n\nconst AboutPlannerView = ({\n  isEnabled,\n  onSubmit,\n  data,\n  onChange,\n  revenueOptions,\n  cateringOptions,\n  unBlockedAfricanCountriesOptions,\n  stateOptions,\n  cityOptions,\n  onSelectState,\n  onSelectCountry,\n  errors,\n  validate,\n  optional,\n  handleOptional,\n  websiteBg,\n  t\n}) => {\n  return (\n    <section\n      className=\"d-flex align-items-center flex-column justify-content-center h-100\"\n      style={{\n        backgroundImage: \"url(\" + websiteBg + \")\",\n        backgroundPosition: \"center\",\n        opacity: 1\n      }}\n    >\n      <div className=\"container\">\n        <Modal\n          // closeTimeoutMS={150}\n          isOpen={true}\n          // onRequestClose={closeModal}\n          className=\"about-vendor-modal-styling\"\n          overlayClassName=\"react-modal-overlay\"\n        >\n          <div\n            style={{ maxWidth: \"1200px\" }}\n            className=\"modal-dialog popup-style\"\n            role=\"document\"\n          >\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ borderBottom: \"none\" }}>\n                <h5 className=\"modal-title\">{t.tellUs}</h5>\n              </div>\n              <div className=\"modal-body\">\n                {/* <form noValidate> */}\n                  <AboutPlannerForm\n                    t={t}\n                    data={data}\n                    optional={optional}\n                    handleOptional={handleOptional}\n                    onChange={onChange}\n                    revenueOptions={revenueOptions}\n                    cateringOptions={cateringOptions}\n                    unBlockedAfricanCountriesOptions={\n                      unBlockedAfricanCountriesOptions\n                    }\n                    stateOptions={stateOptions}\n                    cityOptions={cityOptions}\n                    onSelectState={onSelectState}\n                    onSelectCountry={onSelectCountry}\n                    errors={errors}\n                  />\n                  <div className=\"bd-top\" />\n                  <div className=\"osr-btn-group p-b-15  text-center\">\n                    <SaveButton\n                      disabled={validate()}\n                      label={t.register}\n                      type=\"save\"\n                      onClick={onSubmit}\n                    />\n\n                    <Popup\n                      trigger={<CancelButton label={t.cancel} type=\"button\" />}\n                      modal\n                    >\n                      {close => <AboutPlannerPopUp close={close} />}\n                    </Popup>\n                  </div>\n                {/* </form> */}\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    </section>\n  );\n};\n\nexport default AboutPlannerView;\n","D:\\website\\planners-directory\\src\\components\\auth\\about-vendor\\AboutVendorView.js",[],"D:\\website\\planners-directory\\src\\components\\common\\form.js",["838"],"import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\n// import Input from \"./input\";\n// import Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    // const options = { abortEarly: false };\n    // const { error } = Joi.validate(this.state.data, this.schema, options);\n    // if (!error) return null;\n    // const errors = {};\n    // for (let item of error.details) errors[item.path[0]] = item.message;\n    // console.log(errors);\n    // return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"SUBMITING THE FORM\");\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ target: input }) => {\n    const errors = { ...this.state.errors };\n    if ([input.name] in this.schema) {\n      console.log(\"I am hit in handle change\");\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;\n      else delete errors[input.name];\n    }\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  handleOptional = ({ target: input }) => {\n    const optional = { ...this.state.optional };\n    optional[input.name] = input.value;\n    this.setState({ optional });\n  };\n\n  //   renderButton(label) {\n  //     return (\n  //       <button disabled={this.validate()} className=\"btn btn-primary\">\n  //         {label}\n  //       </button>\n  //     );\n  //   }\n\n  //   renderSelect(name, label, options) {\n  //     const { data, errors } = this.state;\n\n  //     return (\n  //       <Select\n  //         name={name}\n  //         value={data[name]}\n  //         label={label}\n  //         options={options}\n  //         onChange={this.handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n  //   renderInput(name, label, type = \"text\") {\n  //     const { data, errors } = this.state;\n\n  //     return (\n  //       <Input\n  //         type={type}\n  //         name={name}\n  //         value={data[name]}\n  //         label={label}\n  //         onChange={this.handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n}\n\nexport default Form;\n","D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerPopUp.js",[],"D:\\website\\planners-directory\\src\\components\\auth\\about-planner\\AboutPlannerForm.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\index.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\AdminDashboard.js",["839"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AdminSidebar } from \"./sidebar/index\";\nimport AdminTopBar from \"./topbar/AdminTopBar\";\n\nimport { getAdminData } from \"../../../actions/adminActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport isEmpty from \"../../../utils/is-empty\";\n\nclass AdminDashboard extends Component {\n  componentDidMount() {\n    if (!this.props.loadingfromAdmin) {\n      this.props.getAdminData();\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"fixed-left\" style={{ overflow: \"visible\" }}>\n          <div className=\"wrapper\">\n            <AdminSidebar />\n\n            <div className=\"content-page\">\n              <div className=\"content\">\n                <AdminTopBar />\n                <div className=\"page-content-wrapper\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12 sub-banner\">\n                        <h5 className=\"page-title\">Welcome Admin</h5>\n                      </div>\n                    </div>\n                    <div style={{ paddingTop: \"1rem\" }} className=\"tab-content\">\n                      {this.props.loadingfromAdmin ? (\n                        this.props.children\n                      ) : (\n                        <Spinner />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n\n  loading: state.common.loading,\n  loadingfromAdmin: state.common.loadingfromAdmin\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAdminData }\n)(withRouter(AdminDashboard));\n","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\DashboardToggler.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\Dashboard.js",["840","841"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { VendorSidebar, PlannerSidebar, AdminSidebar } from \"./sidebar/index\";\nimport TopBar from \"./topbar/TopBar\";\nimport { getCurrentProfile } from \"../../../actions/profileActions\";\nimport { getAdminData } from \"../../../actions/adminActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport isEmpty from \"../../../utils/is-empty\";\n\nclass Dashboard extends Component {\n  state = {\n    disabled: false,\n    loading: true\n  };\n  async componentDidMount() {\n    if (!this.props.profileLoaded) {\n      console.log(\"GET CURRENT PROFILE IN DASHBOARD\");\n      await this.props.getCurrentProfile();\n    }\n    if (!this.props.loadingfromAdmin) {\n      this.props.getAdminData();\n    }\n  }\n\n  Sidebar = () => {\n    const { user } = this.props.auth;\n    if (user.type === \"planner\") {\n      return <PlannerSidebar disabled={this.state.disabled} />;\n    } else if (user.type === \"vendor\") {\n      return <VendorSidebar disabled={this.state.disabled} />;\n    }\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    if (!isEmpty(nextProps.profile)) {\n      if (nextProps.profile.user.profileCompleted) {\n        this.setState({ disabled: false });\n      } else {\n        this.setState({ disabled: true });\n      }\n    }\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n    // if (!isAuthenticated) {\n    //   return (\n    //     <div>\n    //       <h1>\n    //         You are Not Authorized to View this. Kindly Login as Authorized User\n    //         to have access to this View.{\" \"}\n    //       </h1>\n    //     </div>\n    //   );\n    // }\n    const Sidebar = this.Sidebar();\n    const { t } = this.props;\n    if (this.props.profile && this.props.loadingfromAdmin) {\n      return (\n        <React.Fragment>\n          <div className=\"fixed-left\" style={{ overflow: \"visible\" }}>\n            <div className=\"wrapper\">\n              {Sidebar}\n              {/* {user.type === \"admin\" ? <AdminSidebar /> : null} */}\n              {/* {!this.state.loading ? Sidebar : null} */}\n              <div className=\"content-page\">\n                <div className=\"content\">\n                  <TopBar t={this.props.t} />\n                  <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12 sub-banner\">\n                          <h5 className=\"page-title\">\n                            {user.type === \"planner\" || user.type === \"vendor\"\n                              ? user.store +\n                                \" \" +\n                                (t.dashboard ? t.dashboard : \"\")\n                              : \"Welcome Admin\"}\n                          </h5>\n                        </div>\n                      </div>\n                      <div\n                        style={{ paddingTop: \"1rem\" }}\n                        className=\"tab-content\"\n                      >\n                        {this.props.children}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <Spinner />;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile.profile,\n  loading: state.common.loading,\n  loadingfromAdmin: state.common.loadingfromAdmin,\n  profileLoaded: state.common.profileLoaded,\n  t: state.common.dashboardLabels\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, getAdminData })(\n  withRouter(Dashboard)\n);\n","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\topbar\\AdminTopBar.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\topbar\\TopBar.js",["842","843","844"],"import React, { Component } from \"react\";\nimport logo from \"../../../../img/logo.png\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { logoutUser } from \"../../../../actions/authActions\";\nimport { ReactComponent as AdminIcon } from \"../../../../img/icon-7.svg\";\nimport { ReactComponent as LogOutIcon } from \"../../../../img/icon-9.svg\";\n\nclass TopBar extends Component {\n  state = { screenSize: \"\" };\n  onLogout = () => {\n    this.props.logoutUser();\n    this.props.history.push(\"/login\");\n  };\n\n  onClickContactAdmin = () => {\n    window.location.href = \"mailto:address@dmail.com??subject=Enter Store Name\";\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    this.setState({ screenSize: window.innerWidth });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  render() {\n    const { t, user } = this.props;\n    console.log(\"t is\", this.state.screenSize);\n\n    return (\n      <div className=\"topbar\">\n        <div className=\"topbar-left\td-none d-lg-block\">\n          <div className=\"text-center\">\n            <a href=\"index.html\" className=\"logo\">\n              <img src={logo} width={130} alt=\"logo\" />\n            </a>\n          </div>\n        </div>\n\n        <nav className=\"navbar-custom\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div\n                className=\"col-sm-6 col-md-6\"\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems:\n                    this.state.screenSize >= 1200 ? \"flex-end\" : \"center\"\n                }}\n              >\n                {/* <h4\n                  style={{\n                    color: \"green\",\n                  }}\n                >\n                  Your Profile is live\n                </h4> */}\n              </div>\n\n              <div className=\"col-sm-6 col-md-6\">\n                <ul className=\" list-inline float-right mb-0\">\n                  <li className=\"list-inline-item\">\n                    <a\n                      href=\"#\"\n                      className=\"nav-link dropdown-toggle arrow-none waves-effect nav-user mt-2\"\n                      onClick={this.onClickContactAdmin}\n                    >\n                      <i>\n                        <AdminIcon style={{height: \"23px\", width: \"30px\"}} />\n                      </i>\n                      {t.contactAdmin}\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a\n                      onClick={this.onLogout}\n                      href=\"/\"\n                      className=\"nav-link dropdown-toggle arrow-none waves-effect nav-user mt-2\"\n                    >\n                      <i>\n                        <LogOutIcon style={{height: \"23px\", width: \"30px\"}} />\n                      </i>\n                      {t.logout}\n                    </a>\n                  </li>\n                </ul>\n                <ul className=\"list-inline menu-left mb-0\">\n                  <li className=\"list-inline-item\">\n                    <button\n                      type=\"button\"\n                      className=\"button-menu-mobile open-left waves-effect\"\n                    >\n                      <i className=\"ion-navicon\" />\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"clearfix\" />\n        </nav>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state, auth) => ({\n//   t: state.common.dashboardLabels,\n//   user: auth.user\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   { logoutUser }\n// )(withRouter(TopBar));\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n  return {\n    user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(withRouter(TopBar));\n","D:\\website\\planners-directory\\src\\components\\dashboard\\index.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Noticeboard\\DashBoardNoticeboard.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\Services.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Packages\\Packages.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Profile\\Profile.js",["845"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport { toast } from \"react-toastify\";\nimport { logoutUser } from \"../../../actions/authActions\";\n\nimport isEmpty from \"../../../utils/is-empty\";\n\nimport { withRouter } from \"react-router-dom\";\nimport { registerPlannerProfile } from \"../../../actions/plannerActions\";\nimport { registerVendorProfile } from \"../../../actions/vendorActions\";\n// import {\n//   getCurrentProfile,\n//   addVendorProfile\n// } from \"../../../reduxController/actions/profileActions\";\n\nimport ProfileView from \"./ProfileView\";\nimport { onClickSave, onClickEdit } from \"../../../actions/buttonActions\";\nimport {\n  getBusinessTitleOptions,\n  getGenderOptions\n} from \"../../../actions/optionActions\";\nimport MainModel from \"../confirmPopupModel\";\nimport NavigationPrompt from \"react-router-navigation-prompt\";\n\nclass Profile extends Component {\n  state = {\n    data: {\n      profileCompleted: false,\n      title: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      description: \"\",\n      selectedOption: \"\",\n      cateringCapacity: \"200\",\n      businessTitle: \"\",\n      website: \"\",\n      phoneNo1: \"\",\n      eventTypes: [],\n      categories: []\n    },\n    errors: {}\n  };\n\n  canBeSubmitted() {\n    const {\n      title,\n      selectedOption,\n      firstName,\n      description,\n      lastName,\n      categories,\n      eventTypes,\n      phoneNo1,\n      businessTitle\n    } = this.state.data;\n    const cat = !isEmpty(categories) ? categories : \"\";\n    const { type } = this.props.auth.user;\n\n    const eventT = !isEmpty(eventTypes) ? eventTypes : \"\";\n    if (type === \"planner\") {\n      return (\n        title.length > 1 &&\n        selectedOption.length > 0 &&\n        firstName.length > 2 &&\n        lastName.length > 0 &&\n        description.length > 20 &&\n        cat.length > 0 &&\n        businessTitle.length > 0 &&\n        phoneNo1.length > 0 &&\n        eventTypes &&\n        eventTypes.length > 1\n      );\n    } else {\n      return (\n        title.length > 1 &&\n        selectedOption.length > 0 &&\n        firstName.length > 2 &&\n        lastName.length > 0 &&\n        description.length > 20 &&\n        cat.length > 0 &&\n        businessTitle.length > 0 &&\n        phoneNo1.length > 0\n      );\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.getBusinessTitleOptions();\n    this.props.getGenderOptions();\n  };\n\n  onClickEdit = () => {\n    this.props.onClickEdit();\n  };\n\n  onChange = (e) => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  onClickSave = () => {\n    this.props.onClickSave();\n  };\n\n  onLogout = () => {\n    this.props.logoutUser();\n    this.props.history.push(\"/login\");\n  };\n\n  handleCategoriesChange = (selectedOption) => {\n    this.setState(\n      { data: { ...this.state.data, categories: selectedOption } },\n      () => {\n        if (isEmpty(this.state.data.categories)) {\n          this.setState({ data: { ...this.state.data, categories: \"\" } });\n        }\n      }\n    );\n  };\n\n  handleEventChange = (selectedOption) => {\n    this.setState(\n      { data: { ...this.state.data, eventTypes: selectedOption } },\n      () => {\n        if (isEmpty(this.state.data.eventTypes)) {\n          this.setState({ data: { ...this.state.data, eventTypes: \"\" } });\n        }\n      }\n    );\n  };\n\n  //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    if (nextProps.profile) {\n      const profile = nextProps.profile;\n      if (profile.user) {\n        profile.profileCompleted = profile.user.profileCompleted ? true : false;\n      }\n\n      profile.title = !isEmpty(profile.title) ? profile.title : \"\";\n      profile.firstName = !isEmpty(profile.firstName) ? profile.firstName : \"\";\n      profile.lastName = !isEmpty(profile.lastName) ? profile.lastName : \"\";\n      profile.targetMarket = !isEmpty(profile.targetMarket)\n        ? profile.targetMarket\n        : \"\";\n      profile.description = !isEmpty(profile.description)\n        ? profile.description\n        : \"\";\n      profile.cateringCapacity = !isEmpty(profile.cateringCapacity)\n        ? profile.cateringCapacity\n        : \"\";\n      profile.categories = !isEmpty(profile.categories)\n        ? profile.categories\n        : \"\";\n      profile.eventTypes = !isEmpty(profile.eventTypes)\n        ? profile.eventTypes\n        : \"\";\n      profile.businessTitle = !isEmpty(profile.businessTitle)\n        ? profile.businessTitle\n        : \"\";\n      profile.website = !isEmpty(profile.website) ? profile.website : \"\";\n      profile.phoneNo1 = !isEmpty(profile.phoneNo1) ? profile.phoneNo1 : \"\";\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          title: profile.title,\n          firstName: profile.firstName,\n          lastName: profile.lastName,\n          selectedOption: profile.targetMarket,\n          description: profile.description,\n          cateringCapacity: profile.cateringCapacity,\n          businessTitle: profile.businessTitle,\n          website: profile.website,\n          phoneNo1: profile.phoneNo1,\n          categories: profile.categories,\n          eventTypes: profile.eventTypes,\n          profileCompleted: profile.profileCompleted\n        }\n      });\n    }\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { type } = this.props.auth.user;\n\n    const { data } = this.state;\n    const profile = {};\n    profile.title = data.title;\n    profile.firstName = data.firstName;\n    profile.lastName = data.lastName;\n    profile.description = data.description;\n    profile.targetMarket = data.selectedOption;\n    profile.cateringCapacity = data.cateringCapacity;\n    profile.businessTitle = data.businessTitle;\n    profile.website = data.website;\n    profile.phoneNo1 = data.phoneNo1;\n    profile.categories = data.categories;\n    profile.eventTypes = data.eventTypes;\n\n    if (type === \"planner\") {\n      this.props.registerPlannerProfile(\n        profile,\n        this.props.profile.user.profileCompleted,\n        this.props.history\n      );\n    } else if (type === \"vendor\") {\n      this.props.registerVendorProfile(\n        profile,\n        this.props.profile.user.profileCompleted,\n        this.props.history\n      );\n    }\n    this.onClickSave();\n  };\n\n  handleOptionChange = (changeEvent) => {\n    // this.setState({\n    //   selectedOption: changeEvent.target.value\n    // });\n    const selectedOption = changeEvent.target.value;\n    this.setState({\n      data: { ...this.state.data, selectedOption: selectedOption }\n    });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.props.errors !== prevProps.errors) {\n      toast.error(\"Failed to Save. Please try Again\");\n    }\n    if (this.props.profile !== prevProps.profile) {\n      toast.success(\"Successfully Updated the Profile\");\n    }\n  };\n\n  render() {\n    const { data, errors } = this.state;\n    const { user } = this.props.auth;\n\n    const {\n      cateringOptions,\n      button,\n      categoriesOptions,\n      eventTypeOptions,\n      businessTitleOptions,\n      genderOptions,\n      t\n    } = this.props;\n\n    // categoriesOptions.shift();\n    // eventTypeOptions.shift();\n\n    const isEnabled = this.canBeSubmitted();\n\n    if (this.props.loading) {\n      return <Spinner />;\n    }\n\n    return (\n      <div>\n        <ProfileView\n          t={t}\n          data={data}\n          errors={errors}\n          onClickEdit={this.onClickEdit}\n          onClickSave={this.onClickSave}\n          onSubmit={this.onSubmit}\n          cateringOptions={cateringOptions}\n          categoryOptions={categoriesOptions}\n          eventTypeOptions={eventTypeOptions}\n          businessTitleOptions={businessTitleOptions}\n          genderOptions={genderOptions}\n          onChange={this.onChange}\n          handleCategoriesChange={this.handleCategoriesChange}\n          handleEventChange={this.handleEventChange}\n          handleOptionChange={this.handleOptionChange}\n          user={user}\n          button={button}\n          isEnabled={isEnabled}\n          onLogout={this.onLogout}\n        />\n        <NavigationPrompt when={button.editdisabled}>\n          {({ isActive, onCancel, onConfirm }) => {\n            return (\n              <MainModel\n                onSubmit={this.onClickSave}\n                show={isActive}\n                onCancel={onCancel}\n                onConfirm={onConfirm}\n              />\n            );\n          }}\n        </NavigationPrompt>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile.profile,\n  cateringOptions: state.options.cateringOptions,\n  categoriesOptions: state.options.categoriesOptions,\n  eventTypeOptions: state.options.eventTypeOptions,\n  businessTitleOptions: state.options.businessTitleOptions,\n  genderOptions: state.options.genderOptions,\n  auth: state.auth,\n  errors: state.errors.errors,\n  button: state.button,\n  loading: state.common.loading,\n  t: state.common.dashboardLabels\n});\n\nexport default connect(mapStateToProps, {\n  registerPlannerProfile,\n  registerVendorProfile,\n  onClickEdit,\n  onClickSave,\n  logoutUser,\n  getBusinessTitleOptions,\n  getGenderOptions\n})(withRouter(Profile));\n","D:\\website\\planners-directory\\src\\components\\dashboard\\Setting\\Setting.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Keywords\\Keywords.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\Office.js",["846"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OfficeView from \"./OfficeView\";\nimport isEmpty from \"../../../utils/is-empty\";\nimport {\n  getUnBlockedContinentsOptions,\n  getUnBlockedAfricanCountries,\n  getCountriesByContinentOptions,\n  getBranch1Countries,\n  getBranch2Countries,\n  getBranch3Countries,\n  getStatesOptions,\n  getBranch1States,\n  getBranch2States,\n  getBranch3States,\n  getCityOptions,\n  getBranch1City,\n  getBranch2City,\n  getBranch3City,\n} from \"../../../actions/optionActions\";\nimport { onClickSave, onClickEdit } from \"../../../actions/buttonActions\";\nimport { addPlannerOffice } from \"../../../actions/plannerActions\";\nimport {\n  addVendorOffice,\n  clearLocationOptions,\n} from \"../../../actions/vendorActions\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport { toast } from \"react-toastify\";\nimport MainModel from \"../confirmPopupModel\";\nimport NavigationPrompt from \"react-router-navigation-prompt\";\n\nclass Office extends Component {\n  state = {\n    officeData: {\n      streetAdress1: \"\",\n      streetAdress2: \"\",\n      apiSuite: \"\",\n      zipCode: \"\",\n      continent: \"\",\n      country: \"\",\n      st: \"\",\n      city: \"\",\n      officeMobileNo: \"\",\n      phoneNo2: \"\",\n      phoneNo3: \"\",\n      fbAdress: \"\",\n      instaAdress: \"\",\n      twitterAdress: \"\",\n      youtubeAdress: \"\",\n      linkdnAdress: \"\",\n    },\n    branchOfficeData1: {\n      firstBtn: true,\n      firstForm: false,\n      bo1StreetAdress1: \"\",\n      bo1StreetAdress2: \"\",\n      bo1ApiSuite: \"\",\n      bo1ZipCode: \"\",\n      bo1Continent: \"\",\n      bo1Country: \"\",\n      bo1State: \"\",\n      bo1City: \"\",\n      bo1MobileNo: \"\",\n      bo1Tele1: \"\",\n      bo1Tele2: \"\",\n    },\n    branchOfficeData2: {\n      secondBtn: false,\n      secondForm: false,\n      bo2StreetAdress1: \"\",\n      bo2StreetAdress2: \"\",\n      bo2ApiSuite: \"\",\n      bo2City: \"\",\n      bo2ZipCode: \"\",\n      bo2Continent: \"\",\n      bo2Country: \"\",\n      bo2State: \"\",\n      bo2MobileNo: \"\",\n      bo2Tele1: \"\",\n      bo2Tele2: \"\",\n    },\n    branchOfficeData3: {\n      thirdBtn: false,\n      thirdForm: false,\n      bo3StreetAdress1: \"\",\n      bo3StreetAdress2: \"\",\n      bo3ApiSuite: \"\",\n      bo3City: \"\",\n      bo3ZipCode: \"\",\n      bo3Continent: \"\",\n      bo3Country: \"\",\n      bo3State: \"\",\n      bo3MobileNo: \"\",\n      bo3Tele1: \"\",\n      bo3Tele2: \"\",\n    },\n    firstBtn: true,\n    firstForm: false,\n    secondBtn: false,\n    secondForm: false,\n    thirdBtn: false,\n    thirdForm: false,\n    branchOffice1: false,\n    branchOffice2: false,\n    branchOffice3: false,\n  };\n\n  componentDidMount() {\n    this.populateData();\n    this.props.clearLocationOptions();\n    if (this.props.auth.user.type === \"planner\") {\n      this.props.getUnBlockedAfricanCountries();\n      this.props.getUnBlockedContinentsOptions();\n    } else {\n      this.props.getUnBlockedContinentsOptions();\n    }\n\n    const continents = {\n      continent: this.props.profile.continent,\n    };\n    this.props.getCountriesByContinentOptions(continents);\n  }\n\n  populateData = () => {\n    const profile = this.props.profile;\n    if (profile) {\n      profile.streetAdress1 = !isEmpty(profile.streetAdress1)\n        ? profile.streetAdress1\n        : \"\";\n      profile.streetAdress2 = !isEmpty(profile.streetAdress2)\n        ? profile.streetAdress2\n        : \"\";\n      profile.apiSuite = !isEmpty(profile.apiSuite) ? profile.apiSuite : \"\";\n      profile.zipCode = !isEmpty(profile.zipCode) ? profile.zipCode : \"\";\n      profile.continent = !isEmpty(profile.continent) ? profile.continent : \"\";\n      profile.country = !isEmpty(profile.country) ? profile.country : \"\";\n      profile.st = !isEmpty(profile.st) ? profile.st : \"\";\n      profile.city = !isEmpty(profile.city) ? profile.city : \"\";\n      profile.phoneNo2 = !isEmpty(profile.phoneNo2) ? profile.phoneNo2 : \"\";\n      profile.phoneNo3 = !isEmpty(profile.phoneNo3) ? profile.phoneNo3 : \"\";\n      profile.officeMobileNo = !isEmpty(profile.officeMobileNo)\n        ? profile.officeMobileNo\n        : \"\";\n      profile.fbAdress = !isEmpty(profile.fbAdress) ? profile.fbAdress : \"\";\n      profile.instaAdress = !isEmpty(profile.instaAdress)\n        ? profile.instaAdress\n        : \"\";\n      profile.youtubeAdress = !isEmpty(profile.youtubeAdress)\n        ? profile.youtubeAdress\n        : \"\";\n      profile.linkdnAdress = !isEmpty(profile.linkdnAdress)\n        ? profile.linkdnAdress\n        : \"\";\n      profile.twitterAdress = !isEmpty(profile.twitterAdress)\n        ? profile.twitterAdress\n        : \"\";\n      this.setState({\n        officeData: {\n          ...this.state.officeData,\n          streetAdress1: profile.streetAdress1,\n          streetAdress2: profile.streetAdress2,\n          apiSuite: profile.apiSuite,\n          zipCode: profile.zipCode,\n          continent: profile.continent,\n          country: profile.country,\n          st: profile.st,\n          city: profile.city,\n          officeMobileNo: profile.officeMobileNo,\n          phoneNo2: profile.phoneNo2,\n          phoneNo3: profile.phoneNo3,\n          fbAdress: profile.fbAdress,\n          instaAdress: profile.instaAdress,\n          youtubeAdress: profile.youtubeAdress,\n          twitterAdress: profile.twitterAdress,\n          linkdnAdress: profile.linkdnAdress,\n        },\n      });\n    }\n\n    if (profile.branchOffice1) {\n      this.setState({\n        branchOfficeData1: {\n          ...this.state.branchOfficeData1,\n          firstBtn: !profile.branchOffice1,\n          firstForm: profile.branchOffice1,\n          bo1StreetAdress1: profile.branchOfficeData1.bo1StreetAdress1,\n          bo1StreetAdress2: profile.branchOfficeData1.bo1StreetAdress2,\n          bo1ApiSuite: profile.branchOfficeData1.bo1ApiSuite,\n          bo1ZipCode: profile.branchOfficeData1.bo1ZipCode,\n          bo1Continent: profile.branchOfficeData1.bo1Continent,\n          bo1Country: profile.branchOfficeData1.bo1Country,\n          bo1State: profile.branchOfficeData1.bo1State,\n          bo1City: profile.branchOfficeData1.bo1City,\n          bo1MobileNo: profile.branchOfficeData1.bo1MobileNo,\n          bo1Tele1: profile.branchOfficeData1.bo1Tele1,\n          bo1Tele2: profile.branchOfficeData1.bo1Tele2,\n        },\n      });\n    }\n\n    if (profile.branchOffice2) {\n      this.setState({\n        branchOfficeData2: {\n          ...this.state.branchOfficeData2,\n          secondBtn: !profile.branchOffice2,\n          secondForm: profile.branchOffice2,\n          bo2StreetAdress1: profile.branchOfficeData2.bo2StreetAdress1,\n          bo2StreetAdress2: profile.branchOfficeData2.bo2StreetAdress2,\n          bo2ApiSuite: profile.branchOfficeData2.bo2ApiSuite,\n          bo2ZipCode: profile.branchOfficeData2.bo2ZipCode,\n          bo2Continent: profile.branchOfficeData2.bo2Continent,\n          bo2Country: profile.branchOfficeData2.bo2Country,\n          bo2State: profile.branchOfficeData2.bo2State,\n          bo2City: profile.branchOfficeData2.bo2City,\n          bo2MobileNo: profile.branchOfficeData2.bo2MobileNo,\n          bo2Tele1: profile.branchOfficeData2.bo2Tele1,\n          bo2Tele2: profile.branchOfficeData2.bo2Tele2,\n        },\n      });\n    }\n\n    if (profile.branchOffice3) {\n      this.setState({\n        branchOfficeData3: {\n          ...this.state.branchOfficeData3,\n          thirdBtn: !profile.branchOffice3,\n          thirdForm: profile.branchOffice3,\n          bo3StreetAdress1: profile.branchOfficeData3.bo3StreetAdress1,\n          bo3StreetAdress2: profile.branchOfficeData3.bo3StreetAdress2,\n          bo3ApiSuite: profile.branchOfficeData3.bo3ApiSuite,\n          bo3ZipCode: profile.branchOfficeData3.bo3ZipCode,\n          bo3Continent: profile.branchOfficeData3.bo3Continent,\n          bo3Country: profile.branchOfficeData3.bo3Country,\n          bo3State: profile.branchOfficeData3.bo3State,\n          bo3City: profile.branchOfficeData3.bo3City,\n          bo3MobileNo: profile.branchOfficeData3.bo3MobileNo,\n          bo3Tele1: profile.branchOfficeData3.bo3Tele1,\n          bo3Tele3: profile.branchOfficeData3.bo3Tele2,\n        },\n      });\n    }\n  };\n\n  onClickSave = () => {\n    this.props.onClickSave();\n  };\n\n  onChange = (e) => {\n    // console.log(\"targeted value is\",e.target.value)\n    this.setState({\n      officeData: {\n        ...this.state.officeData,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  onChange1 = (e) => {\n    this.setState({\n      branchOfficeData1: {\n        ...this.state.branchOfficeData1,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  onChange2 = (e) => {\n    this.setState({\n      branchOfficeData2: {\n        ...this.state.branchOfficeData2,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  onChange3 = (e) => {\n    this.setState({\n      branchOfficeData3: {\n        ...this.state.branchOfficeData3,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  onClickEdit = () => {\n    this.props.onClickEdit();\n  };\n\n  getCountriesbyContint = (e) => {\n    console.log(\"get countrie\", e.target.value);\n    e.preventDefault();\n    this.setState({\n      officeData: { ...this.state.officeData, continent: e.target.value },\n    });\n\n    const continents = {\n      continent: e.target.value,\n    };\n    this.props.getCountriesByContinentOptions(continents);\n  };\n\n  getBranch1Countries = (e) => {\n    e.preventDefault();\n    this.setState({\n      branchOfficeData1: {\n        ...this.state.branchOfficeData1,\n        bo1Continent: e.target.value,\n      },\n    });\n\n    const continents = {\n      continent: e.target.value,\n    };\n    this.props.getBranch1Countries(continents);\n  };\n\n  getBranch2Countries = (e) => {\n    e.preventDefault();\n    this.setState({\n      branchOfficeData2: {\n        ...this.state.branchOfficeData2,\n        bo2Continent: e.target.value,\n      },\n    });\n\n    const continents = {\n      continent: e.target.value,\n    };\n    this.props.getBranch2Countries(continents);\n  };\n\n  getBranch3Countries = (e) => {\n    e.preventDefault();\n    this.setState({\n      branchOfficeData3: {\n        ...this.state.branchOfficeData3,\n        bo3Continent: e.target.value,\n      },\n    });\n\n    const continents = {\n      continent: e.target.value,\n    };\n    this.props.getBranch3Countries(continents);\n  };\n\n  getStatesbyCountry = (countryCode) => {\n    let code = countryCode;\n    const label = {\n      code: code,\n    };\n    this.setState({\n      officeData: { ...this.state.officeData, country: countryCode },\n    });\n    console.log(label);\n\n    this.props.getStatesOptions(label);\n  };\n\n  getStatesbyCountryV = (e) => {\n    e.preventDefault();\n    let code = e.target.value;\n    const label = {\n      code: code,\n    };\n    this.setState({ officeData: { ...this.state.officeData, country: code } });\n\n    this.props.getStatesOptions(label);\n  };\n\n  getBranch1States = (e) => {\n    e.preventDefault();\n    let code = e.target.value;\n    const label = {\n      code: code,\n    };\n    this.setState({\n      branchOfficeData1: { ...this.state.branchOfficeData1, bo1Country: code },\n    });\n\n    this.props.getBranch1States(label);\n  };\n\n  getBranch2States = (e) => {\n    e.preventDefault();\n    let code = e.target.value;\n    const label = {\n      code: code,\n    };\n    this.setState({\n      branchOfficeData2: { ...this.state.branchOfficeData2, bo2Country: code },\n    });\n\n    this.props.getBranch2States(label);\n  };\n\n  getBranch3States = (e) => {\n    e.preventDefault();\n    let code = e.target.value;\n    const label = {\n      code: code,\n    };\n    this.setState({\n      branchOfficeData3: { ...this.state.branchOfficeData3, bo3Country: code },\n    });\n\n    this.props.getBranch3States(label);\n  };\n\n  getCities = (e) => {\n    let stateValue = e.target.value;\n    const data = {\n      code: stateValue,\n    };\n    this.setState({\n      officeData: { ...this.state.officeData, st: stateValue },\n    });\n\n    this.props.getCityOptions(data);\n  };\n\n  getBranch1City = (e) => {\n    let stateValue = e.target.value;\n    const data = {\n      code: stateValue,\n    };\n    this.setState({\n      branchOfficeData1: {\n        ...this.state.branchOfficeData1,\n        bo1State: stateValue,\n      },\n    });\n\n    this.props.getBranch1City(data);\n  };\n\n  getBranch2City = (e) => {\n    let stateValue = e.target.value;\n    const data = {\n      code: stateValue,\n    };\n\n    this.setState({\n      branchOfficeData2: {\n        ...this.state.branchOfficeData2,\n        bo2State: stateValue,\n      },\n    });\n\n    this.props.getBranch2City(data);\n  };\n\n  getBranch3City = (e) => {\n    let stateValue = e.target.value;\n    const data = {\n      code: stateValue,\n    };\n    this.setState({\n      branchOfficeData3: {\n        ...this.state.branchOfficeData3,\n        bo3State: stateValue,\n      },\n    });\n\n    this.props.getBranch3City(data);\n  };\n\n  onClickAddButton = (e) => {\n    const { id } = e.target;\n    if (id === \"first_add_btn\") {\n      this.setState({\n        branchOfficeData1: {\n          ...this.state.branchOfficeData1,\n          firstBtn: false,\n          firstForm: true,\n        },\n      });\n    } else if (id === \"second_add_btn\") {\n      this.setState({\n        branchOfficeData2: {\n          ...this.state.branchOfficeData2,\n          secondBtn: false,\n          secondForm: true,\n        },\n      });\n    } else {\n      this.setState({\n        branchOfficeData3: {\n          ...this.state.branchOfficeData3,\n          thirdBtn: false,\n          thirdForm: true,\n        },\n      });\n    }\n  };\n\n  onClickRemoveBtn = (e) => {\n    console.log(\"I am hit in onClickRemoveBtn\");\n    const { id } = e.target;\n    if (id === \"first_form\") {\n      this.setState({\n        branchOfficeData1: {\n          ...this.state.branchOfficeData1,\n          firstBtn: true,\n          firstForm: false,\n        },\n      });\n    } else if (id === \"second_form\") {\n      this.setState({\n        branchOfficeData2: {\n          ...this.state.branchOfficeData2,\n          secondBtn: true,\n          secondForm: false,\n        },\n      });\n    } else {\n      this.setState({\n        branchOfficeData3: {\n          ...this.state.branchOfficeData3,\n          thirdBtn: true,\n          thirdForm: false,\n        },\n      });\n    }\n  };\n\n  check() {\n    const { firstForm } = this.state.branchOfficeData1;\n    const { secondForm } = this.state.branchOfficeData2;\n    const { thirdForm } = this.state.branchOfficeData3;\n    if (firstForm) return true;\n    if (secondForm) return true;\n    if (thirdForm) return true;\n    return false;\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { firstForm } = this.state.branchOfficeData1;\n    const { secondForm } = this.state.branchOfficeData2;\n    const { thirdForm } = this.state.branchOfficeData3;\n    const { officeData } = this.state;\n\n    const { type } = this.props.auth.user;\n    if (type === \"vendor\") {\n      this.props.addVendorOffice(officeData);\n    } else {\n      officeData.branchOffice = this.check();\n\n      if (firstForm) {\n        officeData.branchOffice1 = true;\n        officeData.branchOfficeData1 = this.state.branchOfficeData1;\n      }\n      if (secondForm) {\n        officeData.branchOffice2 = true;\n        officeData.branchOfficeData2 = this.state.branchOfficeData2;\n      }\n      if (thirdForm) {\n        officeData.branchOffice3 = true;\n        officeData.branchOfficeData3 = this.state.branchOfficeData3;\n      }\n\n      this.props.addPlannerOffice(officeData);\n    }\n\n    this.onClickSave();\n    this.props.getUnBlockedContinentsOptions();\n    toast.success(\"Successfully Updated the Office\");\n  };\n\n  render() {\n    const {\n      officeData,\n      branchOfficeData1,\n      branchOfficeData2,\n      branchOfficeData3,\n    } = this.state;\n    const {\n      button,\n      unBlockedContinentOptions,\n      countriesByContinentOptions,\n      stateOptions,\n      cityOptions,\n      unBlockedAfricanCountriesOptions,\n    } = this.props;\n    const { type } = this.props.auth.user;\n    const { t } = this.props;\n\n    console.log(\"office data\", this.props.profile);\n\n    return (\n      <div>\n        <OfficeView\n          officeData={officeData}\n          onClickAddBtn={this.onClickAddButton}\n          onClickRemoveBtn={this.onClickRemoveBtn}\n          branchOfficeData1={branchOfficeData1}\n          branchOfficeData2={branchOfficeData2}\n          branchOfficeData3={branchOfficeData3}\n          button={button}\n          onChange={this.onChange}\n          onChange1={this.onChange1}\n          onChange2={this.onChange2}\n          onChange3={this.onChange3}\n          type={type}\n          onClickEdit={this.onClickEdit}\n          onClickSave={this.onClickSave}\n          getCountriesbyContint={this.getCountriesbyContint}\n          getStatesbyCountry={this.getStatesbyCountry}\n          getStatesbyCountryV={this.getStatesbyCountryV}\n          getCities={this.getCities}\n          continentOptions={unBlockedContinentOptions}\n          ubAfricanCountryOptions={unBlockedAfricanCountriesOptions}\n          countryOptions={countriesByContinentOptions}\n          stateOptions={stateOptions}\n          cityOptions={cityOptions}\n          addBtn={this.state.addBtn}\n          onSubmit={this.onSubmit}\n          getBranch1Countries={this.getBranch1Countries}\n          getBranch2Countries={this.getBranch2Countries}\n          getBranch3Countries={this.getBranch3Countries}\n          getBranch1States={this.getBranch1States}\n          getBranch2States={this.getBranch2States}\n          getBranch3States={this.getBranch3States}\n          getBranch1City={this.getBranch1City}\n          getBranch2City={this.getBranch2City}\n          getBranch3City={this.getBranch3City}\n          bo1Co={this.props.bo1Co}\n          bo2Co={this.props.bo2Co}\n          bo3Co={this.props.bo3Co}\n          bo1St={this.props.bo1St}\n          bo2St={this.props.bo2St}\n          bo3St={this.props.bo3St}\n          bo1Ci={this.props.bo1Ci}\n          bo2Ci={this.props.bo2Ci}\n          bo3Ci={this.props.bo3Ci}\n          t={t}\n        />\n        <NavigationPrompt when={button.editdisabled}>\n          {({ isActive, onCancel, onConfirm }) => {\n            return (\n              <MainModel\n                onSubmit={this.onClickSave}\n                show={isActive}\n                onCancel={onCancel}\n                onConfirm={onConfirm}\n              />\n            );\n          }}\n        </NavigationPrompt>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  office: state.planner.office,\n  profile: state.profile.profile,\n  unBlockedContinentOptions: state.options.unBlockedContinentOptions,\n  countriesByContinentOptions: state.options.countriesByContinentOptions,\n  bo1Co: state.options.countriesByContinentBranch1,\n  bo2Co: state.options.countriesByContinentBranch2,\n  bo3Co: state.options.countriesByContinentBranch3,\n  stateOptions: state.options.stateOptions,\n  bo1St: state.options.stateBranch1,\n  bo2St: state.options.stateBranch2,\n  bo3St: state.options.stateBranch3,\n  bo1Ci: state.options.cityBranch1,\n  bo2Ci: state.options.cityBranch2,\n  bo3Ci: state.options.cityBranch3,\n\n  cityOptions: state.options.cityOptions,\n  unBlockedAfricanCountriesOptions:\n    state.options.unBlockedAfricanCountriesOptions,\n  button: state.button,\n  loading: state.common.loading,\n  t: state.common.dashboardLabels,\n});\n\nexport default connect(mapStateToProps, {\n  addPlannerOffice,\n  addVendorOffice,\n  getUnBlockedContinentsOptions,\n  getCountriesByContinentOptions,\n  getUnBlockedAfricanCountries,\n  getStatesOptions,\n  getCityOptions,\n  onClickSave,\n  onClickEdit,\n  clearLocationOptions,\n  getBranch1Countries,\n  getBranch2Countries,\n  getBranch3Countries,\n  getBranch1States,\n  getBranch2States,\n  getBranch3States,\n  getBranch1City,\n  getBranch2City,\n  getBranch3City,\n})(Office);\n","D:\\website\\planners-directory\\src\\components\\dashboard\\UploadImages\\UploadImages.js",["847","848"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPlannerImages } from \"../../../actions/plannerActions\";\nimport { addVendorImages } from \"../../../actions/vendorActions\";\nimport UploadImagesView from \"./UploadImagesView\";\nimport axios from \"axios\";\nimport isEmpty from \"../../../utils/is-empty\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport ImageForm from \"../../common/imageForm\";\n\nclass UploadImages extends ImageForm {\n  state = {\n    data: {\n      selectedFile: {},\n      loading: false,\n      selected: false,\n      image1: \"\",\n      image2: \"\",\n      image3: \"\",\n      image4: \"\",\n      image5: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const { images } = this.props.profile;\n    if (!isEmpty(images)) {\n      const image = {};\n      image.image1 = !isEmpty(images.image1) ? images.image1 : \"\";\n      image.image2 = !isEmpty(images.image2) ? images.image2 : \"\";\n      image.image3 = !isEmpty(images.image3) ? images.image3 : \"\";\n      image.image4 = !isEmpty(images.image4) ? images.image4 : \"\";\n      image.image5 = !isEmpty(images.image5) ? images.image5 : \"\";\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          image1: image.image1,\n          image2: image.image2,\n          image3: image.image3,\n          image4: image.image4,\n          image5: image.image5,\n        },\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const imgs = nextProps.profile.images;\n    console.log(imgs.image1);\n    if (!isEmpty(imgs)) {\n      imgs.image1 = !isEmpty(imgs.image1) ? imgs.image1 : \"\";\n      imgs.image2 = !isEmpty(imgs.image2) ? imgs.image2 : \"\";\n      imgs.image3 = !isEmpty(imgs.image3) ? imgs.image3 : \"\";\n      imgs.image4 = !isEmpty(imgs.image4) ? imgs.image4 : \"\";\n      imgs.image5 = !isEmpty(imgs.image5) ? imgs.image5 : \"\";\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          image1: imgs.image1,\n          image2: imgs.image2,\n          image3: imgs.image3,\n          image4: imgs.image4,\n          image5: imgs.image5,\n        },\n      });\n    }\n  }\n\n  clearState = () => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        selectedFile: {},\n        loading: false,\n        selected: false,\n      },\n    });\n  };\n  onSubmit = () => {\n    const { image1, image2, image3, image4, image5 } = this.state.data;\n\n    const imageFields = {};\n\n    if (!isEmpty(image1)) imageFields.image1 = image1;\n    if (!isEmpty(image2)) imageFields.image2 = image2;\n    if (!isEmpty(image3)) imageFields.image3 = image3;\n    if (!isEmpty(image4)) imageFields.image4 = image4;\n    if (!isEmpty(image5)) imageFields.image5 = image5;\n\n    const { type } = this.props.auth.user;\n\n    if (type === \"planner\") {\n      this.props.addPlannerImages(imageFields);\n    } else if (type === \"vendor\") {\n      this.props.addVendorImages(imageFields);\n    }\n    this.clearState();\n    toast.success(\"Successfully Updated on Website\");\n  };\n\n  render() {\n    const { data } = this.state;\n    const { t } = this.props;\n    if (data.loading) {\n      return <Spinner />;\n    }\n\n    // console.log(this.state.data.selectedFile.imgSrc);\n\n    return (\n      <div>\n        <UploadImagesView\n          onImageSelected={this.onImageSelected}\n          onImageUpload={this.onImageUpload}\n          onSubmit={this.onSubmit}\n          data={data}\n          t={t}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile.profile,\n  t: state.common.dashboardLabels,\n});\n\nexport default connect(mapStateToProps, { addPlannerImages, addVendorImages })(\n  UploadImages\n);\n","D:\\website\\planners-directory\\src\\components\\dashboard\\Keywords\\KeywordsForm.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\ServicesView.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Profile\\ProfileView.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\OfficeView.js",["849","850","851","852","853"],"import React from \"react\";\nimport EditButton from \"../../ui/Buttons/EditButton\";\nimport isEmpty from \"../../../utils/is-empty\";\nimport ReactFlagsSelect from \"react-flags-select\";\n//import \"react-flags-select/css/react-flags-select.css\";\nimport Input from \"../../common/InputGroup\";\nimport SelectListGroup from \"../../common/SelectListGroup\";\nimport ButtonGroup from \"../../common/ButtonGroup/ButtonGroup\";\nimport BranchOfficeView1 from \"./BranchOfficeView1\";\nimport BranchOfficeView2 from \"./BranchOfficeView2\";\nimport BranchOfficeView3 from \"./BranchOfficeView3\";\nimport getCountryName from \"../../../utils/getCountryName\";\nimport {\n  getUnBlockedAfricanCountries,\n  getUnBlockedContinentsOptions,\n} from \"../../../actions/optionActions\";\n\nimport { countryData } from \"../../../utils/countryData\";\n\nconst OfficeView = ({\n  branchOfficeData1,\n  branchOfficeData2,\n  branchOfficeData3,\n  officeData,\n  onClickEdit,\n  onClickSave,\n  onChange,\n  onChange1,\n  onChange2,\n  onChange3,\n  onSubmit,\n  onClickAddBtn,\n  ubcOptions,\n  cbcOptions,\n  onClickRemoveBtn,\n  button,\n  continentOptions,\n  countryOptions,\n  stateOptions,\n  cityOptions,\n  getStatesbyCountry,\n  getStatesbyCountryV,\n  getCountriesbyContint,\n  getCities,\n  ubAfricanCountryOptions,\n  type,\n  getBranch1Countries,\n  getBranch2Countries,\n  getBranch3Countries,\n  getBranch1States,\n  getBranch2States,\n  getBranch3States,\n  getBranch1City,\n  getBranch2City,\n  getBranch3City,\n  bo1Co,\n  bo2Co,\n  bo3Co,\n  bo1St,\n  bo2St,\n  bo3St,\n  bo1Ci,\n  bo2Ci,\n  bo3Ci,\n  t,\n}) => {\n  const code = officeData.country;\n\n  const countryName = getCountryName(code);\n\n  console.log(\"country options\",countryOptions);\n\n  React.useEffect(() => {\n    const e = { target: { value: officeData.continent } };\n    // getCountriesbyContint(e);\n  }, []);\n\n  return (\n    <div className=\"tab-pane\" id=\"office\" role=\"tabpanel\">\n      <div className=\"row\">\n        <div className=\"col text-left align-self-center\">\n          <h4 className=\"font-18 mb-0 tabs-title\">\n            {t.mainOffice}\n            <sup className=\"text-danger\">*</sup>\n          </h4>\n        </div>\n        <div className=\"col text-right\">\n          <EditButton\n            onClick={onClickEdit}\n            disabled={button.editdisabled}\n            type=\"Edit\"\n          >\n            {t.edit}\n          </EditButton>\n        </div>\n      </div>\n      <form id=\"office\" noValidate>\n        <fieldset disabled={button.formdisabled}>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.streetAddress} 01`}</b>\n                </h6>\n                <Input\n                  name=\"streetAdress1\"\n                  value={officeData.streetAdress1}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.streetAddress} 02 (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"streetAdress2\"\n                  value={officeData.streetAdress2}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>Apt,suite,etc.(optional)</b>\n                </h6>\n                <Input\n                  name=\"apiSuite\"\n                  value={officeData.apiSuite}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n\n            {type === \"vendor\" ? (\n              <div className=\"form-group col-md-4\">\n                <div className=\"m-t-20\">\n                  <h6 className=\"text-muted\">\n                    <b>{t.continent}</b>\n                  </h6>\n                  <SelectListGroup\n                    placeholder=\"Continet\"\n                    name=\"continent\"\n                    value={officeData.continent}\n                    onChange={getCountriesbyContint}\n                    options={continentOptions ? continentOptions : []}\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"form-group col-md-4\">\n                <div className=\"m-t-20\">\n                  <h6 className=\"text-muted\">\n                    <b>{t.country}</b>\n                  </h6>\n                  <ReactFlagsSelect\n                    disabled={button.disabled}\n                    alignOptions=\"left\"\n                    name=\"country\"\n                    defaultCountry={officeData.country}\n                    selected={officeData.country}\n                    placeholder={countryName}\n                    selectedSize={17}\n                    optionsSize={17}\n                    countries={ubAfricanCountryOptions}\n                    onSelect={getStatesbyCountry}\n                  />\n                </div>\n              </div>\n            )}\n\n            {type === \"vendor\" ? (\n              <div className=\"form-group col-md-4\">\n                <div className=\"m-t-20\">\n                  <h6 className=\"text-muted\">\n                    <b>{t.country}</b>\n                  </h6>\n                  <SelectListGroup\n                    placeholder={t.country}\n                    name=\"country\"\n                    value={officeData.country}\n                    onChange={getStatesbyCountryV}\n                    options={\n                      countryOptions ? countryOptions : []\n                    }\n                  />\n                </div>\n              </div>\n            ) : null}\n\n\n            {!isEmpty(stateOptions) ? (\n              <div className=\"form-group col-md-4\">\n                <div className=\"m-t-20\">\n                  <h6 className=\"text-muted\">\n                    <b>{t.state}</b>\n                  </h6>\n                  <SelectListGroup\n                    placeholder=\"st\"\n                    name=\"st\"\n                    value={officeData.st}\n                    onChange={getCities}\n                    options={stateOptions ? stateOptions : []}\n                  />\n                </div>\n              </div>\n            ) : null}\n\n            {!isEmpty(cityOptions) ? (\n              <div className=\"form-group col-md-4\">\n                <div className=\"m-t-20\">\n                  <h6 className=\"text-muted\">\n                    <b>{t.city}</b>\n                  </h6>\n                  <SelectListGroup\n                    placeholder=\"city\"\n                    name=\"city\"\n                    value={officeData.city}\n                    onChange={onChange}\n                    options={cityOptions ? cityOptions : []}\n                  />\n                </div>\n              </div>\n            ) : null}\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{t.zipCode}</b>\n                </h6>\n                <Input\n                  name=\"zipCode\"\n                  value={officeData.zipCode}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{t.mobileNo}</b>\n                </h6>\n                <Input\n                  name=\"officeMobileNo\"\n                  value={officeData.officeMobileNo}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.telephone} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"phoneNo2\"\n                  value={officeData.phoneNo2}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.telephone} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"phoneNo3\"\n                  value={officeData.phoneNo3}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.facebookAddress} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"fbAdress\"\n                  value={officeData.fbAdress}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.instagramHandle} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"instaAdress\"\n                  value={officeData.instaAdress}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.twitterHandle} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"twitterAdress\"\n                  value={officeData.twitterAdress}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.youTubeAddress} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"youtubeAdress\"\n                  value={officeData.youtubeAdress}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"m-t-20\">\n                <h6 className=\"text-muted\">\n                  <b>{`${t.linkedInaddress} (${t.optional})`}</b>\n                </h6>\n                <Input\n                  name=\"linkdnAdress\"\n                  value={officeData.linkdnAdress}\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n          </div>\n          {type === \"planner\" ? (\n            <div className=\"mt-4\">\n              {branchOfficeData1.firstBtn ? (\n                <div className=\"m-t-20\">\n                  <button\n                    id=\"first_add_btn\"\n                    className=\"os-btn waves-effect waves-light\"\n                    type=\"save\"\n                    disabled={button.disabled}\n                    onClick={onClickAddBtn}\n                  >\n                    {t.addBranch}\n                  </button>\n                </div>\n              ) : null}\n              <div className=\"bd-top\" />\n              {branchOfficeData1.firstForm ? (\n                <BranchOfficeView1\n                  bo1={branchOfficeData1}\n                  button={button}\n                  onChange={onChange1}\n                  onClickRemoveButton={onClickRemoveBtn}\n                  continentOptions={continentOptions}\n                  countryOptions={bo1Co}\n                  stateOptions={bo1St}\n                  cityOptions={bo1Ci}\n                  getCountriesbyContint={getBranch1Countries}\n                  getStatesbyCountryV={getBranch1States}\n                  getCities={getBranch1City}\n                />\n              ) : null}\n              {branchOfficeData1.firstForm && !branchOfficeData2.secondForm ? (\n                <div className=\"m-t-20\">\n                  <button\n                    id=\"second_add_btn\"\n                    className=\"os-btn waves-effect waves-light\"\n                    type=\"save\"\n                    disabled={button.disabled}\n                    onClick={onClickAddBtn}\n                  >\n                    Add Branch Office\n                  </button>\n                </div>\n              ) : null}\n              {branchOfficeData2.secondForm ? (\n                <BranchOfficeView2\n                  bo2={branchOfficeData2}\n                  button={button}\n                  onChange={onChange2}\n                  onClickRemoveButton={onClickRemoveBtn}\n                  continentOptions={continentOptions}\n                  countryOptions={bo2Co}\n                  stateOptions={bo2St}\n                  cityOptions={bo2Ci}\n                  getCountriesbyContint={getBranch2Countries}\n                  getStatesbyCountryV={getBranch2States}\n                  getCities={getBranch2City}\n                />\n              ) : null}\n              {branchOfficeData2.secondForm && !branchOfficeData3.thirdForm ? (\n                <div className=\"m-t-20\">\n                  <button\n                    id=\"third_add_btn\"\n                    className=\"os-btn waves-effect waves-light\"\n                    type=\"save\"\n                    onClick={onClickAddBtn}\n                    disabled={button.disabled}\n                  >\n                    Add Branch Office\n                  </button>\n                </div>\n              ) : null}\n              {branchOfficeData3.thirdForm ? (\n                <BranchOfficeView3\n                  bo3={branchOfficeData3}\n                  button={button}\n                  onChange={onChange3}\n                  onClickRemoveButton={onClickRemoveBtn}\n                  continentOptions={continentOptions}\n                  countryOptions={bo3Co}\n                  stateOptions={bo3St}\n                  cityOptions={bo3Ci}\n                  getCountriesbyContint={getBranch3Countries}\n                  getStatesbyCountryV={getBranch3States}\n                  getCities={getBranch3City}\n                />\n              ) : null}\n            </div>\n          ) : null}\n        </fieldset>\n      </form>\n      <div className=\"bd-top\" />\n      <ButtonGroup onSubmit={onSubmit} disabled={button.disabled} />\n    </div>\n  );\n};\n\nexport default OfficeView;\n","D:\\website\\planners-directory\\src\\components\\dashboard\\Packages\\Packages-View.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\UploadImages\\UploadImagesView.js",["854","855","856","857"],"import React from \"react\";\nimport EditButton from \"../../ui/Buttons/EditButton\";\nimport SaveButton from \"../../ui/Buttons/SaveButton\";\nimport CancelButton from \"../../ui/Buttons/CancelButton\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport ImageUpload from \"../../common/Image_Upload/ImageUpload\";\n\nconst UploadImagesView = ({\n  data,\n  onClickEdit,\n  onImageSelected,\n  onImageUpload,\n  onSubmit,\n  t\n}) => {\n  return (\n    <div className=\"tab-pane\" id=\"services\" role=\"tabpanel\">\n      <div className=\"row\" style={{ paddingTop: \"1rem\" }}>\n        <div className=\"col-md-12 text-center\">\n          <h4 className=\"font-32 tabs-title\">{t.uploadImage}</h4>\n        </div>\n        <form id=\"images text-center\" onSubmit={onSubmit}>\n          <div className=\"col-md-12\">\n            <div className=\"alert alert-warning\">\n              <strong>{`${t.warning}!`}</strong> {t.uploadImageWarnings}\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            <div\n              className=\"card m-b-30 border-1-gray\"\n              style={{ width: \"50rem\" }}\n            >\n              <div className=\"card-body\">\n                <ImageUpload\n                  type=\"upload\"\n                  label=\"Upload\"\n                  id=\"image1\"\n                  onChangeImage={onImageSelected}\n                  onClick={onImageUpload}\n                  data={data.image1}\n                />\n\n                <ImageUpload\n                  type=\"upload\"\n                  label=\"Upload\"\n                  id=\"image2\"\n                  onChangeImage={onImageSelected}\n                  onClick={onImageUpload}\n                  data={data.image2}\n                />\n\n                <ImageUpload\n                  type=\"upload\"\n                  label=\"Upload\"\n                  id=\"image3\"\n                  onChangeImage={onImageSelected}\n                  onClick={onImageUpload}\n                  data={data.image3}\n                />\n\n                <ImageUpload\n                  type=\"upload\"\n                  label=\"Upload\"\n                  id=\"image4\"\n                  onChangeImage={onImageSelected}\n                  onClick={onImageUpload}\n                  data={data.image4}\n                />\n\n                <ImageUpload\n                  type=\"upload\"\n                  label=\"Upload\"\n                  id=\"image5\"\n                  onChangeImage={onImageSelected}\n                  onClick={onImageUpload}\n                  data={data.image5}\n                />\n              </div>\n            </div>\n            {/* end card */}\n          </div>\n        </form>\n      </div>\n      {/* <div className=\"bd-top\" />\n      <div className=\"osr-btn-group p-b-15  text-center\">\n        <SaveButton label=\"Save\" form=\"images\" type=\"save\" onClick={onSubmit} />\n        <CancelButton label=\"Cancel\" onClick={onClickEdit} type=\"cancel\" />\n      </div> */}\n\n\n  {/* <img src={this.state.file} onLoad={() => console.log(\"loaded\")} />; */}\n\n    </div>\n  );\n};\n\nexport default UploadImagesView;\n","D:\\website\\planners-directory\\src\\components\\dashboard\\confirmPopupModel\\index.js",["858"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport { Editor } from \"react-draft-wysiwyg\";\nconst TermsModal = ({ onCancel, onConfirm, show, onSubmit }) => {\n  const final = () => {\n    onSubmit();\n    onConfirm();\n  };\n\n  return (\n    <Modal\n      isOpen={show}\n      onRequestClose={() => onCancel()}\n      className=\"react-confirm-popup\"\n      overlayClassName=\"react-modal-confirm\"\n    >\n      <div className=\"\">\n        <div className=\"modal-header\">\n          <button type=\"button\" className=\"close\" onClick={() => onCancel()}>\n            <span aria-hidden=\"true\">&times;</span>\n            <span className=\"sr-only\">Close</span>\n          </button>\n        </div>\n\n        <div className=\"about-us-wrap radius-5\">\n          <h5\n            style={{\n              fontSize: \"20px\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n            }}\n            className=\"title\"\n          >\n            You may have some unsaved changes. Are you sure you want to leave\n            the page?\n          </h5>\n          <div className=\"osr-btn-group p-b-15 text-center pt-3\">\n            <button\n              className=\"os-btn waves-effect waves-light save-btn text-uppercase\"\n              onClick={() => {\n                final();\n              }}\n            >\n              Confirm\n            </button>\n            <button\n              className=\"os-btn waves-effect waves-light cancel-btn text-uppercase\"\n              onClick={() => onCancel()}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TermsModal;\n","D:\\website\\planners-directory\\src\\components\\dashboard\\Services\\ServiceItem.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView2.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView1.js",[],"D:\\website\\planners-directory\\src\\components\\dashboard\\Office\\BranchOfficeView3.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\website\\Website.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\website\\header\\Header.js",["859","860","861","862","863","864","865","866","867","868"],"import React, { Component } from \"react\";\nimport { withRouter, Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { resetResults } from \"../../../../actions/common\";\nimport Logo from \"../../../../img/images/logo.png\";\n\nimport Lang1 from \"../../../../img/images/languages-1.png\";\nimport Lang2 from \"../../../../img/images/languages-2.png\";\nimport Lang3 from \"../../../../img/images/languages-3.png\";\nimport Lang4 from \"../../../../img/images/languages-4.png\";\nimport LoginIcon from \"../../../../img/images/login-icon.png\";\n\nimport { getPlanners } from \"../../../../actions/plannerActions\";\nimport { getVendors } from \"../../../../actions/vendorActions\";\n\nimport \"../../../../styles/Header.css\";\nimport { getTranslatedLabels } from \"../../../../actions/common\";\n\nclass Header extends Component {\n  state = { clickedLink: \"\" };\n\n  forVendor = \"\";\n  forPlanner = \"\";\n  forHome = \"\";\n  forAbout = \"\";\n\n  onClickLink = (name) => {\n    console.log(\"PLANNER HIT\");\n    this.props.resetResults();\n    if (name === \"/planners\") {\n      this.setState({ name: \"active-planners\" });\n      this.props.getPlanners();\n    }\n    if (name === \"/vendors\") {\n      this.props.getVendors();\n      this.setState({ name: \"active-vendors\" });\n    }\n    if (name === \"/\") this.setState({ name: \"active-home\" });\n    if (name === \"/about-us\") this.setState({ name: \"active-about\" });\n\n    this.props.history.push(name);\n  };\n\n  componentDidMount() {\n    this.forHome = \"active-home\";\n  }\n\n  componentWillUpdate() {\n    if (this.props.history.location.pathname === \"/planners\") {\n      this.forPlanner = \"active-planners\";\n      this.forVendor = \"\";\n      this.forAbout = \"\";\n      this.forHome = \"\";\n    }\n\n    if (this.props.history.location.pathname === \"/vendors\") {\n      this.forVendor = \"active-vendors\";\n      this.forPlanner = \"\";\n      this.forAbout = \"\";\n      this.forHome = \"\";\n    }\n\n    if (this.props.history.location.pathname === \"/\") {\n      this.forPlanner = \"\";\n      this.forVendor = \"\";\n      this.forHome = \"active-home\";\n      this.forAbout = \"\";\n    }\n\n    if (this.props.history.location.pathname === \"/about-us\") {\n      this.forPlanner = \"\";\n      this.forVendor = \"\";\n      this.forHome = \"\";\n      this.forAbout = \"active-about\";\n    }\n  }\n\n  render() {\n    const { translatedLabels } = this.props;\n\n    // if (this.props.history.location.pathname === \"/\") {\n    //   this.forPlanner = \"\";\n    //   this.forVendor = \"\";\n    //   this.forAbout = \"\";\n    // } else if (this.props.history.location.pathname === \"/planners\") {\n    //   this.forVendor = \"\";\n    //   this.forHome = \"\";\n    //   this.forAbout = \"\";\n    // } else if (this.props.history.location.pathname === \"/vendors\") {\n    //   this.forPlanner = \"\";\n    //   this.forHome = \"\";\n    //   this.forAbout = \"\";\n    // } else if (this.props.history.location.pathname === \"/about-us\") {\n    //   this.forPlanner = \"\";\n    //   this.forHome = \"\";\n    //   this.forVendor = \"\";\n    // }\n    return (\n      <header className=\"fixed-top\" style={{ zIndex: \"5\" }}>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              <img className=\"header-img\" src={Logo} alt=\"Logo\" />\n            </Link>\n            <div className=\"ml-auto\">\n              <ul className=\"lang-list text-right\">\n                <li>\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => this.props.getTranslatedLabels(\"eng\")}\n                  >\n                    <img className=\"header-img\" src={Lang1} alt=\"Lang1\" />\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => this.props.getTranslatedLabels(\"fre\")}\n                  >\n                    <img className=\"header-img\" src={Lang2} alt=\"Lang2\" />\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => this.props.getTranslatedLabels(\"por\")}\n                  >\n                    <img className=\"header-img\" src={Lang3} alt=\"Lang3\" />\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => this.props.getTranslatedLabels(\"swa\")}\n                  >\n                    <img className=\"header-img\" src={Lang4} alt=\"Lang4\" />\n                  </a>\n                </li>\n              </ul>\n              <div className=\"float-left\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#navbarNav\"\n                  aria-controls=\"navbarNav\"\n                  aria-expanded=\"false\"\n                  aria-label=\"Toggle navigation\"\n                >\n                  <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                  <ul className=\"navbar-nav\">\n                    <li className=\"nav-item active\">\n                      <NavLink\n                        // className=\"nav-link\"\n\n                        className={`nav-link planners-link ${\n                          this.forHome === \"active-home\"\n                            ? \"active-planners\"\n                            : \"\"\n                        }`}\n                        to=\"/\"\n                      >\n                        {translatedLabels ? translatedLabels.home : \"Home\"}\n                        <span className=\"sr-only\">(current)</span>\n                      </NavLink>\n                    </li>\n\n                    <li className=\"nav-item\">\n                      <a\n                        className={`nav-link planners-link ${\n                          this.forPlanner === \"active-planners\"\n                            ? \"active-planners\"\n                            : \"\"\n                        }`}\n                        onClick={() => this.onClickLink(\"/planners\")}\n                        to=\"/planners\"\n                      >\n                        {translatedLabels\n                          ? translatedLabels.planners\n                          : \"Planners\"}\n                      </a>\n                    </li>\n\n                    <li className=\"nav-item\">\n                      <a\n                        className={`nav-link vendors-link ${\n                          this.forVendor === \"active-vendors\"\n                            ? \"active-vendors\"\n                            : \"\"\n                        }`}\n                        onClick={() => this.onClickLink(\"/vendors\")}\n                      >\n                        {translatedLabels\n                          ? translatedLabels.vendors\n                          : \"Vendors\"}\n                      </a>\n                    </li>\n\n                    <li className=\"nav-item\">\n                      <NavLink\n                        // className=\"nav-link\"\n                        className={`nav-link planners-link ${\n                          this.forAbout === \"active-about\"\n                            ? \"active-planners\"\n                            : \"\"\n                        }`}\n                        exact\n                        to=\"/about-us\"\n                      >\n                        {translatedLabels\n                          ? translatedLabels.aboutUs\n                          : \"About Us\"}\n                      </NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <Link className=\"float-right login-btn\" to=\"/login\">\n                <img\n                  style={{ maxWidth: \"100%\" }}\n                  src={LoginIcon}\n                  alt=\"Login Icon\"\n                />\n              </Link>\n            </div>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translatedLabels: state.common.translatedLabels\n});\n\nexport default connect(mapStateToProps, {\n  getPlanners,\n  getVendors,\n  getTranslatedLabels,\n  resetResults\n})(withRouter(Header));\n","D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\Footer.js",["869","870","871","872","873","874"],"import React, { Component } from \"react\";\nimport TermsModal from \"./TermsModal\";\nimport PrivacyPolicy from \"./PrivacyPolicy\";\nimport { connect } from \"react-redux\";\n\n\nimport \"../../../../styles/Footer.css\";\n\nclass Footer extends Component {\n  state = {\n    modalIsOpen: false,\n    pIsOpen: false\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  openModalP = () => {\n    this.setState({ pIsOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  closeModalP = () => {\n    this.setState({ pIsOpen: false });\n  };\n\n  onClickEmail = () => {\n    window.location.href = \"mailto:address@dmail.com\";\n  };\n\n  render() {\n    const { t, terms } = this.props;\n    if (!this.props.terms) return null;\n    return (\n      <footer className=\"copyright-footer fixed-bottom\" style={{ zIndex: \"5\" }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 align-self-center\">\n              <ul className=\"short-nav\">\n                <li>\n                  <a onClick={this.openModalP} href=\"javascript:;\">\n                    {t.privacyPolicy}\n                  </a>\n                </li>\n\n                <li>\n                  <a onClick={this.openModal} href=\"javascript:;\">\n                    {t.termsCondition}\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"contact-list social-list text-right\">\n                <li>\n                  <a href=\"/facebook\" target=\"_blank\">\n                    <i className=\"fab fa-facebook-f\" />\n                  </a>\n                </li>\n                <li>\n                  <a href=\"/twitter\" target=\"_blank\">\n                    <i className=\"fab fa-twitter\" />\n                  </a>\n                </li>\n                <li>\n                  <a href=\"/insta\" target=\"_blank\">\n                    <i className=\"fab fa-instagram\" />\n                  </a>\n                </li>\n                <li>\n                  <a href=\"/linkdn\" target=\"_blank\">\n                    <i className=\"fab fa-linkedin-in\" />\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#\" onClick={this.onClickEmail}>\n                    <i className=\"fas fa-envelope\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <TermsModal\n          openModal={this.openModal}\n          closeModal={this.closeModal}\n          modalIsOpen={this.state.modalIsOpen}\n          terms={terms}\n          t={t}\n        />\n\n        {/* <PrivacyPolicy\n          openModal={this.openModalP}\n          closeModal={this.closeModalP}\n          modalIsOpen={this.state.pIsOpen}\n          pp={this.props.pp}\n          t={t}\n        /> */}\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  terms: state.admin.admin.terms,\n  pp: state.admin.admin.pp,\n  t: state.common.translatedLabels\n});\n\nexport default connect(mapStateToProps)(Footer);\n","D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\PrivacyPolicy.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\website\\footer\\TermsModal.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\index.js",[],"D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\AdminSidebar.js",["875"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SidebarLink from \"./Reusable/SidebarLink\";\nimport Logo from \"../../../../img/logo-dark.png\";\nclass AdminSidebar extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"left side-menu\">\n        <button\n          type=\"button\"\n          className=\"button-menu-mobile button-menu-mobile-topbar open-left waves-effect\"\n        >\n          <i className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"left-side-logo d-block d-lg-none\">\n          <div className=\"text-center\">\n            <a href=\"/dashboard/admin/\" className=\"logo\">\n              <img src={Logo} width={130} alt=\"logo\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"sidebar-inner slimscrollleft\">\n          <div id=\"sidebar-menu\">\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\n              <SidebarLink label=\"Search\" linkTo=\"/dashboard/admin\" />\n\n              <SidebarLink\n                label=\"Noticeboard\"\n                linkTo=\"/dashboard/admin/noticeboard\"\n              />\n\n              <SidebarLink\n                label=\"Unique Packages\"\n                linkTo=\"/dashboard/admin/packages\"\n              />\n\n              <SidebarLink\n                label=\"Categories\"\n                linkTo=\"/dashboard/admin/categories\"\n              />\n\n              <SidebarLink\n                label=\"Event Types\"\n                linkTo=\"/dashboard/admin/event-types\"\n              />\n\n              <SidebarLink\n                label=\"Caterings\"\n                linkTo=\"/dashboard/admin/caterings\"\n              />\n\n              <SidebarLink\n                label=\"About Us\"\n                linkTo=\"/dashboard/admin/about-us\"\n              />\n\n              <SidebarLink\n                label=\"T &amp; C\n                \"\n                linkTo=\"/dashboard/admin/terms\"\n              />\n\n              <SidebarLink\n                label=\"Privacy Policy\"\n                linkTo=\"/dashboard/admin/privacy-policy\"\n              />\n\n              <SidebarLink\n                label=\"Upload Images\"\n                linkTo=\"/dashboard/admin/upload-bg\"\n              />\n\n              <SidebarLink\n                label=\"Continents\"\n                linkTo=\"/dashboard/admin/continents\"\n              />\n              <SidebarLink\n                label=\"Countries\"\n                linkTo=\"/dashboard/admin/countries\"\n              />\n\n              <SidebarLink label=\"Stats\" linkTo=\"/dashboard/admin/user-stats\" />\n\n              <SidebarLink label=\"Setting\" linkTo=\"/dashboard/admin/setting\" />\n            </ul>\n          </div>\n          <div className=\"clearfix\" />\n        </div>\n        {/* end sidebarinner */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AdminSidebar);\n","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\VendorSidebar.js",["876","877","878"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\nimport { getAdminImages } from \"../../../../actions/adminActions\";\nimport SidebarLink from \"./Reusable/SidebarLink\";\nimport Logo from \"../../../../img/logo-dark.png\";\nimport { ReactComponent as Icon1 } from \"../../../../img/icon-1.svg\";\nimport { ReactComponent as Icon2 } from \"../../../../img/icon-2.svg\";\nimport { ReactComponent as Icon3 } from \"../../../../img/icon-3.svg\";\nimport { ReactComponent as Icon4 } from \"../../../../img/icon-4.svg\";\nimport { ReactComponent as Icon5 } from \"../../../../img/icon-5.svg\";\nimport { ReactComponent as Icon6 } from \"../../../../img/icon-6.svg\";\nimport { ReactComponent as Icon7 } from \"../../../../img/icon-7.svg\";\nimport { ReactComponent as Icon8 } from \"../../../../img/icon-8.svg\";\n\nclass VendorSidebar extends Component {\n  handleClick = (e) => {\n    if (this.props.disabled) {\n      e.preventDefault();\n    }\n  };\n\n  render() {\n    const { disabled, t } = this.props;\n    return (\n      <div className=\"left side-menu\">\n        <button\n          type=\"button\"\n          className=\"button-menu-mobile button-menu-mobile-topbar open-left waves-effect\"\n        >\n          <i className=\"fa fa-circle\" />\n        </button>\n        <div className=\"left-side-logo d-block d-lg-none\">\n          <div className=\"text-center\">\n            <Link to=\"/dashboard/noticeboard\" className=\"logo\">\n              <img src={Logo} width={130} alt=\"logo\" />\n            </Link>\n          </div>\n        </div>\n        <div className=\"sidebar-inner slimscrollleft\">\n          <div id=\"sidebar-menu\">\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\n              <SidebarLink\n                label={t.noticeBoard}\n                comp={<Icon1 />}\n                linkTo=\"/dashboard/noticeboard\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.profile}\n                comp={<Icon2 />}\n                linkTo=\"/dashboard/profile\"\n              />\n              <SidebarLink\n                label={t.services}\n                comp={<Icon3 />}\n                linkTo=\"/dashboard/services\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.uploadImage}\n                comp={<Icon4 />}\n                linkTo=\"/dashboard/images\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.keywords}\n                comp={<Icon5 />}\n                linkTo=\"/dashboard/keywords\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.office}\n                comp={<Icon6 />}\n                linkTo=\"/dashboard/office\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              {/* <li className=\"nav-item\">\n                <NavLink\n                  exact\n                  to=\"/dashboard/contact\"\n                  className=\"nav-link waves-effect\"\n                >\n                  <i>\n                    <Icon7 />\n                  </i>{\" \"}\n                  <span>Contact Admin</span>\n                </NavLink>\n              </li> */}\n              <SidebarLink\n                label={t.setting}\n                comp={<Icon8 />}\n                linkTo=\"/dashboard/settings\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n            </ul>\n\n            <div className=\"sponsor\">\n              <a\n                href={this.props.sponsorLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                alt=\"Sponsor Link\"\n              >\n                {\" \"}\n                <img\n                  style={{ width: \"230px\", height: \"200px\" }}\n                  src={this.props.sponserBy}\n                  alt=\"Sponser BY\"\n                />\n              </a>\n            </div>\n            <p style={{ color: \"#ff8080\" }}>Sponser By</p>\n          </div>\n          <div className=\"clearfix\" />\n        </div>\n        {/* end sidebarinner */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sponserBy: state.admin.admin.sponsorBy,\n  sponsorLink: state.admin.admin.sponsorLink,\n  t: state.common.dashboardLabels,\n});\n\nexport default connect(mapStateToProps, {\n  getAdminImages,\n})(VendorSidebar);\n","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\PlannerSidebar.js",["879","880","881","882"],"import React, { Component } from \"react\";\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAdminImages } from \"../../../../actions/adminActions\";\nimport SidebarLink from \"./Reusable/SidebarLink\";\nimport Logo from \"../../../../img/logo-dark.png\";\nimport { ReactComponent as Icon1 } from \"../../../../img/icon-1.svg\";\nimport { ReactComponent as Icon2 } from \"../../../../img/icon-2.svg\";\nimport { ReactComponent as Icon3 } from \"../../../../img/icon-3.svg\";\nimport { ReactComponent as Icon4 } from \"../../../../img/icon-4.svg\";\nimport { ReactComponent as Icon5 } from \"../../../../img/icon-5.svg\";\nimport { ReactComponent as Icon6 } from \"../../../../img/icon-6.svg\";\nimport { ReactComponent as Icon7 } from \"../../../../img/icon-7.svg\";\nimport { ReactComponent as Icon8 } from \"../../../../img/icon-8.svg\";\n\nclass PlannerSidebar extends Component {\n  // state = { disableProperty: {} };\n  // componentDidMount() {\n  //   let property = {};\n  //   if (this.props.disabled) {\n  //     property.errors = \"Disabled detected\";\n  //   }\n  //   this.setState({ disableProperty: property });\n  // }\n\n  handleClick = (e) => {\n    if (this.props.disabled) {\n      e.preventDefault();\n    }\n  };\n  render() {\n    const { disabled, t } = this.props;\n    return (\n      <div disabled=\"true\" className=\"left side-menu\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"left-side-logo d-block d-lg-none\">\n          <div className=\"text-center\">\n            <a href=\"index.html\" className=\"logo\">\n              <img src={Logo} width={130} alt=\"logo\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"sidebar-inner slimscrollleft\">\n          <div id=\"sidebar-menu\">\n            <ul className=\"nav nav-tabs\" role=\"tablist\">\n              <SidebarLink\n                label={t.noticeBoard}\n                comp={<Icon1 />}\n                linkTo=\"/dashboard/noticeboard\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.profile}\n                comp={<Icon2 />}\n                linkTo=\"/dashboard/profile\"\n              />\n              <SidebarLink\n                label={t.packages}\n                comp={<Icon3 />}\n                linkTo=\"/dashboard/packages\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.uploadImage}\n                comp={<Icon4 />}\n                linkTo=\"/dashboard/images\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.keywords}\n                comp={<Icon5 />}\n                linkTo=\"/dashboard/keywords\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              <SidebarLink\n                label={t.office}\n                comp={<Icon6 />}\n                linkTo=\"/dashboard/office\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n              {/* <li className=\"nav-item\">\n                <NavLink\n                  exact\n                  to=\"/dashboard/contact\"\n                  className=\"nav-link waves-effect\"\n                >\n                  <i>\n                    <Icon7 />\n                  </i>{\" \"}\n                  <span>Contact Admin</span>\n                </NavLink>\n              </li> */}\n              <SidebarLink\n                label={t.setting}\n                comp={<Icon8 />}\n                linkTo=\"/dashboard/settings\"\n                onClick={this.handleClick}\n                disabled={disabled}\n              />\n            </ul>\n            <div className=\"sponsor\">\n              <a\n                href={this.props.sponsorLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                alt=\"Sponsor Link\"\n              >\n                {\" \"}\n                <img\n                  style={{ width: \"230px\", height: \"200px\" }}\n                  src={this.props.sponserBy}\n                  alt=\"Sponser BY\"\n                />\n              </a>\n            </div>\n            <p style={{ color: \"#ff8080\" }}>Sponser By</p>\n          </div>\n          <div className=\"clearfix\" />\n        </div>\n        {/* end sidebarinner */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sponserBy: state.admin.admin.sponsorBy,\n  sponsorLink: state.admin.admin.sponsorLink,\n  t: state.common.translatedLabels\n});\n\nexport default connect(mapStateToProps, {\n  getAdminImages\n})(PlannerSidebar);\n","D:\\website\\planners-directory\\src\\components\\layout\\dashboard\\sidebar\\Reusable\\SidebarLink.js",[],"D:\\website\\planners-directory\\src\\components\\website\\planners\\Filters\\Filters.js",["883","884"],"import React from \"react\";\r\nimport ReactSelect from \"../../../common/SelectListGroup\";\r\n\r\nconst Filters = ({\r\n  country,\r\n  acountry,\r\n  st,\r\n  city,\r\n  categories,\r\n  targetMarket,\r\n  eventType,\r\n  onChange,\r\n  onSelectCountry,\r\n  onSelectState,\r\n  africanCountriesOptions,\r\n  countriesOptions,\r\n  stateOptions,\r\n  cityOptions,\r\n  categoryOptions,\r\n  targetMarketOptions,\r\n  eventTypeOptions,\r\n  clearFilters,\r\n  pathname,\r\n  filtersExist,\r\n  t,\r\n  disable,\r\n}) => {\r\n  return (\r\n    //aside-area, filter-title\r\n    <div className=\"aside-area\">\r\n      <h5 className=\"filter-title\">\r\n        <i className=\"fas fa-sliders-h\" /> {t.filterBy}\r\n      </h5>\r\n      <form>\r\n        {pathname === \"/vendors\" ? (\r\n          <div className=\"form-group\">\r\n            <ReactSelect\r\n              name=\"country\"\r\n              options={countriesOptions}\r\n              value={country ? country : \"\"}\r\n              onChange={onSelectCountry}\r\n              disabled={disable}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {pathname === \"/planners\" ? (\r\n          <div className=\"form-group\">\r\n            <ReactSelect\r\n              name=\"acountry\"\r\n              options={africanCountriesOptions}\r\n              value={acountry ? acountry : \"\"}\r\n              onChange={onSelectCountry}\r\n              disabled={disable}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        {acountry || country ? (\r\n          <div className=\"form-group\">\r\n            <ReactSelect\r\n              name=\"st\"\r\n              options={stateOptions}\r\n              value={st ? st : \"\"}\r\n              onChange={onSelectState}\r\n              disabled={disable}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {st ? (\r\n          <div className=\"form-group\">\r\n            <ReactSelect\r\n              name=\"city\"\r\n              options={cityOptions}\r\n              value={city ? city : \"\"}\r\n              onChange={onChange}\r\n              placeholder=\"Select City\"\r\n              disabled={disable}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"form-group\">\r\n          <ReactSelect\r\n            name=\"categories\"\r\n            value={categories}\r\n            onChange={onChange}\r\n            options={categoryOptions}\r\n            disabled={disable}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <ReactSelect\r\n            name=\"targetMarket\"\r\n            value={targetMarket}\r\n            onChange={onChange}\r\n            options={targetMarketOptions}\r\n            disabled={disable}\r\n          />\r\n        </div>\r\n        {pathname === \"/planners\" ? (\r\n          <div className=\"\">\r\n            <ReactSelect\r\n              name=\"eventType\"\r\n              value={eventType}\r\n              onChange={onChange}\r\n              options={eventTypeOptions}\r\n              disabled={disable}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {filtersExist() ? (\r\n          <button\r\n            onClick={clearFilters}\r\n            style={{\r\n              color: \"blue\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              display: \"inline-block\",\r\n              backgroundColor: \"inherit\",\r\n              paddingTop: \"3px\",\r\n              paddingBottom: \"3px\",\r\n              paddingLeft: \"30px\",\r\n              paddingRight: \"30px\",\r\n              textAlign: \"center\",\r\n              marginTop: \"10px\",\r\n              marginBottom: \"10px\",\r\n              backgroundColor: \"yellow\",\r\n              border: \"1px solid black\",\r\n              fontSize: \"18px\",\r\n            }}\r\n          >\r\n            {t.clearFilters}\r\n          </button>\r\n        ) : null}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n",{"ruleId":"885","severity":1,"message":"886","line":2,"column":10,"nodeType":"887","messageId":"888","endLine":2,"endColumn":18},{"ruleId":"885","severity":1,"message":"889","line":22,"column":3,"nodeType":"887","messageId":"888","endLine":22,"endColumn":8},{"ruleId":"885","severity":1,"message":"890","line":8,"column":3,"nodeType":"887","messageId":"888","endLine":8,"endColumn":15},{"ruleId":"885","severity":1,"message":"891","line":5,"column":3,"nodeType":"887","messageId":"888","endLine":5,"endColumn":23},{"ruleId":"885","severity":1,"message":"892","line":6,"column":3,"nodeType":"887","messageId":"888","endLine":6,"endColumn":15},{"ruleId":"885","severity":1,"message":"893","line":8,"column":3,"nodeType":"887","messageId":"888","endLine":8,"endColumn":15},{"ruleId":"885","severity":1,"message":"894","line":11,"column":3,"nodeType":"887","messageId":"888","endLine":11,"endColumn":15},{"ruleId":"885","severity":1,"message":"895","line":13,"column":3,"nodeType":"887","messageId":"888","endLine":13,"endColumn":18},{"ruleId":"885","severity":1,"message":"896","line":25,"column":3,"nodeType":"887","messageId":"888","endLine":25,"endColumn":24},{"ruleId":"885","severity":1,"message":"897","line":27,"column":3,"nodeType":"887","messageId":"888","endLine":27,"endColumn":27},{"ruleId":"885","severity":1,"message":"898","line":28,"column":3,"nodeType":"887","messageId":"888","endLine":28,"endColumn":29},{"ruleId":"885","severity":1,"message":"899","line":38,"column":3,"nodeType":"887","messageId":"888","endLine":38,"endColumn":18},{"ruleId":"885","severity":1,"message":"900","line":39,"column":3,"nodeType":"887","messageId":"888","endLine":39,"endColumn":20},{"ruleId":"885","severity":1,"message":"901","line":12,"column":11,"nodeType":"887","messageId":"888","endLine":12,"endColumn":15},{"ruleId":"902","severity":1,"message":"903","line":65,"column":1,"nodeType":"904","endLine":277,"endColumn":2},{"ruleId":"902","severity":1,"message":"903","line":10,"column":1,"nodeType":"904","endLine":21,"endColumn":2},{"ruleId":"902","severity":1,"message":"903","line":13,"column":1,"nodeType":"904","endLine":40,"endColumn":2},{"ruleId":"885","severity":1,"message":"905","line":15,"column":3,"nodeType":"887","messageId":"888","endLine":15,"endColumn":22},{"ruleId":"885","severity":1,"message":"906","line":16,"column":3,"nodeType":"887","messageId":"888","endLine":16,"endColumn":24},{"ruleId":"885","severity":1,"message":"907","line":17,"column":3,"nodeType":"887","messageId":"888","endLine":17,"endColumn":29},{"ruleId":"885","severity":1,"message":"908","line":18,"column":3,"nodeType":"887","messageId":"888","endLine":18,"endColumn":28},{"ruleId":"885","severity":1,"message":"897","line":19,"column":3,"nodeType":"887","messageId":"888","endLine":19,"endColumn":27},{"ruleId":"902","severity":1,"message":"903","line":7,"column":1,"nodeType":"904","endLine":18,"endColumn":2},{"ruleId":"885","severity":1,"message":"909","line":4,"column":3,"nodeType":"887","messageId":"888","endLine":4,"endColumn":18},{"ruleId":"885","severity":1,"message":"910","line":5,"column":3,"nodeType":"887","messageId":"888","endLine":5,"endColumn":15},{"ruleId":"885","severity":1,"message":"911","line":6,"column":3,"nodeType":"887","messageId":"888","endLine":6,"endColumn":19},{"ruleId":"885","severity":1,"message":"912","line":9,"column":3,"nodeType":"887","messageId":"888","endLine":9,"endColumn":28},{"ruleId":"902","severity":1,"message":"903","line":32,"column":1,"nodeType":"904","endLine":82,"endColumn":2},{"ruleId":"885","severity":1,"message":"913","line":8,"column":3,"nodeType":"887","messageId":"888","endLine":8,"endColumn":14},{"ruleId":"885","severity":1,"message":"914","line":9,"column":3,"nodeType":"887","messageId":"888","endLine":9,"endColumn":10},{"ruleId":"885","severity":1,"message":"915","line":10,"column":3,"nodeType":"887","messageId":"888","endLine":10,"endColumn":20},{"ruleId":"902","severity":1,"message":"903","line":29,"column":1,"nodeType":"904","endLine":94,"endColumn":2},{"ruleId":"885","severity":1,"message":"914","line":5,"column":3,"nodeType":"887","messageId":"888","endLine":5,"endColumn":10},{"ruleId":"885","severity":1,"message":"910","line":6,"column":3,"nodeType":"887","messageId":"888","endLine":6,"endColumn":15},{"ruleId":"885","severity":1,"message":"916","line":7,"column":3,"nodeType":"887","messageId":"888","endLine":7,"endColumn":11},{"ruleId":"885","severity":1,"message":"915","line":11,"column":3,"nodeType":"887","messageId":"888","endLine":11,"endColumn":20},{"ruleId":"885","severity":1,"message":"917","line":12,"column":3,"nodeType":"887","messageId":"888","endLine":12,"endColumn":24},{"ruleId":"885","severity":1,"message":"918","line":13,"column":3,"nodeType":"887","messageId":"888","endLine":13,"endColumn":32},{"ruleId":"902","severity":1,"message":"903","line":31,"column":1,"nodeType":"904","endLine":86,"endColumn":2},{"ruleId":"885","severity":1,"message":"919","line":17,"column":3,"nodeType":"887","messageId":"888","endLine":17,"endColumn":37},{"ruleId":"885","severity":1,"message":"920","line":19,"column":10,"nodeType":"887","messageId":"888","endLine":19,"endColumn":17},{"ruleId":"902","severity":1,"message":"903","line":36,"column":1,"nodeType":"904","endLine":212,"endColumn":2},{"ruleId":"885","severity":1,"message":"921","line":1,"column":10,"nodeType":"887","messageId":"888","endLine":1,"endColumn":25},{"ruleId":"902","severity":1,"message":"903","line":8,"column":1,"nodeType":"904","endLine":29,"endColumn":2},{"ruleId":"885","severity":1,"message":"905","line":10,"column":3,"nodeType":"887","messageId":"888","endLine":10,"endColumn":22},{"ruleId":"902","severity":1,"message":"903","line":63,"column":1,"nodeType":"904","endLine":242,"endColumn":2},{"ruleId":"922","severity":1,"message":"923","line":76,"column":5,"nodeType":"924","messageId":"925","endLine":76,"endColumn":13},{"ruleId":"922","severity":1,"message":"923","line":225,"column":5,"nodeType":"924","messageId":"925","endLine":225,"endColumn":13},{"ruleId":"922","severity":1,"message":"923","line":362,"column":5,"nodeType":"924","messageId":"925","endLine":362,"endColumn":13},{"ruleId":"922","severity":1,"message":"923","line":507,"column":5,"nodeType":"924","messageId":"925","endLine":507,"endColumn":13},{"ruleId":"885","severity":1,"message":"926","line":4,"column":8,"nodeType":"887","messageId":"888","endLine":4,"endColumn":20},{"ruleId":"885","severity":1,"message":"927","line":8,"column":8,"nodeType":"887","messageId":"888","endLine":8,"endColumn":14},{"ruleId":"885","severity":1,"message":"926","line":4,"column":8,"nodeType":"887","messageId":"888","endLine":4,"endColumn":20},{"ruleId":"885","severity":1,"message":"927","line":8,"column":8,"nodeType":"887","messageId":"888","endLine":8,"endColumn":14},{"ruleId":"885","severity":1,"message":"926","line":4,"column":8,"nodeType":"887","messageId":"888","endLine":4,"endColumn":20},{"ruleId":"902","severity":1,"message":"928","line":5,"column":1,"nodeType":"904","endLine":24,"endColumn":3},{"ruleId":"885","severity":1,"message":"929","line":1,"column":17,"nodeType":"887","messageId":"888","endLine":1,"endColumn":26},{"ruleId":"885","severity":1,"message":"930","line":5,"column":10,"nodeType":"887","messageId":"888","endLine":5,"endColumn":15},{"ruleId":"885","severity":1,"message":"931","line":78,"column":13,"nodeType":"887","messageId":"888","endLine":78,"endColumn":24},{"ruleId":"885","severity":1,"message":"932","line":5,"column":22,"nodeType":"887","messageId":"888","endLine":5,"endColumn":26},{"ruleId":"933","severity":1,"message":"934","line":67,"column":35,"nodeType":"935","messageId":"925","endLine":67,"endColumn":37},{"ruleId":"885","severity":1,"message":"936","line":79,"column":11,"nodeType":"887","messageId":"888","endLine":79,"endColumn":17},{"ruleId":"885","severity":1,"message":"937","line":83,"column":13,"nodeType":"887","messageId":"888","endLine":83,"endColumn":24},{"ruleId":"885","severity":1,"message":"938","line":84,"column":13,"nodeType":"887","messageId":"888","endLine":84,"endColumn":25},{"ruleId":"933","severity":1,"message":"934","line":87,"column":29,"nodeType":"935","messageId":"925","endLine":87,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":88,"column":22,"nodeType":"935","messageId":"925","endLine":88,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":89,"column":32,"nodeType":"935","messageId":"925","endLine":89,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":99,"column":32,"nodeType":"935","messageId":"925","endLine":99,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":102,"column":39,"nodeType":"935","messageId":"925","endLine":102,"endColumn":41},{"ruleId":"933","severity":1,"message":"939","line":150,"column":22,"nodeType":"935","messageId":"925","endLine":150,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":151,"column":32,"nodeType":"935","messageId":"925","endLine":151,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":161,"column":32,"nodeType":"935","messageId":"925","endLine":161,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":164,"column":39,"nodeType":"935","messageId":"925","endLine":164,"endColumn":41},{"ruleId":"933","severity":1,"message":"934","line":214,"column":29,"nodeType":"935","messageId":"925","endLine":214,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":217,"column":66,"nodeType":"935","messageId":"925","endLine":217,"endColumn":68},{"ruleId":"933","severity":1,"message":"939","line":243,"column":30,"nodeType":"935","messageId":"925","endLine":243,"endColumn":32},{"ruleId":"933","severity":1,"message":"939","line":245,"column":37,"nodeType":"935","messageId":"925","endLine":245,"endColumn":39},{"ruleId":"933","severity":1,"message":"939","line":311,"column":28,"nodeType":"935","messageId":"925","endLine":311,"endColumn":30},{"ruleId":"933","severity":1,"message":"939","line":313,"column":35,"nodeType":"935","messageId":"925","endLine":313,"endColumn":37},{"ruleId":"933","severity":1,"message":"934","line":355,"column":27,"nodeType":"935","messageId":"925","endLine":355,"endColumn":29},{"ruleId":"933","severity":1,"message":"939","line":359,"column":68,"nodeType":"935","messageId":"925","endLine":359,"endColumn":70},{"ruleId":"933","severity":1,"message":"934","line":377,"column":33,"nodeType":"935","messageId":"925","endLine":377,"endColumn":35},{"ruleId":"933","severity":1,"message":"939","line":381,"column":32,"nodeType":"935","messageId":"925","endLine":381,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":412,"column":34,"nodeType":"935","messageId":"925","endLine":412,"endColumn":36},{"ruleId":"933","severity":1,"message":"939","line":414,"column":41,"nodeType":"935","messageId":"925","endLine":414,"endColumn":43},{"ruleId":"933","severity":1,"message":"939","line":464,"column":28,"nodeType":"935","messageId":"925","endLine":464,"endColumn":30},{"ruleId":"933","severity":1,"message":"939","line":466,"column":35,"nodeType":"935","messageId":"925","endLine":466,"endColumn":37},{"ruleId":"933","severity":1,"message":"934","line":501,"column":30,"nodeType":"935","messageId":"925","endLine":501,"endColumn":32},{"ruleId":"933","severity":1,"message":"939","line":505,"column":29,"nodeType":"935","messageId":"925","endLine":505,"endColumn":31},{"ruleId":"933","severity":1,"message":"934","line":555,"column":29,"nodeType":"935","messageId":"925","endLine":555,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":559,"column":28,"nodeType":"935","messageId":"925","endLine":559,"endColumn":30},{"ruleId":"933","severity":1,"message":"934","line":609,"column":29,"nodeType":"935","messageId":"925","endLine":609,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":613,"column":28,"nodeType":"935","messageId":"925","endLine":613,"endColumn":30},{"ruleId":"885","severity":1,"message":"940","line":649,"column":13,"nodeType":"887","messageId":"888","endLine":649,"endColumn":16},{"ruleId":"885","severity":1,"message":"941","line":677,"column":9,"nodeType":"887","messageId":"888","endLine":677,"endColumn":22},{"ruleId":"885","severity":1,"message":"942","line":678,"column":9,"nodeType":"887","messageId":"888","endLine":678,"endColumn":23},{"ruleId":"933","severity":1,"message":"934","line":679,"column":28,"nodeType":"935","messageId":"925","endLine":679,"endColumn":30},{"ruleId":"885","severity":1,"message":"943","line":712,"column":11,"nodeType":"887","messageId":"888","endLine":712,"endColumn":29},{"ruleId":"933","severity":1,"message":"939","line":776,"column":23,"nodeType":"935","messageId":"925","endLine":776,"endColumn":25},{"ruleId":"885","severity":1,"message":"944","line":789,"column":11,"nodeType":"887","messageId":"888","endLine":789,"endColumn":16},{"ruleId":"885","severity":1,"message":"945","line":793,"column":9,"nodeType":"887","messageId":"888","endLine":793,"endColumn":15},{"ruleId":"933","severity":1,"message":"939","line":796,"column":18,"nodeType":"935","messageId":"925","endLine":796,"endColumn":20},{"ruleId":"933","severity":1,"message":"939","line":814,"column":18,"nodeType":"935","messageId":"925","endLine":814,"endColumn":20},{"ruleId":"933","severity":1,"message":"939","line":896,"column":14,"nodeType":"935","messageId":"925","endLine":896,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":899,"column":20,"nodeType":"935","messageId":"925","endLine":899,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":900,"column":20,"nodeType":"935","messageId":"925","endLine":900,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":905,"column":14,"nodeType":"935","messageId":"925","endLine":905,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":917,"column":14,"nodeType":"935","messageId":"925","endLine":917,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":926,"column":60,"nodeType":"935","messageId":"925","endLine":926,"endColumn":62},{"ruleId":"933","severity":1,"message":"939","line":933,"column":24,"nodeType":"935","messageId":"925","endLine":933,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":942,"column":31,"nodeType":"935","messageId":"925","endLine":942,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":951,"column":22,"nodeType":"935","messageId":"925","endLine":951,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":952,"column":22,"nodeType":"935","messageId":"925","endLine":952,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":954,"column":48,"nodeType":"935","messageId":"925","endLine":954,"endColumn":50},{"ruleId":"933","severity":1,"message":"939","line":956,"column":47,"nodeType":"935","messageId":"925","endLine":956,"endColumn":49},{"ruleId":"933","severity":1,"message":"939","line":959,"column":45,"nodeType":"935","messageId":"925","endLine":959,"endColumn":47},{"ruleId":"933","severity":1,"message":"939","line":964,"column":44,"nodeType":"935","messageId":"925","endLine":964,"endColumn":46},{"ruleId":"933","severity":1,"message":"939","line":973,"column":53,"nodeType":"935","messageId":"925","endLine":973,"endColumn":55},{"ruleId":"933","severity":1,"message":"939","line":988,"column":20,"nodeType":"935","messageId":"925","endLine":988,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":993,"column":20,"nodeType":"935","messageId":"925","endLine":993,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":1000,"column":24,"nodeType":"935","messageId":"925","endLine":1000,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":1003,"column":31,"nodeType":"935","messageId":"925","endLine":1003,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":1033,"column":24,"nodeType":"935","messageId":"925","endLine":1033,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":1036,"column":31,"nodeType":"935","messageId":"925","endLine":1036,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":1047,"column":26,"nodeType":"935","messageId":"925","endLine":1047,"endColumn":28},{"ruleId":"933","severity":1,"message":"939","line":1050,"column":26,"nodeType":"935","messageId":"925","endLine":1050,"endColumn":28},{"ruleId":"933","severity":1,"message":"934","line":67,"column":35,"nodeType":"935","messageId":"925","endLine":67,"endColumn":37},{"ruleId":"885","severity":1,"message":"936","line":79,"column":11,"nodeType":"887","messageId":"888","endLine":79,"endColumn":17},{"ruleId":"885","severity":1,"message":"937","line":83,"column":13,"nodeType":"887","messageId":"888","endLine":83,"endColumn":24},{"ruleId":"885","severity":1,"message":"938","line":84,"column":13,"nodeType":"887","messageId":"888","endLine":84,"endColumn":25},{"ruleId":"933","severity":1,"message":"934","line":87,"column":29,"nodeType":"935","messageId":"925","endLine":87,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":88,"column":22,"nodeType":"935","messageId":"925","endLine":88,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":89,"column":32,"nodeType":"935","messageId":"925","endLine":89,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":99,"column":32,"nodeType":"935","messageId":"925","endLine":99,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":102,"column":39,"nodeType":"935","messageId":"925","endLine":102,"endColumn":41},{"ruleId":"933","severity":1,"message":"939","line":150,"column":22,"nodeType":"935","messageId":"925","endLine":150,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":151,"column":32,"nodeType":"935","messageId":"925","endLine":151,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":161,"column":32,"nodeType":"935","messageId":"925","endLine":161,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":164,"column":39,"nodeType":"935","messageId":"925","endLine":164,"endColumn":41},{"ruleId":"933","severity":1,"message":"934","line":214,"column":29,"nodeType":"935","messageId":"925","endLine":214,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":217,"column":66,"nodeType":"935","messageId":"925","endLine":217,"endColumn":68},{"ruleId":"933","severity":1,"message":"939","line":243,"column":30,"nodeType":"935","messageId":"925","endLine":243,"endColumn":32},{"ruleId":"933","severity":1,"message":"939","line":245,"column":37,"nodeType":"935","messageId":"925","endLine":245,"endColumn":39},{"ruleId":"933","severity":1,"message":"939","line":311,"column":28,"nodeType":"935","messageId":"925","endLine":311,"endColumn":30},{"ruleId":"933","severity":1,"message":"939","line":313,"column":35,"nodeType":"935","messageId":"925","endLine":313,"endColumn":37},{"ruleId":"933","severity":1,"message":"934","line":355,"column":27,"nodeType":"935","messageId":"925","endLine":355,"endColumn":29},{"ruleId":"933","severity":1,"message":"939","line":359,"column":68,"nodeType":"935","messageId":"925","endLine":359,"endColumn":70},{"ruleId":"933","severity":1,"message":"934","line":377,"column":33,"nodeType":"935","messageId":"925","endLine":377,"endColumn":35},{"ruleId":"933","severity":1,"message":"939","line":381,"column":32,"nodeType":"935","messageId":"925","endLine":381,"endColumn":34},{"ruleId":"933","severity":1,"message":"939","line":412,"column":34,"nodeType":"935","messageId":"925","endLine":412,"endColumn":36},{"ruleId":"933","severity":1,"message":"939","line":414,"column":41,"nodeType":"935","messageId":"925","endLine":414,"endColumn":43},{"ruleId":"933","severity":1,"message":"939","line":464,"column":28,"nodeType":"935","messageId":"925","endLine":464,"endColumn":30},{"ruleId":"933","severity":1,"message":"939","line":466,"column":35,"nodeType":"935","messageId":"925","endLine":466,"endColumn":37},{"ruleId":"933","severity":1,"message":"934","line":501,"column":30,"nodeType":"935","messageId":"925","endLine":501,"endColumn":32},{"ruleId":"933","severity":1,"message":"939","line":505,"column":29,"nodeType":"935","messageId":"925","endLine":505,"endColumn":31},{"ruleId":"933","severity":1,"message":"934","line":555,"column":29,"nodeType":"935","messageId":"925","endLine":555,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":559,"column":28,"nodeType":"935","messageId":"925","endLine":559,"endColumn":30},{"ruleId":"933","severity":1,"message":"934","line":609,"column":29,"nodeType":"935","messageId":"925","endLine":609,"endColumn":31},{"ruleId":"933","severity":1,"message":"939","line":613,"column":28,"nodeType":"935","messageId":"925","endLine":613,"endColumn":30},{"ruleId":"885","severity":1,"message":"940","line":649,"column":13,"nodeType":"887","messageId":"888","endLine":649,"endColumn":16},{"ruleId":"885","severity":1,"message":"941","line":677,"column":9,"nodeType":"887","messageId":"888","endLine":677,"endColumn":22},{"ruleId":"885","severity":1,"message":"942","line":678,"column":9,"nodeType":"887","messageId":"888","endLine":678,"endColumn":23},{"ruleId":"933","severity":1,"message":"934","line":679,"column":28,"nodeType":"935","messageId":"925","endLine":679,"endColumn":30},{"ruleId":"885","severity":1,"message":"943","line":712,"column":11,"nodeType":"887","messageId":"888","endLine":712,"endColumn":29},{"ruleId":"933","severity":1,"message":"939","line":776,"column":23,"nodeType":"935","messageId":"925","endLine":776,"endColumn":25},{"ruleId":"885","severity":1,"message":"944","line":789,"column":11,"nodeType":"887","messageId":"888","endLine":789,"endColumn":16},{"ruleId":"885","severity":1,"message":"945","line":793,"column":9,"nodeType":"887","messageId":"888","endLine":793,"endColumn":15},{"ruleId":"933","severity":1,"message":"939","line":796,"column":18,"nodeType":"935","messageId":"925","endLine":796,"endColumn":20},{"ruleId":"933","severity":1,"message":"939","line":814,"column":18,"nodeType":"935","messageId":"925","endLine":814,"endColumn":20},{"ruleId":"933","severity":1,"message":"939","line":896,"column":14,"nodeType":"935","messageId":"925","endLine":896,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":899,"column":20,"nodeType":"935","messageId":"925","endLine":899,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":900,"column":20,"nodeType":"935","messageId":"925","endLine":900,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":905,"column":14,"nodeType":"935","messageId":"925","endLine":905,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":917,"column":14,"nodeType":"935","messageId":"925","endLine":917,"endColumn":16},{"ruleId":"933","severity":1,"message":"939","line":926,"column":60,"nodeType":"935","messageId":"925","endLine":926,"endColumn":62},{"ruleId":"933","severity":1,"message":"939","line":933,"column":24,"nodeType":"935","messageId":"925","endLine":933,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":942,"column":31,"nodeType":"935","messageId":"925","endLine":942,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":951,"column":22,"nodeType":"935","messageId":"925","endLine":951,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":952,"column":22,"nodeType":"935","messageId":"925","endLine":952,"endColumn":24},{"ruleId":"933","severity":1,"message":"939","line":954,"column":48,"nodeType":"935","messageId":"925","endLine":954,"endColumn":50},{"ruleId":"933","severity":1,"message":"939","line":956,"column":47,"nodeType":"935","messageId":"925","endLine":956,"endColumn":49},{"ruleId":"933","severity":1,"message":"939","line":959,"column":45,"nodeType":"935","messageId":"925","endLine":959,"endColumn":47},{"ruleId":"933","severity":1,"message":"939","line":964,"column":44,"nodeType":"935","messageId":"925","endLine":964,"endColumn":46},{"ruleId":"933","severity":1,"message":"939","line":973,"column":53,"nodeType":"935","messageId":"925","endLine":973,"endColumn":55},{"ruleId":"933","severity":1,"message":"939","line":988,"column":20,"nodeType":"935","messageId":"925","endLine":988,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":993,"column":20,"nodeType":"935","messageId":"925","endLine":993,"endColumn":22},{"ruleId":"933","severity":1,"message":"939","line":1000,"column":24,"nodeType":"935","messageId":"925","endLine":1000,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":1003,"column":31,"nodeType":"935","messageId":"925","endLine":1003,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":1033,"column":24,"nodeType":"935","messageId":"925","endLine":1033,"endColumn":26},{"ruleId":"933","severity":1,"message":"939","line":1036,"column":31,"nodeType":"935","messageId":"925","endLine":1036,"endColumn":33},{"ruleId":"933","severity":1,"message":"939","line":1047,"column":26,"nodeType":"935","messageId":"925","endLine":1047,"endColumn":28},{"ruleId":"933","severity":1,"message":"939","line":1050,"column":26,"nodeType":"935","messageId":"925","endLine":1050,"endColumn":28},{"ruleId":"885","severity":1,"message":"946","line":1214,"column":7,"nodeType":"887","messageId":"888","endLine":1214,"endColumn":12},{"ruleId":"885","severity":1,"message":"947","line":1215,"column":7,"nodeType":"887","messageId":"888","endLine":1215,"endColumn":18},{"ruleId":"885","severity":1,"message":"948","line":3,"column":8,"nodeType":"887","messageId":"888","endLine":3,"endColumn":15},{"ruleId":"949","severity":1,"message":"950","line":128,"column":27,"nodeType":"951","endLine":128,"endColumn":30},{"ruleId":"885","severity":1,"message":"952","line":4,"column":3,"nodeType":"887","messageId":"888","endLine":4,"endColumn":22},{"ruleId":"885","severity":1,"message":"910","line":5,"column":3,"nodeType":"887","messageId":"888","endLine":5,"endColumn":15},{"ruleId":"885","severity":1,"message":"953","line":8,"column":3,"nodeType":"887","messageId":"888","endLine":8,"endColumn":13},{"ruleId":"885","severity":1,"message":"917","line":12,"column":3,"nodeType":"887","messageId":"888","endLine":12,"endColumn":24},{"ruleId":"885","severity":1,"message":"954","line":18,"column":3,"nodeType":"887","messageId":"888","endLine":18,"endColumn":19},{"ruleId":"885","severity":1,"message":"955","line":8,"column":3,"nodeType":"887","messageId":"888","endLine":8,"endColumn":15},{"ruleId":"885","severity":1,"message":"913","line":13,"column":3,"nodeType":"887","messageId":"888","endLine":13,"endColumn":14},{"ruleId":"885","severity":1,"message":"956","line":16,"column":3,"nodeType":"887","messageId":"888","endLine":16,"endColumn":14},{"ruleId":"885","severity":1,"message":"957","line":20,"column":10,"nodeType":"887","messageId":"888","endLine":20,"endColumn":27},{"ruleId":"885","severity":1,"message":"958","line":25,"column":5,"nodeType":"887","messageId":"888","endLine":25,"endColumn":18},{"ruleId":"885","severity":1,"message":"959","line":28,"column":5,"nodeType":"887","messageId":"888","endLine":28,"endColumn":11},{"ruleId":"885","severity":1,"message":"910","line":6,"column":3,"nodeType":"887","messageId":"888","endLine":6,"endColumn":15},{"ruleId":"885","severity":1,"message":"913","line":7,"column":3,"nodeType":"887","messageId":"888","endLine":7,"endColumn":14},{"ruleId":"885","severity":1,"message":"960","line":10,"column":3,"nodeType":"887","messageId":"888","endLine":10,"endColumn":15},{"ruleId":"885","severity":1,"message":"912","line":11,"column":3,"nodeType":"887","messageId":"888","endLine":11,"endColumn":28},{"ruleId":"885","severity":1,"message":"961","line":14,"column":3,"nodeType":"887","messageId":"888","endLine":14,"endColumn":28},{"ruleId":"885","severity":1,"message":"962","line":16,"column":3,"nodeType":"887","messageId":"888","endLine":16,"endColumn":22},{"ruleId":"949","severity":1,"message":"963","line":27,"column":9,"nodeType":"951","endLine":27,"endColumn":68},{"ruleId":"885","severity":1,"message":"929","line":1,"column":17,"nodeType":"887","messageId":"888","endLine":1,"endColumn":26},{"ruleId":"885","severity":1,"message":"929","line":1,"column":17,"nodeType":"887","messageId":"888","endLine":1,"endColumn":26},{"ruleId":"885","severity":1,"message":"964","line":14,"column":5,"nodeType":"887","messageId":"888","endLine":14,"endColumn":20},{"ruleId":"885","severity":1,"message":"964","line":10,"column":5,"nodeType":"887","messageId":"888","endLine":10,"endColumn":20},{"ruleId":"885","severity":1,"message":"965","line":9,"column":8,"nodeType":"887","messageId":"888","endLine":9,"endColumn":15},{"ruleId":"885","severity":1,"message":"966","line":1,"column":8,"nodeType":"887","messageId":"888","endLine":1,"endColumn":13},{"ruleId":"885","severity":1,"message":"920","line":9,"column":8,"nodeType":"887","messageId":"888","endLine":9,"endColumn":15},{"ruleId":"885","severity":1,"message":"967","line":3,"column":41,"nodeType":"887","messageId":"888","endLine":3,"endColumn":53},{"ruleId":"885","severity":1,"message":"968","line":46,"column":13,"nodeType":"887","messageId":"888","endLine":46,"endColumn":28},{"ruleId":"885","severity":1,"message":"932","line":4,"column":10,"nodeType":"887","messageId":"888","endLine":4,"endColumn":14},{"ruleId":"885","severity":1,"message":"969","line":34,"column":16,"nodeType":"887","messageId":"888","endLine":34,"endColumn":20},{"ruleId":"949","severity":1,"message":"963","line":72,"column":21,"nodeType":"951","endLine":76,"endColumn":22},{"ruleId":"885","severity":1,"message":"970","line":60,"column":11,"nodeType":"887","messageId":"888","endLine":60,"endColumn":17},{"ruleId":"885","severity":1,"message":"965","line":27,"column":8,"nodeType":"887","messageId":"888","endLine":27,"endColumn":15},{"ruleId":"885","severity":1,"message":"929","line":1,"column":17,"nodeType":"887","messageId":"888","endLine":1,"endColumn":26},{"ruleId":"885","severity":1,"message":"971","line":6,"column":8,"nodeType":"887","messageId":"888","endLine":6,"endColumn":13},{"ruleId":"885","severity":1,"message":"972","line":14,"column":3,"nodeType":"887","messageId":"888","endLine":14,"endColumn":31},{"ruleId":"885","severity":1,"message":"973","line":15,"column":3,"nodeType":"887","messageId":"888","endLine":15,"endColumn":32},{"ruleId":"885","severity":1,"message":"974","line":18,"column":10,"nodeType":"887","messageId":"888","endLine":18,"endColumn":21},{"ruleId":"885","severity":1,"message":"975","line":74,"column":11,"nodeType":"887","messageId":"888","endLine":74,"endColumn":12},{"ruleId":"976","severity":1,"message":"977","line":76,"column":6,"nodeType":"978","endLine":76,"endColumn":8,"suggestions":"979"},{"ruleId":"885","severity":1,"message":"980","line":2,"column":8,"nodeType":"887","messageId":"888","endLine":2,"endColumn":18},{"ruleId":"885","severity":1,"message":"981","line":3,"column":8,"nodeType":"887","messageId":"888","endLine":3,"endColumn":18},{"ruleId":"885","severity":1,"message":"926","line":4,"column":8,"nodeType":"887","messageId":"888","endLine":4,"endColumn":20},{"ruleId":"885","severity":1,"message":"965","line":5,"column":8,"nodeType":"887","messageId":"888","endLine":5,"endColumn":15},{"ruleId":"885","severity":1,"message":"982","line":3,"column":10,"nodeType":"887","messageId":"888","endLine":3,"endColumn":16},{"ruleId":"949","severity":1,"message":"963","line":108,"column":19,"nodeType":"951","endLine":111,"endColumn":20},{"ruleId":"983","severity":1,"message":"984","line":109,"column":26,"nodeType":"985","messageId":"986","endLine":109,"endColumn":40},{"ruleId":"949","severity":1,"message":"963","line":116,"column":19,"nodeType":"951","endLine":119,"endColumn":20},{"ruleId":"983","severity":1,"message":"984","line":117,"column":26,"nodeType":"985","messageId":"986","endLine":117,"endColumn":40},{"ruleId":"949","severity":1,"message":"963","line":124,"column":19,"nodeType":"951","endLine":127,"endColumn":20},{"ruleId":"983","severity":1,"message":"984","line":125,"column":26,"nodeType":"985","messageId":"986","endLine":125,"endColumn":40},{"ruleId":"949","severity":1,"message":"963","line":132,"column":19,"nodeType":"951","endLine":135,"endColumn":20},{"ruleId":"983","severity":1,"message":"984","line":133,"column":26,"nodeType":"985","messageId":"986","endLine":133,"endColumn":40},{"ruleId":"949","severity":1,"message":"950","line":171,"column":23,"nodeType":"951","endLine":179,"endColumn":24},{"ruleId":"949","severity":1,"message":"950","line":187,"column":23,"nodeType":"951","endLine":194,"endColumn":24},{"ruleId":"885","severity":1,"message":"987","line":3,"column":8,"nodeType":"887","messageId":"888","endLine":3,"endColumn":21},{"ruleId":"949","severity":1,"message":"963","line":45,"column":19,"nodeType":"951","endLine":45,"endColumn":68},{"ruleId":"983","severity":1,"message":"984","line":45,"column":53,"nodeType":"985","messageId":"986","endLine":45,"endColumn":67},{"ruleId":"949","severity":1,"message":"963","line":51,"column":19,"nodeType":"951","endLine":51,"endColumn":67},{"ruleId":"983","severity":1,"message":"984","line":51,"column":52,"nodeType":"985","messageId":"986","endLine":51,"endColumn":66},{"ruleId":"949","severity":1,"message":"963","line":80,"column":19,"nodeType":"951","endLine":80,"endColumn":59},{"ruleId":"885","severity":1,"message":"932","line":2,"column":10,"nodeType":"887","messageId":"888","endLine":2,"endColumn":14},{"ruleId":"885","severity":1,"message":"988","line":3,"column":10,"nodeType":"887","messageId":"888","endLine":3,"endColumn":17},{"ruleId":"885","severity":1,"message":"989","line":3,"column":25,"nodeType":"887","messageId":"888","endLine":3,"endColumn":35},{"ruleId":"885","severity":1,"message":"990","line":13,"column":28,"nodeType":"887","messageId":"888","endLine":13,"endColumn":33},{"ruleId":"885","severity":1,"message":"988","line":2,"column":10,"nodeType":"887","messageId":"888","endLine":2,"endColumn":17},{"ruleId":"885","severity":1,"message":"932","line":2,"column":19,"nodeType":"887","messageId":"888","endLine":2,"endColumn":23},{"ruleId":"885","severity":1,"message":"989","line":2,"column":25,"nodeType":"887","messageId":"888","endLine":2,"endColumn":35},{"ruleId":"885","severity":1,"message":"990","line":13,"column":28,"nodeType":"887","messageId":"888","endLine":13,"endColumn":33},{"ruleId":"922","severity":1,"message":"991","line":127,"column":15,"nodeType":"924","messageId":"925","endLine":127,"endColumn":30},{"ruleId":"922","severity":1,"message":"992","line":128,"column":15,"nodeType":"924","messageId":"925","endLine":128,"endColumn":21},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'DUMMY_ACTION' is defined but never used.","'GET_CATERING_OPTIONS' is defined but never used.","'GET_ABOUT_US' is defined but never used.","'GET_CATERING' is defined but never used.","'GET_CATEGORY' is defined but never used.","'GET_EVENT_TYPES' is defined but never used.","'GET_AFRICAN_COUNTRIES' is defined but never used.","'GET_UNBLOCKED_CONTINENTS' is defined but never used.","'GET_COUNTRIES_BY_CONTINENT' is defined but never used.","'BLOCK_CONTINENT' is defined but never used.","'UNBLOCK_CONTINENT' is defined but never used.","'diff' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SET_OPTIONS_LOADING' is defined but never used.","'CLEAR_OPTIONS_LOADING' is defined but never used.","'SET_PLANNER_OPTIONS_LOADED' is defined but never used.","'SET_VENDOR_OPTIONS_LOADED' is defined but never used.","'GET_NOTICEBOARD' is defined but never used.","'GET_PLANNERS' is defined but never used.","'GET_PLANNER_ITEM' is defined but never used.","'GET_PLANNER_ITEM_PACKAGES' is defined but never used.","'GET_VENDORS' is defined but never used.","'LOADING' is defined but never used.","'SET_LOADING_FALSE' is defined but never used.","'ON_START' is defined but never used.","'SET_FILTERED_PLANNERS' is defined but never used.","'SET_FILTERED_PLANNERS_TO_NULL' is defined but never used.","'GET_CATEGORIES_OPTIONS_FOR_FILTERS' is defined but never used.","'isEmpty' is defined but never used.","'ON_CLICK_CANCEL' is defined but never used.","no-dupe-keys","Duplicate key 'mobileNo'.","ObjectExpression","unexpected","'CancelButton' is defined but never used.","'Select' is defined but never used.","Assign arrow function to a variable before exporting as module default","'Component' is defined but never used.","'toast' is defined but never used.","'plannerItem' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'search' is defined but never used.","'currentPath' is assigned a value but never used.","'previousPath' is assigned a value but never used.","Expected '===' and instead saw '=='.","'url' is assigned a value but never used.","'currentParams' is assigned a value but never used.","'previousParams' is assigned a value but never used.","'stateMappingObject' is assigned a value but never used.","'label' is assigned a value but never used.","'states' is defined but never used.","'pager' is assigned a value but never used.","'pageOfItems' is assigned a value but never used.","'Reviews' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GET_CURRENT_PLANNER' is defined but never used.","'GET_OFFICE' is defined but never used.","'PROFILE_UNLOADED' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'GET_RESULTS' is defined but never used.","'getCurrentProfile' is defined but never used.","'twitterAdress' is assigned a value but never used.","'images' is assigned a value but never used.","'GET_PACKAGES' is defined but never used.","'GET_RESET_PASSWORD_ERRORS' is defined but never used.","'GET_CURRENT_PROFILE' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BackgroundStyle' is assigned a value but never used.","'Spinner' is defined but never used.","'React' is defined but never used.","'AdminSidebar' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'eventT' is assigned a value but never used.","'axios' is defined but never used.","'getUnBlockedAfricanCountries' is defined but never used.","'getUnBlockedContinentsOptions' is defined but never used.","'countryData' is defined but never used.","'e' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'officeData.continent'. Either include it or remove the dependency array.","ArrayExpression",["993"],"'EditButton' is defined but never used.","'SaveButton' is defined but never used.","'Editor' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'PrivacyPolicy' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","'Icon7' is defined but never used.","Duplicate key 'backgroundColor'.","Duplicate key 'border'.",{"desc":"994","fix":"995"},"Update the dependencies array to be: [officeData.continent]",{"range":"996","text":"997"},[1785,1787],"[officeData.continent]"]